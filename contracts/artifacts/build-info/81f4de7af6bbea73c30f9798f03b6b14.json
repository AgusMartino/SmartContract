{
	"id": "81f4de7af6bbea73c30f9798f03b6b14",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTPatient.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract NFTPatientHealthChain is ERC721, Ownable {\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _tokenIds;\r\n\r\n    IERC20 public myToken; // Contrato del token ERC-20 \"HealthChain\"\r\n    address public housewallet;\r\n\r\n    // Mapping para llevar un registro de los IDs de los NFTs existentes\r\n    mapping(uint256 => bool) private _nftExists;\r\n    mapping(bytes32 => bool) private _completedTransactions;\r\n\r\n    // Evento para registrar información sobre las transacciones\r\n    event NFTTransferred(address indexed from, address indexed to, uint256 tokenId, uint256 tokenAmount, bytes32 txHash);\r\n\r\n    constructor(address _myTokenAddress, address initialOwner, address _housewallet) ERC721(\"NFTPatient\", \"NPNT\") Ownable(initialOwner) {\r\n        myToken = IERC20(_myTokenAddress);\r\n        housewallet = _housewallet;\r\n    }\r\n\r\n    // Función para crear un nuevo NFT con un ID específico\r\n    function mintNFT(address to, uint256 tokenId) public onlyOwner {\r\n        require(!_nftExists[tokenId], \"NFT with this ID already exists\");\r\n\r\n        _mint(to, tokenId);\r\n        _nftExists[tokenId] = true;\r\n    }\r\n\r\n    // Función para transferir un NFT de forma gratuita a una dirección (solo puede hacerlo el propietario del NFT)\r\n    function transferNFT(address to, uint256 tokenId) public {\r\n        address owner = ownerOf(tokenId);\r\n        require(owner == msg.sender, \"You are not the owner of this NFT\");\r\n        _transfer(owner, to, tokenId);\r\n        // Emitir el evento de transferencia de NFT con tokens\r\n        emit NFTTransferred(owner, to, tokenId, 0, bytes32(0));\r\n    }\r\n\r\n    // Función para transferir un NFT a una dirección y pagar con el token ERC-20 \"HealthChain\"\r\n    function transferNFTWithToken(address to, uint256 tokenId, uint256 tokenAmount) public payable returns (bytes32) {\r\n        // owner = medico (vendedor)\r\n        // to = prepaga (comprador)\r\n        address owner = ownerOf(tokenId);\r\n        require(owner == msg.sender, \"You are not the owner of this NFT\");\r\n\r\n        // Transfiere el NFT al destinatario\r\n        _transfer(owner, to, tokenId);\r\n\r\n        // Realiza la transferencia de tokens amount ERC-20 \"HealthChain\"\r\n        require(myToken.transferFrom(to, owner, tokenAmount), \"Token Amount transfer failed\");\r\n\r\n        // Obtener el ID de transacción actual\r\n        bytes32 txHash = keccak256(abi.encodePacked(msg.sender, to, tokenId, tokenAmount, block.number));\r\n\r\n        // Registrar la transacción como pendiente\r\n        _completedTransactions[txHash] = false;\r\n\r\n        // Emitir el evento de transferencia de NFT con tokens\r\n        emit NFTTransferred(owner, to, tokenId, tokenAmount, txHash);\r\n\r\n        return txHash; // Devolver el ID de transacción\r\n    }\r\n\r\n    // Función para consultar el estado de una transacción por su ID de transacción\r\n    function getTransactionStatus(bytes32 txHash) public view returns (bool) {\r\n        // Verificar si la transacción se ha completado (incluida en un bloque)\r\n        return _completedTransactions[txHash];\r\n    }\r\n\r\n    // Función para marcar una transacción como completada (solo para el propietario)\r\n    function markTransactionCompleted(bytes32 txHash) public onlyOwner {\r\n        _completedTransactions[txHash] = true;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 395,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 397,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 401,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 405,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 409,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 415,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH5 0xDF1EC036CE MOD 0xAC DUP16 PUSH28 0xD383388364BE43DA3A629CF6D7505CFD65B8800E2864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH5 0xDF1EC036CE MOD 0xAC DUP16 PUSH28 0xD383388364BE43DA3A629CF6D7505CFD65B8800E2864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTPatient.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD MUL SDIV SWAP4 SWAP11 PUSH3 0xC62DC0 0xB6 0x28 0xC3 SMOD 0x28 PUSH10 0xFEBCDB2AA598C59CA1B6 SWAP3 SWAP12 0x5C CREATE LOG0 KECCAK256 0x2D PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD MUL SDIV SWAP4 SWAP11 PUSH3 0xC62DC0 0xB6 0x28 0xC3 SMOD 0x28 PUSH10 0xFEBCDB2AA598C59CA1B6 SWAP3 SWAP12 0x5C CREATE LOG0 KECCAK256 0x2D PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTPatient.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE KECCAK256 0xD7 RETURNDATACOPY DUP12 0xEC ADDRESS 0xB0 DUP16 0x2C PUSH17 0x1141D20BE1B8E46E019334A391B9D39271 ADD BALANCE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE KECCAK256 0xD7 RETURNDATACOPY DUP12 0xEC ADDRESS 0xB0 DUP16 0x2C PUSH17 0x1141D20BE1B8E46E019334A391B9D39271 ADD BALANCE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTPatient.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x1E 0xEB CALLDATASIZE 0xD0 0xAB LOG0 DUP16 0xDC SELFDESTRUCT 0x2B 0xDD PUSH6 0xC4A46C358E90 DUP11 0x22 EXTCODESIZE GT 0xB9 PUSH2 0xA14B DUP11 GAS 0x2E SWAP13 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x1E 0xEB CALLDATASIZE 0xD0 0xAB LOG0 DUP16 0xDC SELFDESTRUCT 0x2B 0xDD PUSH6 0xC4A46C358E90 DUP11 0x22 EXTCODESIZE GT 0xB9 PUSH2 0xA14B DUP11 GAS 0x2E SWAP13 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTPatient.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTPatient.sol": {
				"NFTPatientHealthChain": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_myTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_housewallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "txHash",
									"type": "bytes32"
								}
							],
							"name": "NFTTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "txHash",
									"type": "bytes32"
								}
							],
							"name": "getTransactionStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "housewallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "txHash",
									"type": "bytes32"
								}
							],
							"name": "markTransactionCompleted",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "mintNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "transferNFTWithToken",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTPatient.sol\":288:3574  contract NFTPatientHealthChain is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTPatient.sol\":916:1137  constructor(address _myTokenAddress, address initialOwner, address _housewallet) ERC721(\"NFTPatient\", \"NPNT\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTPatient.sol\":1034:1046  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4e465450617469656e7400000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4e504e5400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/NFTPatient.sol\":1076:1091  _myTokenAddress */\n  dup3\n    /* \"contracts/NFTPatient.sol\":1059:1066  myToken */\n  0x08\n  0x00\n    /* \"contracts/NFTPatient.sol\":1059:1092  myToken = IERC20(_myTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTPatient.sol\":1117:1129  _housewallet */\n  dup1\n    /* \"contracts/NFTPatient.sol\":1103:1114  housewallet */\n  0x09\n  0x00\n    /* \"contracts/NFTPatient.sol\":1103:1129  housewallet = _housewallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTPatient.sol\":916:1137  constructor(address _myTokenAddress, address initialOwner, address _housewallet) ERC721(\"NFTPatient\", \"NPNT\") Ownable(initialOwner) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/NFTPatient.sol\":288:3574  contract NFTPatientHealthChain is ERC721, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x06\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":966:1085   */\ntag_61:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_63\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_64\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_26\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_65\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_26\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1514:1613   */\ntag_27:\n    /* \"#utility.yul\":1566:1572   */\n  0x00\n    /* \"#utility.yul\":1600:1605   */\n  dup2\n    /* \"#utility.yul\":1594:1606   */\n  mload\n    /* \"#utility.yul\":1584:1606   */\n  swap1\n  pop\n    /* \"#utility.yul\":1514:1613   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1799   */\ntag_28:\n    /* \"#utility.yul\":1667:1744   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1664:1665   */\n  0x00\n    /* \"#utility.yul\":1657:1745   */\n  mstore\n    /* \"#utility.yul\":1764:1768   */\n  0x41\n    /* \"#utility.yul\":1761:1762   */\n  0x04\n    /* \"#utility.yul\":1754:1769   */\n  mstore\n    /* \"#utility.yul\":1788:1792   */\n  0x24\n    /* \"#utility.yul\":1785:1786   */\n  0x00\n    /* \"#utility.yul\":1778:1793   */\n  revert\n    /* \"#utility.yul\":1805:1985   */\ntag_29:\n    /* \"#utility.yul\":1853:1930   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1850:1851   */\n  0x00\n    /* \"#utility.yul\":1843:1931   */\n  mstore\n    /* \"#utility.yul\":1950:1954   */\n  0x22\n    /* \"#utility.yul\":1947:1948   */\n  0x04\n    /* \"#utility.yul\":1940:1955   */\n  mstore\n    /* \"#utility.yul\":1974:1978   */\n  0x24\n    /* \"#utility.yul\":1971:1972   */\n  0x00\n    /* \"#utility.yul\":1964:1979   */\n  revert\n    /* \"#utility.yul\":1991:2311   */\ntag_30:\n    /* \"#utility.yul\":2035:2041   */\n  0x00\n    /* \"#utility.yul\":2072:2073   */\n  0x02\n    /* \"#utility.yul\":2066:2070   */\n  dup3\n    /* \"#utility.yul\":2062:2074   */\n  div\n    /* \"#utility.yul\":2052:2074   */\n  swap1\n  pop\n    /* \"#utility.yul\":2119:2120   */\n  0x01\n    /* \"#utility.yul\":2113:2117   */\n  dup3\n    /* \"#utility.yul\":2109:2121   */\n  and\n    /* \"#utility.yul\":2140:2158   */\n  dup1\n    /* \"#utility.yul\":2130:2211   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2196:2200   */\n  0x7f\n    /* \"#utility.yul\":2188:2194   */\n  dup3\n    /* \"#utility.yul\":2184:2201   */\n  and\n    /* \"#utility.yul\":2174:2201   */\n  swap2\n  pop\n    /* \"#utility.yul\":2130:2211   */\ntag_70:\n    /* \"#utility.yul\":2258:2260   */\n  0x20\n    /* \"#utility.yul\":2250:2256   */\n  dup3\n    /* \"#utility.yul\":2247:2261   */\n  lt\n    /* \"#utility.yul\":2227:2245   */\n  dup2\n    /* \"#utility.yul\":2224:2262   */\n  sub\n    /* \"#utility.yul\":2221:2305   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2277:2295   */\n  tag_72\n  tag_29\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2221:2305   */\ntag_71:\n    /* \"#utility.yul\":2042:2311   */\n  pop\n    /* \"#utility.yul\":1991:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2458   */\ntag_31:\n    /* \"#utility.yul\":2366:2370   */\n  0x00\n    /* \"#utility.yul\":2389:2392   */\n  dup2\n    /* \"#utility.yul\":2381:2392   */\n  swap1\n  pop\n    /* \"#utility.yul\":2412:2415   */\n  dup2\n    /* \"#utility.yul\":2409:2410   */\n  0x00\n    /* \"#utility.yul\":2402:2416   */\n  mstore\n    /* \"#utility.yul\":2446:2450   */\n  0x20\n    /* \"#utility.yul\":2443:2444   */\n  0x00\n    /* \"#utility.yul\":2433:2451   */\n  keccak256\n    /* \"#utility.yul\":2425:2451   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2458   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2464:2557   */\ntag_32:\n    /* \"#utility.yul\":2501:2507   */\n  0x00\n    /* \"#utility.yul\":2548:2550   */\n  0x20\n    /* \"#utility.yul\":2543:2545   */\n  0x1f\n    /* \"#utility.yul\":2536:2541   */\n  dup4\n    /* \"#utility.yul\":2532:2546   */\n  add\n    /* \"#utility.yul\":2528:2551   */\n  div\n    /* \"#utility.yul\":2518:2551   */\n  swap1\n  pop\n    /* \"#utility.yul\":2464:2557   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2563:2670   */\ntag_33:\n    /* \"#utility.yul\":2607:2615   */\n  0x00\n    /* \"#utility.yul\":2657:2662   */\n  dup3\n    /* \"#utility.yul\":2651:2655   */\n  dup3\n    /* \"#utility.yul\":2647:2663   */\n  shl\n    /* \"#utility.yul\":2626:2663   */\n  swap1\n  pop\n    /* \"#utility.yul\":2563:2670   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2676:3069   */\ntag_34:\n    /* \"#utility.yul\":2745:2751   */\n  0x00\n    /* \"#utility.yul\":2795:2796   */\n  0x08\n    /* \"#utility.yul\":2783:2793   */\n  dup4\n    /* \"#utility.yul\":2779:2797   */\n  mul\n    /* \"#utility.yul\":2818:2915   */\n  tag_77\n    /* \"#utility.yul\":2848:2914   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2837:2846   */\n  dup3\n    /* \"#utility.yul\":2818:2915   */\n  tag_33\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2936:2975   */\n  tag_78\n    /* \"#utility.yul\":2966:2974   */\n  dup7\n    /* \"#utility.yul\":2955:2964   */\n  dup4\n    /* \"#utility.yul\":2936:2975   */\n  tag_33\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2924:2975   */\n  swap6\n  pop\n    /* \"#utility.yul\":3008:3012   */\n  dup1\n    /* \"#utility.yul\":3004:3013   */\n  not\n    /* \"#utility.yul\":2997:3002   */\n  dup5\n    /* \"#utility.yul\":2993:3014   */\n  and\n    /* \"#utility.yul\":2984:3014   */\n  swap4\n  pop\n    /* \"#utility.yul\":3057:3061   */\n  dup1\n    /* \"#utility.yul\":3047:3055   */\n  dup7\n    /* \"#utility.yul\":3043:3062   */\n  and\n    /* \"#utility.yul\":3036:3041   */\n  dup5\n    /* \"#utility.yul\":3033:3063   */\n  or\n    /* \"#utility.yul\":3023:3063   */\n  swap3\n  pop\n    /* \"#utility.yul\":2752:3069   */\n  pop\n  pop\n    /* \"#utility.yul\":2676:3069   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3075:3152   */\ntag_35:\n    /* \"#utility.yul\":3112:3119   */\n  0x00\n    /* \"#utility.yul\":3141:3146   */\n  dup2\n    /* \"#utility.yul\":3130:3146   */\n  swap1\n  pop\n    /* \"#utility.yul\":3075:3152   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3158:3218   */\ntag_36:\n    /* \"#utility.yul\":3186:3189   */\n  0x00\n    /* \"#utility.yul\":3207:3212   */\n  dup2\n    /* \"#utility.yul\":3200:3212   */\n  swap1\n  pop\n    /* \"#utility.yul\":3158:3218   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3224:3366   */\ntag_37:\n    /* \"#utility.yul\":3274:3283   */\n  0x00\n    /* \"#utility.yul\":3307:3360   */\n  tag_82\n    /* \"#utility.yul\":3325:3359   */\n  tag_83\n    /* \"#utility.yul\":3334:3358   */\n  tag_84\n    /* \"#utility.yul\":3352:3357   */\n  dup5\n    /* \"#utility.yul\":3334:3358   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3325:3359   */\n  tag_36\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3307:3360   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3294:3360   */\n  swap1\n  pop\n    /* \"#utility.yul\":3224:3366   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3372:3447   */\ntag_38:\n    /* \"#utility.yul\":3415:3418   */\n  0x00\n    /* \"#utility.yul\":3436:3441   */\n  dup2\n    /* \"#utility.yul\":3429:3441   */\n  swap1\n  pop\n    /* \"#utility.yul\":3372:3447   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3453:3722   */\ntag_39:\n    /* \"#utility.yul\":3563:3602   */\n  tag_87\n    /* \"#utility.yul\":3594:3601   */\n  dup4\n    /* \"#utility.yul\":3563:3602   */\n  tag_37\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3624:3715   */\n  tag_88\n    /* \"#utility.yul\":3673:3714   */\n  tag_89\n    /* \"#utility.yul\":3697:3713   */\n  dup3\n    /* \"#utility.yul\":3673:3714   */\n  tag_38\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3665:3671   */\n  dup5\n    /* \"#utility.yul\":3658:3662   */\n  dup5\n    /* \"#utility.yul\":3652:3663   */\n  sload\n    /* \"#utility.yul\":3624:3715   */\n  tag_34\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3618:3622   */\n  dup3\n    /* \"#utility.yul\":3611:3716   */\n  sstore\n    /* \"#utility.yul\":3529:3722   */\n  pop\n    /* \"#utility.yul\":3453:3722   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3728:3801   */\ntag_40:\n    /* \"#utility.yul\":3773:3776   */\n  0x00\n    /* \"#utility.yul\":3728:3801   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3807:3996   */\ntag_41:\n    /* \"#utility.yul\":3884:3916   */\n  tag_92\n  tag_40\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3925:3990   */\n  tag_93\n    /* \"#utility.yul\":3983:3989   */\n  dup2\n    /* \"#utility.yul\":3975:3981   */\n  dup5\n    /* \"#utility.yul\":3969:3973   */\n  dup5\n    /* \"#utility.yul\":3925:3990   */\n  tag_39\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3860:3996   */\n  pop\n    /* \"#utility.yul\":3807:3996   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4002:4188   */\ntag_42:\n    /* \"#utility.yul\":4062:4182   */\ntag_95:\n    /* \"#utility.yul\":4079:4082   */\n  dup2\n    /* \"#utility.yul\":4072:4077   */\n  dup2\n    /* \"#utility.yul\":4069:4083   */\n  lt\n    /* \"#utility.yul\":4062:4182   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4133:4172   */\n  tag_98\n    /* \"#utility.yul\":4170:4171   */\n  0x00\n    /* \"#utility.yul\":4163:4168   */\n  dup3\n    /* \"#utility.yul\":4133:4172   */\n  tag_41\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4106:4107   */\n  0x01\n    /* \"#utility.yul\":4099:4104   */\n  dup2\n    /* \"#utility.yul\":4095:4108   */\n  add\n    /* \"#utility.yul\":4086:4108   */\n  swap1\n  pop\n    /* \"#utility.yul\":4062:4182   */\n  jump(tag_95)\ntag_97:\n    /* \"#utility.yul\":4002:4188   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4194:4737   */\ntag_43:\n    /* \"#utility.yul\":4295:4297   */\n  0x1f\n    /* \"#utility.yul\":4290:4293   */\n  dup3\n    /* \"#utility.yul\":4287:4298   */\n  gt\n    /* \"#utility.yul\":4284:4730   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4329:4367   */\n  tag_101\n    /* \"#utility.yul\":4361:4366   */\n  dup2\n    /* \"#utility.yul\":4329:4367   */\n  tag_31\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4413:4442   */\n  tag_102\n    /* \"#utility.yul\":4431:4441   */\n  dup5\n    /* \"#utility.yul\":4413:4442   */\n  tag_32\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4403:4411   */\n  dup2\n    /* \"#utility.yul\":4399:4443   */\n  add\n    /* \"#utility.yul\":4596:4598   */\n  0x20\n    /* \"#utility.yul\":4584:4594   */\n  dup6\n    /* \"#utility.yul\":4581:4599   */\n  lt\n    /* \"#utility.yul\":4578:4627   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4617:4625   */\n  dup2\n    /* \"#utility.yul\":4602:4625   */\n  swap1\n  pop\n    /* \"#utility.yul\":4578:4627   */\ntag_103:\n    /* \"#utility.yul\":4640:4720   */\n  tag_104\n    /* \"#utility.yul\":4696:4718   */\n  tag_105\n    /* \"#utility.yul\":4714:4717   */\n  dup6\n    /* \"#utility.yul\":4696:4718   */\n  tag_32\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4686:4694   */\n  dup4\n    /* \"#utility.yul\":4682:4719   */\n  add\n    /* \"#utility.yul\":4669:4680   */\n  dup3\n    /* \"#utility.yul\":4640:4720   */\n  tag_42\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4299:4730   */\n  pop\n  pop\n    /* \"#utility.yul\":4284:4730   */\ntag_100:\n    /* \"#utility.yul\":4194:4737   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4743:4860   */\ntag_44:\n    /* \"#utility.yul\":4797:4805   */\n  0x00\n    /* \"#utility.yul\":4847:4852   */\n  dup3\n    /* \"#utility.yul\":4841:4845   */\n  dup3\n    /* \"#utility.yul\":4837:4853   */\n  shr\n    /* \"#utility.yul\":4816:4853   */\n  swap1\n  pop\n    /* \"#utility.yul\":4743:4860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4866:5035   */\ntag_45:\n    /* \"#utility.yul\":4910:4916   */\n  0x00\n    /* \"#utility.yul\":4943:4994   */\n  tag_108\n    /* \"#utility.yul\":4991:4992   */\n  0x00\n    /* \"#utility.yul\":4987:4993   */\n  not\n    /* \"#utility.yul\":4979:4984   */\n  dup5\n    /* \"#utility.yul\":4976:4977   */\n  0x08\n    /* \"#utility.yul\":4972:4985   */\n  mul\n    /* \"#utility.yul\":4943:4994   */\n  tag_44\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4939:4995   */\n  not\n    /* \"#utility.yul\":5024:5028   */\n  dup1\n    /* \"#utility.yul\":5018:5022   */\n  dup4\n    /* \"#utility.yul\":5014:5029   */\n  and\n    /* \"#utility.yul\":5004:5029   */\n  swap2\n  pop\n    /* \"#utility.yul\":4917:5035   */\n  pop\n    /* \"#utility.yul\":4866:5035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5040:5335   */\ntag_46:\n    /* \"#utility.yul\":5116:5120   */\n  0x00\n    /* \"#utility.yul\":5262:5291   */\n  tag_110\n    /* \"#utility.yul\":5287:5290   */\n  dup4\n    /* \"#utility.yul\":5281:5285   */\n  dup4\n    /* \"#utility.yul\":5262:5291   */\n  tag_45\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5254:5291   */\n  swap2\n  pop\n    /* \"#utility.yul\":5324:5327   */\n  dup3\n    /* \"#utility.yul\":5321:5322   */\n  0x02\n    /* \"#utility.yul\":5317:5328   */\n  mul\n    /* \"#utility.yul\":5311:5315   */\n  dup3\n    /* \"#utility.yul\":5308:5329   */\n  or\n    /* \"#utility.yul\":5300:5329   */\n  swap1\n  pop\n    /* \"#utility.yul\":5040:5335   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5340:6735   */\ntag_9:\n    /* \"#utility.yul\":5457:5494   */\n  tag_112\n    /* \"#utility.yul\":5490:5493   */\n  dup3\n    /* \"#utility.yul\":5457:5494   */\n  tag_27\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5559:5577   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5551:5557   */\n  dup2\n    /* \"#utility.yul\":5548:5578   */\n  gt\n    /* \"#utility.yul\":5545:5601   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5581:5599   */\n  tag_114\n  tag_28\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5545:5601   */\ntag_113:\n    /* \"#utility.yul\":5625:5663   */\n  tag_115\n    /* \"#utility.yul\":5657:5661   */\n  dup3\n    /* \"#utility.yul\":5651:5662   */\n  sload\n    /* \"#utility.yul\":5625:5663   */\n  tag_30\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5710:5777   */\n  tag_116\n    /* \"#utility.yul\":5770:5776   */\n  dup3\n    /* \"#utility.yul\":5762:5768   */\n  dup3\n    /* \"#utility.yul\":5756:5760   */\n  dup6\n    /* \"#utility.yul\":5710:5777   */\n  tag_43\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5828:5832   */\n  0x20\n    /* \"#utility.yul\":5815:5832   */\n  swap1\n  pop\n    /* \"#utility.yul\":5860:5862   */\n  0x1f\n    /* \"#utility.yul\":5852:5858   */\n  dup4\n    /* \"#utility.yul\":5849:5863   */\n  gt\n    /* \"#utility.yul\":5877:5878   */\n  0x01\n    /* \"#utility.yul\":5872:6490   */\n  dup2\n  eq\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6534:6535   */\n  0x00\n    /* \"#utility.yul\":6551:6557   */\n  dup5\n    /* \"#utility.yul\":6548:6625   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6600:6609   */\n  dup3\n    /* \"#utility.yul\":6595:6598   */\n  dup8\n    /* \"#utility.yul\":6591:6610   */\n  add\n    /* \"#utility.yul\":6585:6611   */\n  mload\n    /* \"#utility.yul\":6576:6611   */\n  swap1\n  pop\n    /* \"#utility.yul\":6548:6625   */\ntag_119:\n    /* \"#utility.yul\":6651:6718   */\n  tag_120\n    /* \"#utility.yul\":6711:6717   */\n  dup6\n    /* \"#utility.yul\":6704:6709   */\n  dup3\n    /* \"#utility.yul\":6651:6718   */\n  tag_46\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6645:6649   */\n  dup7\n    /* \"#utility.yul\":6638:6719   */\n  sstore\n    /* \"#utility.yul\":6507:6729   */\n  pop\n    /* \"#utility.yul\":5842:6729   */\n  jump(tag_117)\n    /* \"#utility.yul\":5872:6490   */\ntag_118:\n    /* \"#utility.yul\":5924:5928   */\n  0x1f\n    /* \"#utility.yul\":5920:5929   */\n  not\n    /* \"#utility.yul\":5912:5918   */\n  dup5\n    /* \"#utility.yul\":5908:5930   */\n  and\n    /* \"#utility.yul\":5958:5995   */\n  tag_121\n    /* \"#utility.yul\":5990:5994   */\n  dup7\n    /* \"#utility.yul\":5958:5995   */\n  tag_31\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6017:6018   */\n  0x00\n    /* \"#utility.yul\":6031:6239   */\ntag_122:\n    /* \"#utility.yul\":6045:6052   */\n  dup3\n    /* \"#utility.yul\":6042:6043   */\n  dup2\n    /* \"#utility.yul\":6039:6053   */\n  lt\n    /* \"#utility.yul\":6031:6239   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":6124:6133   */\n  dup5\n    /* \"#utility.yul\":6119:6122   */\n  dup10\n    /* \"#utility.yul\":6115:6134   */\n  add\n    /* \"#utility.yul\":6109:6135   */\n  mload\n    /* \"#utility.yul\":6101:6107   */\n  dup3\n    /* \"#utility.yul\":6094:6136   */\n  sstore\n    /* \"#utility.yul\":6175:6176   */\n  0x01\n    /* \"#utility.yul\":6167:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6177   */\n  add\n    /* \"#utility.yul\":6153:6177   */\n  swap2\n  pop\n    /* \"#utility.yul\":6222:6224   */\n  0x20\n    /* \"#utility.yul\":6211:6220   */\n  dup6\n    /* \"#utility.yul\":6207:6225   */\n  add\n    /* \"#utility.yul\":6194:6225   */\n  swap5\n  pop\n    /* \"#utility.yul\":6068:6072   */\n  0x20\n    /* \"#utility.yul\":6065:6066   */\n  dup2\n    /* \"#utility.yul\":6061:6073   */\n  add\n    /* \"#utility.yul\":6056:6073   */\n  swap1\n  pop\n    /* \"#utility.yul\":6031:6239   */\n  jump(tag_122)\ntag_124:\n    /* \"#utility.yul\":6267:6273   */\n  dup7\n    /* \"#utility.yul\":6258:6265   */\n  dup4\n    /* \"#utility.yul\":6255:6274   */\n  lt\n    /* \"#utility.yul\":6252:6431   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6325:6334   */\n  dup5\n    /* \"#utility.yul\":6320:6323   */\n  dup10\n    /* \"#utility.yul\":6316:6335   */\n  add\n    /* \"#utility.yul\":6310:6336   */\n  mload\n    /* \"#utility.yul\":6368:6416   */\n  tag_126\n    /* \"#utility.yul\":6410:6414   */\n  0x1f\n    /* \"#utility.yul\":6402:6408   */\n  dup10\n    /* \"#utility.yul\":6398:6415   */\n  and\n    /* \"#utility.yul\":6387:6396   */\n  dup3\n    /* \"#utility.yul\":6368:6416   */\n  tag_45\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6360:6366   */\n  dup4\n    /* \"#utility.yul\":6353:6417   */\n  sstore\n    /* \"#utility.yul\":6275:6431   */\n  pop\n    /* \"#utility.yul\":6252:6431   */\ntag_125:\n    /* \"#utility.yul\":6477:6478   */\n  0x01\n    /* \"#utility.yul\":6473:6474   */\n  0x02\n    /* \"#utility.yul\":6465:6471   */\n  dup9\n    /* \"#utility.yul\":6461:6475   */\n  mul\n    /* \"#utility.yul\":6457:6479   */\n  add\n    /* \"#utility.yul\":6451:6455   */\n  dup9\n    /* \"#utility.yul\":6444:6480   */\n  sstore\n    /* \"#utility.yul\":5879:6490   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5842:6729   */\ntag_117:\n  pop\n    /* \"#utility.yul\":5432:6735   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5340:6735   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6741:6859   */\ntag_47:\n    /* \"#utility.yul\":6828:6852   */\n  tag_128\n    /* \"#utility.yul\":6846:6851   */\n  dup2\n    /* \"#utility.yul\":6828:6852   */\n  tag_24\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6823:6826   */\n  dup3\n    /* \"#utility.yul\":6816:6853   */\n  mstore\n    /* \"#utility.yul\":6741:6859   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6865:7087   */\ntag_14:\n    /* \"#utility.yul\":6958:6962   */\n  0x00\n    /* \"#utility.yul\":6996:6998   */\n  0x20\n    /* \"#utility.yul\":6985:6994   */\n  dup3\n    /* \"#utility.yul\":6981:6999   */\n  add\n    /* \"#utility.yul\":6973:6999   */\n  swap1\n  pop\n    /* \"#utility.yul\":7009:7080   */\n  tag_130\n    /* \"#utility.yul\":7077:7078   */\n  0x00\n    /* \"#utility.yul\":7066:7075   */\n  dup4\n    /* \"#utility.yul\":7062:7079   */\n  add\n    /* \"#utility.yul\":7053:7059   */\n  dup5\n    /* \"#utility.yul\":7009:7080   */\n  tag_47\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6865:7087   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTPatient.sol\":288:3574  contract NFTPatientHealthChain is ERC721, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTPatient.sol\":288:3574  contract NFTPatientHealthChain is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x863b3894\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb8fcf937\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_26:\n      dup1\n      0x863b3894\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8f3481c0\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x94407465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x94ab67fe\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_25:\n      dup1\n      0x37418972\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x37418972\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3c168eab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/NFTPatient.sol\":3448:3571  function markTransactionCompleted(bytes32 txHash) public onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/NFTPatient.sol\":1208:1422  function mintNFT(address to, uint256 tokenId) public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/NFTPatient.sol\":501:527  address public housewallet */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTPatient.sol\":2009:3044  function transferNFTWithToken(address to, uint256 tokenId, uint256 tokenAmount) public payable returns (bytes32) {... */\n    tag_15:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTPatient.sol\":3140:3351  function getTransactionStatus(bytes32 txHash) public view returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTPatient.sol\":1549:1902  function transferNFT(address to, uint256 tokenId) public {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n    tag_113:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n    tag_118:\n      stop\n        /* \"contracts/NFTPatient.sol\":430:451  IERC20 public myToken */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      tag_136\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n    tag_139:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_143\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_144\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_149\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_155:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTPatient.sol\":3448:3571  function markTransactionCompleted(bytes32 txHash) public onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/NFTPatient.sol\":3559:3563  true */\n      0x01\n        /* \"contracts/NFTPatient.sol\":3526:3548  _completedTransactions */\n      0x0b\n        /* \"contracts/NFTPatient.sol\":3526:3556  _completedTransactions[txHash] */\n      0x00\n        /* \"contracts/NFTPatient.sol\":3549:3555  txHash */\n      dup4\n        /* \"contracts/NFTPatient.sol\":3526:3556  _completedTransactions[txHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTPatient.sol\":3526:3563  _completedTransactions[txHash] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTPatient.sol\":3448:3571  function markTransactionCompleted(bytes32 txHash) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTPatient.sol\":1208:1422  function mintNFT(address to, uint256 tokenId) public onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/NFTPatient.sol\":1291:1301  _nftExists */\n      0x0a\n        /* \"contracts/NFTPatient.sol\":1291:1310  _nftExists[tokenId] */\n      0x00\n        /* \"contracts/NFTPatient.sol\":1302:1309  tokenId */\n      dup3\n        /* \"contracts/NFTPatient.sol\":1291:1310  _nftExists[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTPatient.sol\":1290:1310  !_nftExists[tokenId] */\n      iszero\n        /* \"contracts/NFTPatient.sol\":1282:1346  require(!_nftExists[tokenId], \"NFT with this ID already exists\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/NFTPatient.sol\":1359:1377  _mint(to, tokenId) */\n      tag_183\n        /* \"contracts/NFTPatient.sol\":1365:1367  to */\n      dup3\n        /* \"contracts/NFTPatient.sol\":1369:1376  tokenId */\n      dup3\n        /* \"contracts/NFTPatient.sol\":1359:1364  _mint */\n      tag_184\n        /* \"contracts/NFTPatient.sol\":1359:1377  _mint(to, tokenId) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/NFTPatient.sol\":1410:1414  true */\n      0x01\n        /* \"contracts/NFTPatient.sol\":1388:1398  _nftExists */\n      0x0a\n        /* \"contracts/NFTPatient.sol\":1388:1407  _nftExists[tokenId] */\n      0x00\n        /* \"contracts/NFTPatient.sol\":1399:1406  tokenId */\n      dup4\n        /* \"contracts/NFTPatient.sol\":1388:1407  _nftExists[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTPatient.sol\":1388:1414  _nftExists[tokenId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTPatient.sol\":1208:1422  function mintNFT(address to, uint256 tokenId) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTPatient.sol\":501:527  address public housewallet */\n    tag_87:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTPatient.sol\":2009:3044  function transferNFTWithToken(address to, uint256 tokenId, uint256 tokenAmount) public payable returns (bytes32) {... */\n    tag_96:\n        /* \"contracts/NFTPatient.sol\":2113:2120  bytes32 */\n      0x00\n        /* \"contracts/NFTPatient.sol\":2208:2221  address owner */\n      dup1\n        /* \"contracts/NFTPatient.sol\":2224:2240  ownerOf(tokenId) */\n      tag_199\n        /* \"contracts/NFTPatient.sol\":2232:2239  tokenId */\n      dup5\n        /* \"contracts/NFTPatient.sol\":2224:2231  ownerOf */\n      tag_73\n        /* \"contracts/NFTPatient.sol\":2224:2240  ownerOf(tokenId) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/NFTPatient.sol\":2208:2240  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/NFTPatient.sol\":2268:2278  msg.sender */\n      caller\n        /* \"contracts/NFTPatient.sol\":2259:2278  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTPatient.sol\":2259:2264  owner */\n      dup2\n        /* \"contracts/NFTPatient.sol\":2259:2278  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTPatient.sol\":2251:2316  require(owner == msg.sender, \"You are not the owner of this NFT\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/NFTPatient.sol\":2375:2404  _transfer(owner, to, tokenId) */\n      tag_203\n        /* \"contracts/NFTPatient.sol\":2385:2390  owner */\n      dup2\n        /* \"contracts/NFTPatient.sol\":2392:2394  to */\n      dup7\n        /* \"contracts/NFTPatient.sol\":2396:2403  tokenId */\n      dup7\n        /* \"contracts/NFTPatient.sol\":2375:2384  _transfer */\n      tag_204\n        /* \"contracts/NFTPatient.sol\":2375:2404  _transfer(owner, to, tokenId) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/NFTPatient.sol\":2500:2507  myToken */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTPatient.sol\":2500:2520  myToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/NFTPatient.sol\":2521:2523  to */\n      dup7\n        /* \"contracts/NFTPatient.sol\":2525:2530  owner */\n      dup4\n        /* \"contracts/NFTPatient.sol\":2532:2543  tokenAmount */\n      dup7\n        /* \"contracts/NFTPatient.sol\":2500:2544  myToken.transferFrom(to, owner, tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"contracts/NFTPatient.sol\":2492:2577  require(myToken.transferFrom(to, owner, tokenAmount), \"Token Amount transfer failed\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"contracts/NFTPatient.sol\":2639:2653  bytes32 txHash */\n      0x00\n        /* \"contracts/NFTPatient.sol\":2683:2693  msg.sender */\n      caller\n        /* \"contracts/NFTPatient.sol\":2695:2697  to */\n      dup7\n        /* \"contracts/NFTPatient.sol\":2699:2706  tokenId */\n      dup7\n        /* \"contracts/NFTPatient.sol\":2708:2719  tokenAmount */\n      dup7\n        /* \"contracts/NFTPatient.sol\":2721:2733  block.number */\n      number\n        /* \"contracts/NFTPatient.sol\":2666:2734  abi.encodePacked(msg.sender, to, tokenId, tokenAmount, block.number) */\n      add(0x20, mload(0x40))\n      tag_214\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/NFTPatient.sol\":2656:2735  keccak256(abi.encodePacked(msg.sender, to, tokenId, tokenAmount, block.number)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/NFTPatient.sol\":2639:2735  bytes32 txHash = keccak256(abi.encodePacked(msg.sender, to, tokenId, tokenAmount, block.number)) */\n      swap1\n      pop\n        /* \"contracts/NFTPatient.sol\":2834:2839  false */\n      0x00\n        /* \"contracts/NFTPatient.sol\":2801:2823  _completedTransactions */\n      0x0b\n        /* \"contracts/NFTPatient.sol\":2801:2831  _completedTransactions[txHash] */\n      0x00\n        /* \"contracts/NFTPatient.sol\":2824:2830  txHash */\n      dup4\n        /* \"contracts/NFTPatient.sol\":2801:2831  _completedTransactions[txHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTPatient.sol\":2801:2839  _completedTransactions[txHash] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTPatient.sol\":2943:2945  to */\n      dup6\n        /* \"contracts/NFTPatient.sol\":2921:2976  NFTTransferred(owner, to, tokenId, tokenAmount, txHash) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTPatient.sol\":2936:2941  owner */\n      dup3\n        /* \"contracts/NFTPatient.sol\":2921:2976  NFTTransferred(owner, to, tokenId, tokenAmount, txHash) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9f9ac6bca37e427696541548195017f8d7569c1bdff1ba5b97d815bfb9c11f8c\n        /* \"contracts/NFTPatient.sol\":2947:2954  tokenId */\n      dup8\n        /* \"contracts/NFTPatient.sol\":2956:2967  tokenAmount */\n      dup8\n        /* \"contracts/NFTPatient.sol\":2969:2975  txHash */\n      dup6\n        /* \"contracts/NFTPatient.sol\":2921:2976  NFTTransferred(owner, to, tokenId, tokenAmount, txHash) */\n      mload(0x40)\n      tag_216\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTPatient.sol\":2996:3002  txHash */\n      dup1\n        /* \"contracts/NFTPatient.sol\":2989:3002  return txHash */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/NFTPatient.sol\":2009:3044  function transferNFTWithToken(address to, uint256 tokenId, uint256 tokenAmount) public payable returns (bytes32) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTPatient.sol\":3140:3351  function getTransactionStatus(bytes32 txHash) public view returns (bool) {... */\n    tag_102:\n        /* \"contracts/NFTPatient.sol\":3207:3211  bool */\n      0x00\n        /* \"contracts/NFTPatient.sol\":3313:3335  _completedTransactions */\n      0x0b\n        /* \"contracts/NFTPatient.sol\":3313:3343  _completedTransactions[txHash] */\n      0x00\n        /* \"contracts/NFTPatient.sol\":3336:3342  txHash */\n      dup4\n        /* \"contracts/NFTPatient.sol\":3313:3343  _completedTransactions[txHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTPatient.sol\":3306:3343  return _completedTransactions[txHash] */\n      swap1\n      pop\n        /* \"contracts/NFTPatient.sol\":3140:3351  function getTransactionStatus(bytes32 txHash) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTPatient.sol\":1549:1902  function transferNFT(address to, uint256 tokenId) public {... */\n    tag_107:\n        /* \"contracts/NFTPatient.sol\":1617:1630  address owner */\n      0x00\n        /* \"contracts/NFTPatient.sol\":1633:1649  ownerOf(tokenId) */\n      tag_220\n        /* \"contracts/NFTPatient.sol\":1641:1648  tokenId */\n      dup3\n        /* \"contracts/NFTPatient.sol\":1633:1640  ownerOf */\n      tag_73\n        /* \"contracts/NFTPatient.sol\":1633:1649  ownerOf(tokenId) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/NFTPatient.sol\":1617:1649  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/NFTPatient.sol\":1677:1687  msg.sender */\n      caller\n        /* \"contracts/NFTPatient.sol\":1668:1687  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTPatient.sol\":1668:1673  owner */\n      dup2\n        /* \"contracts/NFTPatient.sol\":1668:1687  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTPatient.sol\":1660:1725  require(owner == msg.sender, \"You are not the owner of this NFT\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_202\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"contracts/NFTPatient.sol\":1736:1765  _transfer(owner, to, tokenId) */\n      tag_223\n        /* \"contracts/NFTPatient.sol\":1746:1751  owner */\n      dup2\n        /* \"contracts/NFTPatient.sol\":1753:1755  to */\n      dup5\n        /* \"contracts/NFTPatient.sol\":1757:1764  tokenId */\n      dup5\n        /* \"contracts/NFTPatient.sol\":1736:1745  _transfer */\n      tag_204\n        /* \"contracts/NFTPatient.sol\":1736:1765  _transfer(owner, to, tokenId) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/NFTPatient.sol\":1867:1869  to */\n      dup3\n        /* \"contracts/NFTPatient.sol\":1845:1894  NFTTransferred(owner, to, tokenId, 0, bytes32(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTPatient.sol\":1860:1865  owner */\n      dup2\n        /* \"contracts/NFTPatient.sol\":1845:1894  NFTTransferred(owner, to, tokenId, 0, bytes32(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9f9ac6bca37e427696541548195017f8d7569c1bdff1ba5b97d815bfb9c11f8c\n        /* \"contracts/NFTPatient.sol\":1871:1878  tokenId */\n      dup5\n        /* \"contracts/NFTPatient.sol\":1880:1881  0 */\n      0x00\n        /* \"contracts/NFTPatient.sol\":1891:1892  0 */\n      dup1\n        /* \"contracts/NFTPatient.sol\":1883:1893  bytes32(0) */\n      0x00\n      shl\n        /* \"contracts/NFTPatient.sol\":1845:1894  NFTTransferred(owner, to, tokenId, 0, bytes32(0)) */\n      mload(0x40)\n      tag_224\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTPatient.sol\":1606:1902  {... */\n      pop\n        /* \"contracts/NFTPatient.sol\":1549:1902  function transferNFT(address to, uint256 tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_227\n      swap1\n      tag_149\n      jump\t// in\n    tag_227:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_228\n      swap1\n      tag_149\n      jump\t// in\n    tag_228:\n      dup1\n      iszero\n      tag_229\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_230\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_229)\n    tag_230:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_231:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_231\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_56\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTPatient.sol\":430:451  IERC20 public myToken */\n    tag_124:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_241:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_244\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_245)\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_248\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_277\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x06\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12013:12473  function _transfer(address from, address to, uint256 tokenId) internal {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12112:12113  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12114  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12100  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12114  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12094:12181  if (to == address(0)) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12167:12168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12137:12170  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12094:12181  if (to == address(0)) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12190:12211  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12246  _update(to, tokenId, address(0)) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12222:12224  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12226:12233  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12243:12244  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12221  _update */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12246  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12190:12246  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12285:12286  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12287  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12273  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12287  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12256:12467  if (previousOwner == address(0)) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12333:12340  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12310:12341  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12256:12467  if (previousOwner == address(0)) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12379:12383  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12383  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12375  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12383  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12358:12467  if (previousOwner != from) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12427:12431  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12433:12440  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12442:12455  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12406:12456  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12358:12467  if (previousOwner != from) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12084:12473  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12013:12473  function _transfer(address from, address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_301\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_307\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_308\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      0x01\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_310\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_315\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_314)\n    tag_315:\n      0x60\n      swap2\n      pop\n    tag_314:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_324\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_325\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_326\n      jumpi\n      tag_327\n      tag_328\n      jump\t// in\n    tag_327:\n    tag_326:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_329\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_329:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_332\n      jumpi\n      tag_333\n      tag_334\n      jump\t// in\n    tag_333:\n    tag_332:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_330\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_338\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_341\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_342\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_343\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_348\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_349\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap3\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_358\n      jumpi\n      tag_359\n      tag_334\n      jump\t// in\n    tag_359:\n    tag_358:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_361\n      jumpi\n      tag_362\n      tag_334\n      jump\t// in\n    tag_362:\n    tag_361:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_364\n      jumpi\n      tag_365\n      tag_334\n      jump\t// in\n    tag_365:\n    tag_364:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_366\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_367\n      jumpi\n      tag_368\n      tag_334\n      jump\t// in\n    tag_368:\n    tag_367:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_370\n      jumpi\n      tag_371\n      tag_334\n      jump\t// in\n    tag_371:\n    tag_370:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_373\n      jumpi\n      tag_374\n      tag_334\n      jump\t// in\n    tag_374:\n    tag_373:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_375\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_377\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_378\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_379\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_378:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_380\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_381\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_382:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_383:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_384:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_385:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_386:\n        /* \"#utility.yul\":561:584   */\n      tag_452\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_385\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_453:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_387:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_455\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_386\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_458\n      tag_383\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":833:952   */\n    tag_457:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_459\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_387\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_388:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_389:\n        /* \"#utility.yul\":1268:1289   */\n      tag_462\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_388\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_464\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_389\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_390:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_391:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_392:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_468:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_468)\n    tag_470:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_393:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_394:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_473\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_390\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":2329:2400   */\n      tag_474\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_391\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_475\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_392\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2499:2528   */\n      tag_476\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_393\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_39:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_478\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_394\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_395:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_396:\n        /* \"#utility.yul\":3016:3040   */\n      tag_481\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_395\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_482:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_397:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_484\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_396\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_43:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_487\n      tag_383\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":3292:3411   */\n    tag_486:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_488\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_397\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_398:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_399:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_491\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_398\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_400:\n        /* \"#utility.yul\":3872:3896   */\n      tag_493\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_399\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_46:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_495\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_400\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_401:\n        /* \"#utility.yul\":4210:4234   */\n      tag_497\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_399\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_498:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_402:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_500\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_401\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_50:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_503\n      tag_383\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":4503:4622   */\n    tag_502:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_504\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_402\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_505\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_397\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_55:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_508\n      tag_383\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":5000:5119   */\n    tag_507:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_509\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_402\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_510\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_402\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_511\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_397\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5592   */\n    tag_403:\n        /* \"#utility.yul\":5552:5559   */\n      0x00\n        /* \"#utility.yul\":5581:5586   */\n      dup2\n        /* \"#utility.yul\":5570:5586   */\n      swap1\n      pop\n        /* \"#utility.yul\":5515:5592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5598:5720   */\n    tag_404:\n        /* \"#utility.yul\":5671:5695   */\n      tag_514\n        /* \"#utility.yul\":5689:5694   */\n      dup2\n        /* \"#utility.yul\":5671:5695   */\n      tag_403\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":5664:5669   */\n      dup2\n        /* \"#utility.yul\":5661:5696   */\n      eq\n        /* \"#utility.yul\":5651:5714   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":5710:5711   */\n      0x00\n        /* \"#utility.yul\":5707:5708   */\n      dup1\n        /* \"#utility.yul\":5700:5712   */\n      revert\n        /* \"#utility.yul\":5651:5714   */\n    tag_515:\n        /* \"#utility.yul\":5598:5720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5726:5865   */\n    tag_405:\n        /* \"#utility.yul\":5772:5777   */\n      0x00\n        /* \"#utility.yul\":5810:5816   */\n      dup2\n        /* \"#utility.yul\":5797:5817   */\n      calldataload\n        /* \"#utility.yul\":5788:5817   */\n      swap1\n      pop\n        /* \"#utility.yul\":5826:5859   */\n      tag_517\n        /* \"#utility.yul\":5853:5858   */\n      dup2\n        /* \"#utility.yul\":5826:5859   */\n      tag_404\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":5726:5865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5871:6200   */\n    tag_60:\n        /* \"#utility.yul\":5930:5936   */\n      0x00\n        /* \"#utility.yul\":5979:5981   */\n      0x20\n        /* \"#utility.yul\":5967:5976   */\n      dup3\n        /* \"#utility.yul\":5958:5965   */\n      dup5\n        /* \"#utility.yul\":5954:5977   */\n      sub\n        /* \"#utility.yul\":5950:5982   */\n      slt\n        /* \"#utility.yul\":5947:6066   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":5985:6064   */\n      tag_520\n      tag_383\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":5947:6066   */\n    tag_519:\n        /* \"#utility.yul\":6105:6106   */\n      0x00\n        /* \"#utility.yul\":6130:6183   */\n      tag_521\n        /* \"#utility.yul\":6175:6182   */\n      dup5\n        /* \"#utility.yul\":6166:6172   */\n      dup3\n        /* \"#utility.yul\":6155:6164   */\n      dup6\n        /* \"#utility.yul\":6151:6173   */\n      add\n        /* \"#utility.yul\":6130:6183   */\n      tag_405\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":6120:6183   */\n      swap2\n      pop\n        /* \"#utility.yul\":6076:6193   */\n      pop\n        /* \"#utility.yul\":5871:6200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6206:6535   */\n    tag_78:\n        /* \"#utility.yul\":6265:6271   */\n      0x00\n        /* \"#utility.yul\":6314:6316   */\n      0x20\n        /* \"#utility.yul\":6302:6311   */\n      dup3\n        /* \"#utility.yul\":6293:6300   */\n      dup5\n        /* \"#utility.yul\":6289:6312   */\n      sub\n        /* \"#utility.yul\":6285:6317   */\n      slt\n        /* \"#utility.yul\":6282:6401   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":6320:6399   */\n      tag_524\n      tag_383\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":6282:6401   */\n    tag_523:\n        /* \"#utility.yul\":6440:6441   */\n      0x00\n        /* \"#utility.yul\":6465:6518   */\n      tag_525\n        /* \"#utility.yul\":6510:6517   */\n      dup5\n        /* \"#utility.yul\":6501:6507   */\n      dup3\n        /* \"#utility.yul\":6490:6499   */\n      dup6\n        /* \"#utility.yul\":6486:6508   */\n      add\n        /* \"#utility.yul\":6465:6518   */\n      tag_402\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":6455:6518   */\n      swap2\n      pop\n        /* \"#utility.yul\":6411:6528   */\n      pop\n        /* \"#utility.yul\":6206:6535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6541:6659   */\n    tag_406:\n        /* \"#utility.yul\":6628:6652   */\n      tag_527\n        /* \"#utility.yul\":6646:6651   */\n      dup2\n        /* \"#utility.yul\":6628:6652   */\n      tag_395\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":6623:6626   */\n      dup3\n        /* \"#utility.yul\":6616:6653   */\n      mstore\n        /* \"#utility.yul\":6541:6659   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6665:6887   */\n    tag_81:\n        /* \"#utility.yul\":6758:6762   */\n      0x00\n        /* \"#utility.yul\":6796:6798   */\n      0x20\n        /* \"#utility.yul\":6785:6794   */\n      dup3\n        /* \"#utility.yul\":6781:6799   */\n      add\n        /* \"#utility.yul\":6773:6799   */\n      swap1\n      pop\n        /* \"#utility.yul\":6809:6880   */\n      tag_529\n        /* \"#utility.yul\":6877:6878   */\n      0x00\n        /* \"#utility.yul\":6866:6875   */\n      dup4\n        /* \"#utility.yul\":6862:6879   */\n      add\n        /* \"#utility.yul\":6853:6859   */\n      dup5\n        /* \"#utility.yul\":6809:6880   */\n      tag_406\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":6665:6887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6893:7512   */\n    tag_95:\n        /* \"#utility.yul\":6970:6976   */\n      0x00\n        /* \"#utility.yul\":6978:6984   */\n      dup1\n        /* \"#utility.yul\":6986:6992   */\n      0x00\n        /* \"#utility.yul\":7035:7037   */\n      0x60\n        /* \"#utility.yul\":7023:7032   */\n      dup5\n        /* \"#utility.yul\":7014:7021   */\n      dup7\n        /* \"#utility.yul\":7010:7033   */\n      sub\n        /* \"#utility.yul\":7006:7038   */\n      slt\n        /* \"#utility.yul\":7003:7122   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":7041:7120   */\n      tag_532\n      tag_383\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":7003:7122   */\n    tag_531:\n        /* \"#utility.yul\":7161:7162   */\n      0x00\n        /* \"#utility.yul\":7186:7239   */\n      tag_533\n        /* \"#utility.yul\":7231:7238   */\n      dup7\n        /* \"#utility.yul\":7222:7228   */\n      dup3\n        /* \"#utility.yul\":7211:7220   */\n      dup8\n        /* \"#utility.yul\":7207:7229   */\n      add\n        /* \"#utility.yul\":7186:7239   */\n      tag_402\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":7176:7239   */\n      swap4\n      pop\n        /* \"#utility.yul\":7132:7249   */\n      pop\n        /* \"#utility.yul\":7288:7290   */\n      0x20\n        /* \"#utility.yul\":7314:7367   */\n      tag_534\n        /* \"#utility.yul\":7359:7366   */\n      dup7\n        /* \"#utility.yul\":7350:7356   */\n      dup3\n        /* \"#utility.yul\":7339:7348   */\n      dup8\n        /* \"#utility.yul\":7335:7357   */\n      add\n        /* \"#utility.yul\":7314:7367   */\n      tag_397\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7304:7367   */\n      swap3\n      pop\n        /* \"#utility.yul\":7259:7377   */\n      pop\n        /* \"#utility.yul\":7416:7418   */\n      0x40\n        /* \"#utility.yul\":7442:7495   */\n      tag_535\n        /* \"#utility.yul\":7487:7494   */\n      dup7\n        /* \"#utility.yul\":7478:7484   */\n      dup3\n        /* \"#utility.yul\":7467:7476   */\n      dup8\n        /* \"#utility.yul\":7463:7485   */\n      add\n        /* \"#utility.yul\":7442:7495   */\n      tag_397\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":7432:7495   */\n      swap2\n      pop\n        /* \"#utility.yul\":7387:7505   */\n      pop\n        /* \"#utility.yul\":6893:7512   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7518:7636   */\n    tag_407:\n        /* \"#utility.yul\":7605:7629   */\n      tag_537\n        /* \"#utility.yul\":7623:7628   */\n      dup2\n        /* \"#utility.yul\":7605:7629   */\n      tag_403\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":7600:7603   */\n      dup3\n        /* \"#utility.yul\":7593:7630   */\n      mstore\n        /* \"#utility.yul\":7518:7636   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7642:7864   */\n    tag_98:\n        /* \"#utility.yul\":7735:7739   */\n      0x00\n        /* \"#utility.yul\":7773:7775   */\n      0x20\n        /* \"#utility.yul\":7762:7771   */\n      dup3\n        /* \"#utility.yul\":7758:7776   */\n      add\n        /* \"#utility.yul\":7750:7776   */\n      swap1\n      pop\n        /* \"#utility.yul\":7786:7857   */\n      tag_539\n        /* \"#utility.yul\":7854:7855   */\n      0x00\n        /* \"#utility.yul\":7843:7852   */\n      dup4\n        /* \"#utility.yul\":7839:7856   */\n      add\n        /* \"#utility.yul\":7830:7836   */\n      dup5\n        /* \"#utility.yul\":7786:7857   */\n      tag_407\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":7642:7864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7870:7986   */\n    tag_408:\n        /* \"#utility.yul\":7940:7961   */\n      tag_541\n        /* \"#utility.yul\":7955:7960   */\n      dup2\n        /* \"#utility.yul\":7940:7961   */\n      tag_388\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":7933:7938   */\n      dup2\n        /* \"#utility.yul\":7930:7962   */\n      eq\n        /* \"#utility.yul\":7920:7980   */\n      tag_542\n      jumpi\n        /* \"#utility.yul\":7976:7977   */\n      0x00\n        /* \"#utility.yul\":7973:7974   */\n      dup1\n        /* \"#utility.yul\":7966:7978   */\n      revert\n        /* \"#utility.yul\":7920:7980   */\n    tag_542:\n        /* \"#utility.yul\":7870:7986   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7992:8125   */\n    tag_409:\n        /* \"#utility.yul\":8035:8040   */\n      0x00\n        /* \"#utility.yul\":8073:8079   */\n      dup2\n        /* \"#utility.yul\":8060:8080   */\n      calldataload\n        /* \"#utility.yul\":8051:8080   */\n      swap1\n      pop\n        /* \"#utility.yul\":8089:8119   */\n      tag_544\n        /* \"#utility.yul\":8113:8118   */\n      dup2\n        /* \"#utility.yul\":8089:8119   */\n      tag_408\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":7992:8125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8131:8599   */\n    tag_115:\n        /* \"#utility.yul\":8196:8202   */\n      0x00\n        /* \"#utility.yul\":8204:8210   */\n      dup1\n        /* \"#utility.yul\":8253:8255   */\n      0x40\n        /* \"#utility.yul\":8241:8250   */\n      dup4\n        /* \"#utility.yul\":8232:8239   */\n      dup6\n        /* \"#utility.yul\":8228:8251   */\n      sub\n        /* \"#utility.yul\":8224:8256   */\n      slt\n        /* \"#utility.yul\":8221:8340   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":8259:8338   */\n      tag_547\n      tag_383\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":8221:8340   */\n    tag_546:\n        /* \"#utility.yul\":8379:8380   */\n      0x00\n        /* \"#utility.yul\":8404:8457   */\n      tag_548\n        /* \"#utility.yul\":8449:8456   */\n      dup6\n        /* \"#utility.yul\":8440:8446   */\n      dup3\n        /* \"#utility.yul\":8429:8438   */\n      dup7\n        /* \"#utility.yul\":8425:8447   */\n      add\n        /* \"#utility.yul\":8404:8457   */\n      tag_402\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":8394:8457   */\n      swap3\n      pop\n        /* \"#utility.yul\":8350:8467   */\n      pop\n        /* \"#utility.yul\":8506:8508   */\n      0x20\n        /* \"#utility.yul\":8532:8582   */\n      tag_549\n        /* \"#utility.yul\":8574:8581   */\n      dup6\n        /* \"#utility.yul\":8565:8571   */\n      dup3\n        /* \"#utility.yul\":8554:8563   */\n      dup7\n        /* \"#utility.yul\":8550:8572   */\n      add\n        /* \"#utility.yul\":8532:8582   */\n      tag_409\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":8522:8582   */\n      swap2\n      pop\n        /* \"#utility.yul\":8477:8592   */\n      pop\n        /* \"#utility.yul\":8131:8599   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8605:8722   */\n    tag_410:\n        /* \"#utility.yul\":8714:8715   */\n      0x00\n        /* \"#utility.yul\":8711:8712   */\n      dup1\n        /* \"#utility.yul\":8704:8716   */\n      revert\n        /* \"#utility.yul\":8728:8845   */\n    tag_411:\n        /* \"#utility.yul\":8837:8838   */\n      0x00\n        /* \"#utility.yul\":8834:8835   */\n      dup1\n        /* \"#utility.yul\":8827:8839   */\n      revert\n        /* \"#utility.yul\":8851:9031   */\n    tag_328:\n        /* \"#utility.yul\":8899:8976   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8896:8897   */\n      0x00\n        /* \"#utility.yul\":8889:8977   */\n      mstore\n        /* \"#utility.yul\":8996:9000   */\n      0x41\n        /* \"#utility.yul\":8993:8994   */\n      0x04\n        /* \"#utility.yul\":8986:9001   */\n      mstore\n        /* \"#utility.yul\":9020:9024   */\n      0x24\n        /* \"#utility.yul\":9017:9018   */\n      0x00\n        /* \"#utility.yul\":9010:9025   */\n      revert\n        /* \"#utility.yul\":9037:9318   */\n    tag_412:\n        /* \"#utility.yul\":9120:9147   */\n      tag_554\n        /* \"#utility.yul\":9142:9146   */\n      dup3\n        /* \"#utility.yul\":9120:9147   */\n      tag_393\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":9112:9118   */\n      dup2\n        /* \"#utility.yul\":9108:9148   */\n      add\n        /* \"#utility.yul\":9250:9256   */\n      dup2\n        /* \"#utility.yul\":9238:9248   */\n      dup2\n        /* \"#utility.yul\":9235:9257   */\n      lt\n        /* \"#utility.yul\":9214:9232   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9202:9212   */\n      dup3\n        /* \"#utility.yul\":9199:9233   */\n      gt\n        /* \"#utility.yul\":9196:9258   */\n      or\n        /* \"#utility.yul\":9193:9281   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":9261:9279   */\n      tag_556\n      tag_328\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":9193:9281   */\n    tag_555:\n        /* \"#utility.yul\":9301:9311   */\n      dup1\n        /* \"#utility.yul\":9297:9299   */\n      0x40\n        /* \"#utility.yul\":9290:9312   */\n      mstore\n        /* \"#utility.yul\":9080:9318   */\n      pop\n        /* \"#utility.yul\":9037:9318   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9324:9453   */\n    tag_413:\n        /* \"#utility.yul\":9358:9364   */\n      0x00\n        /* \"#utility.yul\":9385:9405   */\n      tag_558\n      tag_382\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9375:9405   */\n      swap1\n      pop\n        /* \"#utility.yul\":9414:9447   */\n      tag_559\n        /* \"#utility.yul\":9442:9446   */\n      dup3\n        /* \"#utility.yul\":9434:9440   */\n      dup3\n        /* \"#utility.yul\":9414:9447   */\n      tag_412\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":9324:9453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9459:9766   */\n    tag_414:\n        /* \"#utility.yul\":9520:9524   */\n      0x00\n        /* \"#utility.yul\":9610:9628   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9602:9608   */\n      dup3\n        /* \"#utility.yul\":9599:9629   */\n      gt\n        /* \"#utility.yul\":9596:9652   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":9632:9650   */\n      tag_562\n      tag_328\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":9596:9652   */\n    tag_561:\n        /* \"#utility.yul\":9670:9699   */\n      tag_563\n        /* \"#utility.yul\":9692:9698   */\n      dup3\n        /* \"#utility.yul\":9670:9699   */\n      tag_393\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":9662:9699   */\n      swap1\n      pop\n        /* \"#utility.yul\":9754:9758   */\n      0x20\n        /* \"#utility.yul\":9748:9752   */\n      dup2\n        /* \"#utility.yul\":9744:9759   */\n      add\n        /* \"#utility.yul\":9736:9759   */\n      swap1\n      pop\n        /* \"#utility.yul\":9459:9766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9772:9918   */\n    tag_415:\n        /* \"#utility.yul\":9869:9875   */\n      dup3\n        /* \"#utility.yul\":9864:9867   */\n      dup2\n        /* \"#utility.yul\":9859:9862   */\n      dup4\n        /* \"#utility.yul\":9846:9876   */\n      calldatacopy\n        /* \"#utility.yul\":9910:9911   */\n      0x00\n        /* \"#utility.yul\":9901:9907   */\n      dup4\n        /* \"#utility.yul\":9896:9899   */\n      dup4\n        /* \"#utility.yul\":9892:9908   */\n      add\n        /* \"#utility.yul\":9885:9912   */\n      mstore\n        /* \"#utility.yul\":9772:9918   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9924:10347   */\n    tag_416:\n        /* \"#utility.yul\":10001:10006   */\n      0x00\n        /* \"#utility.yul\":10026:10091   */\n      tag_566\n        /* \"#utility.yul\":10042:10090   */\n      tag_567\n        /* \"#utility.yul\":10083:10089   */\n      dup5\n        /* \"#utility.yul\":10042:10090   */\n      tag_414\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":10026:10091   */\n      tag_413\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":10017:10091   */\n      swap1\n      pop\n        /* \"#utility.yul\":10114:10120   */\n      dup3\n        /* \"#utility.yul\":10107:10112   */\n      dup2\n        /* \"#utility.yul\":10100:10121   */\n      mstore\n        /* \"#utility.yul\":10152:10156   */\n      0x20\n        /* \"#utility.yul\":10145:10150   */\n      dup2\n        /* \"#utility.yul\":10141:10157   */\n      add\n        /* \"#utility.yul\":10190:10193   */\n      dup5\n        /* \"#utility.yul\":10181:10187   */\n      dup5\n        /* \"#utility.yul\":10176:10179   */\n      dup5\n        /* \"#utility.yul\":10172:10188   */\n      add\n        /* \"#utility.yul\":10169:10194   */\n      gt\n        /* \"#utility.yul\":10166:10278   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":10197:10276   */\n      tag_569\n      tag_411\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":10166:10278   */\n    tag_568:\n        /* \"#utility.yul\":10287:10341   */\n      tag_570\n        /* \"#utility.yul\":10334:10340   */\n      dup5\n        /* \"#utility.yul\":10329:10332   */\n      dup3\n        /* \"#utility.yul\":10324:10327   */\n      dup6\n        /* \"#utility.yul\":10287:10341   */\n      tag_415\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":10007:10347   */\n      pop\n        /* \"#utility.yul\":9924:10347   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10704   */\n    tag_417:\n        /* \"#utility.yul\":10421:10426   */\n      0x00\n        /* \"#utility.yul\":10470:10473   */\n      dup3\n        /* \"#utility.yul\":10463:10467   */\n      0x1f\n        /* \"#utility.yul\":10455:10461   */\n      dup4\n        /* \"#utility.yul\":10451:10468   */\n      add\n        /* \"#utility.yul\":10447:10474   */\n      slt\n        /* \"#utility.yul\":10437:10559   */\n      tag_572\n      jumpi\n        /* \"#utility.yul\":10478:10557   */\n      tag_573\n      tag_410\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":10437:10559   */\n    tag_572:\n        /* \"#utility.yul\":10595:10601   */\n      dup2\n        /* \"#utility.yul\":10582:10602   */\n      calldataload\n        /* \"#utility.yul\":10620:10698   */\n      tag_574\n        /* \"#utility.yul\":10694:10697   */\n      dup5\n        /* \"#utility.yul\":10686:10692   */\n      dup3\n        /* \"#utility.yul\":10679:10683   */\n      0x20\n        /* \"#utility.yul\":10671:10677   */\n      dup7\n        /* \"#utility.yul\":10667:10684   */\n      add\n        /* \"#utility.yul\":10620:10698   */\n      tag_416\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":10611:10698   */\n      swap2\n      pop\n        /* \"#utility.yul\":10427:10704   */\n      pop\n        /* \"#utility.yul\":10366:10704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10710:11653   */\n    tag_120:\n        /* \"#utility.yul\":10805:10811   */\n      0x00\n        /* \"#utility.yul\":10813:10819   */\n      dup1\n        /* \"#utility.yul\":10821:10827   */\n      0x00\n        /* \"#utility.yul\":10829:10835   */\n      dup1\n        /* \"#utility.yul\":10878:10881   */\n      0x80\n        /* \"#utility.yul\":10866:10875   */\n      dup6\n        /* \"#utility.yul\":10857:10864   */\n      dup8\n        /* \"#utility.yul\":10853:10876   */\n      sub\n        /* \"#utility.yul\":10849:10882   */\n      slt\n        /* \"#utility.yul\":10846:10966   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":10885:10964   */\n      tag_577\n      tag_383\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":10846:10966   */\n    tag_576:\n        /* \"#utility.yul\":11005:11006   */\n      0x00\n        /* \"#utility.yul\":11030:11083   */\n      tag_578\n        /* \"#utility.yul\":11075:11082   */\n      dup8\n        /* \"#utility.yul\":11066:11072   */\n      dup3\n        /* \"#utility.yul\":11055:11064   */\n      dup9\n        /* \"#utility.yul\":11051:11073   */\n      add\n        /* \"#utility.yul\":11030:11083   */\n      tag_402\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":11020:11083   */\n      swap5\n      pop\n        /* \"#utility.yul\":10976:11093   */\n      pop\n        /* \"#utility.yul\":11132:11134   */\n      0x20\n        /* \"#utility.yul\":11158:11211   */\n      tag_579\n        /* \"#utility.yul\":11203:11210   */\n      dup8\n        /* \"#utility.yul\":11194:11200   */\n      dup3\n        /* \"#utility.yul\":11183:11192   */\n      dup9\n        /* \"#utility.yul\":11179:11201   */\n      add\n        /* \"#utility.yul\":11158:11211   */\n      tag_402\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":11148:11211   */\n      swap4\n      pop\n        /* \"#utility.yul\":11103:11221   */\n      pop\n        /* \"#utility.yul\":11260:11262   */\n      0x40\n        /* \"#utility.yul\":11286:11339   */\n      tag_580\n        /* \"#utility.yul\":11331:11338   */\n      dup8\n        /* \"#utility.yul\":11322:11328   */\n      dup3\n        /* \"#utility.yul\":11311:11320   */\n      dup9\n        /* \"#utility.yul\":11307:11329   */\n      add\n        /* \"#utility.yul\":11286:11339   */\n      tag_397\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":11276:11339   */\n      swap3\n      pop\n        /* \"#utility.yul\":11231:11349   */\n      pop\n        /* \"#utility.yul\":11416:11418   */\n      0x60\n        /* \"#utility.yul\":11405:11414   */\n      dup6\n        /* \"#utility.yul\":11401:11419   */\n      add\n        /* \"#utility.yul\":11388:11420   */\n      calldataload\n        /* \"#utility.yul\":11447:11465   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11439:11445   */\n      dup2\n        /* \"#utility.yul\":11436:11466   */\n      gt\n        /* \"#utility.yul\":11433:11550   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":11469:11548   */\n      tag_582\n      tag_384\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":11433:11550   */\n    tag_581:\n        /* \"#utility.yul\":11574:11636   */\n      tag_583\n        /* \"#utility.yul\":11628:11635   */\n      dup8\n        /* \"#utility.yul\":11619:11625   */\n      dup3\n        /* \"#utility.yul\":11608:11617   */\n      dup9\n        /* \"#utility.yul\":11604:11626   */\n      add\n        /* \"#utility.yul\":11574:11636   */\n      tag_417\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":11564:11636   */\n      swap2\n      pop\n        /* \"#utility.yul\":11359:11646   */\n      pop\n        /* \"#utility.yul\":10710:11653   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11659:11719   */\n    tag_418:\n        /* \"#utility.yul\":11687:11690   */\n      0x00\n        /* \"#utility.yul\":11708:11713   */\n      dup2\n        /* \"#utility.yul\":11701:11713   */\n      swap1\n      pop\n        /* \"#utility.yul\":11659:11719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11725:11867   */\n    tag_419:\n        /* \"#utility.yul\":11775:11784   */\n      0x00\n        /* \"#utility.yul\":11808:11861   */\n      tag_586\n        /* \"#utility.yul\":11826:11860   */\n      tag_587\n        /* \"#utility.yul\":11835:11859   */\n      tag_588\n        /* \"#utility.yul\":11853:11858   */\n      dup5\n        /* \"#utility.yul\":11835:11859   */\n      tag_398\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":11826:11860   */\n      tag_418\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":11808:11861   */\n      tag_398\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":11795:11861   */\n      swap1\n      pop\n        /* \"#utility.yul\":11725:11867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11873:11999   */\n    tag_420:\n        /* \"#utility.yul\":11923:11932   */\n      0x00\n        /* \"#utility.yul\":11956:11993   */\n      tag_590\n        /* \"#utility.yul\":11987:11992   */\n      dup3\n        /* \"#utility.yul\":11956:11993   */\n      tag_419\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":11943:11993   */\n      swap1\n      pop\n        /* \"#utility.yul\":11873:11999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12005:12145   */\n    tag_421:\n        /* \"#utility.yul\":12069:12078   */\n      0x00\n        /* \"#utility.yul\":12102:12139   */\n      tag_592\n        /* \"#utility.yul\":12133:12138   */\n      dup3\n        /* \"#utility.yul\":12102:12139   */\n      tag_420\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":12089:12139   */\n      swap1\n      pop\n        /* \"#utility.yul\":12005:12145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12151:12310   */\n    tag_422:\n        /* \"#utility.yul\":12252:12303   */\n      tag_594\n        /* \"#utility.yul\":12297:12302   */\n      dup2\n        /* \"#utility.yul\":12252:12303   */\n      tag_421\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":12247:12250   */\n      dup3\n        /* \"#utility.yul\":12240:12304   */\n      mstore\n        /* \"#utility.yul\":12151:12310   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12316:12566   */\n    tag_126:\n        /* \"#utility.yul\":12423:12427   */\n      0x00\n        /* \"#utility.yul\":12461:12463   */\n      0x20\n        /* \"#utility.yul\":12450:12459   */\n      dup3\n        /* \"#utility.yul\":12446:12464   */\n      add\n        /* \"#utility.yul\":12438:12464   */\n      swap1\n      pop\n        /* \"#utility.yul\":12474:12559   */\n      tag_596\n        /* \"#utility.yul\":12556:12557   */\n      0x00\n        /* \"#utility.yul\":12545:12554   */\n      dup4\n        /* \"#utility.yul\":12541:12558   */\n      add\n        /* \"#utility.yul\":12532:12538   */\n      dup5\n        /* \"#utility.yul\":12474:12559   */\n      tag_422\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":12316:12566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12572:13046   */\n    tag_135:\n        /* \"#utility.yul\":12640:12646   */\n      0x00\n        /* \"#utility.yul\":12648:12654   */\n      dup1\n        /* \"#utility.yul\":12697:12699   */\n      0x40\n        /* \"#utility.yul\":12685:12694   */\n      dup4\n        /* \"#utility.yul\":12676:12683   */\n      dup6\n        /* \"#utility.yul\":12672:12695   */\n      sub\n        /* \"#utility.yul\":12668:12700   */\n      slt\n        /* \"#utility.yul\":12665:12784   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":12703:12782   */\n      tag_599\n      tag_383\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":12665:12784   */\n    tag_598:\n        /* \"#utility.yul\":12823:12824   */\n      0x00\n        /* \"#utility.yul\":12848:12901   */\n      tag_600\n        /* \"#utility.yul\":12893:12900   */\n      dup6\n        /* \"#utility.yul\":12884:12890   */\n      dup3\n        /* \"#utility.yul\":12873:12882   */\n      dup7\n        /* \"#utility.yul\":12869:12891   */\n      add\n        /* \"#utility.yul\":12848:12901   */\n      tag_402\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":12838:12901   */\n      swap3\n      pop\n        /* \"#utility.yul\":12794:12911   */\n      pop\n        /* \"#utility.yul\":12950:12952   */\n      0x20\n        /* \"#utility.yul\":12976:13029   */\n      tag_601\n        /* \"#utility.yul\":13021:13028   */\n      dup6\n        /* \"#utility.yul\":13012:13018   */\n      dup3\n        /* \"#utility.yul\":13001:13010   */\n      dup7\n        /* \"#utility.yul\":12997:13019   */\n      add\n        /* \"#utility.yul\":12976:13029   */\n      tag_402\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":12966:13029   */\n      swap2\n      pop\n        /* \"#utility.yul\":12921:13039   */\n      pop\n        /* \"#utility.yul\":12572:13046   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13052:13232   */\n    tag_423:\n        /* \"#utility.yul\":13100:13177   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13097:13098   */\n      0x00\n        /* \"#utility.yul\":13090:13178   */\n      mstore\n        /* \"#utility.yul\":13197:13201   */\n      0x22\n        /* \"#utility.yul\":13194:13195   */\n      0x04\n        /* \"#utility.yul\":13187:13202   */\n      mstore\n        /* \"#utility.yul\":13221:13225   */\n      0x24\n        /* \"#utility.yul\":13218:13219   */\n      0x00\n        /* \"#utility.yul\":13211:13226   */\n      revert\n        /* \"#utility.yul\":13238:13558   */\n    tag_149:\n        /* \"#utility.yul\":13282:13288   */\n      0x00\n        /* \"#utility.yul\":13319:13320   */\n      0x02\n        /* \"#utility.yul\":13313:13317   */\n      dup3\n        /* \"#utility.yul\":13309:13321   */\n      div\n        /* \"#utility.yul\":13299:13321   */\n      swap1\n      pop\n        /* \"#utility.yul\":13366:13367   */\n      0x01\n        /* \"#utility.yul\":13360:13364   */\n      dup3\n        /* \"#utility.yul\":13356:13368   */\n      and\n        /* \"#utility.yul\":13387:13405   */\n      dup1\n        /* \"#utility.yul\":13377:13458   */\n      tag_604\n      jumpi\n        /* \"#utility.yul\":13443:13447   */\n      0x7f\n        /* \"#utility.yul\":13435:13441   */\n      dup3\n        /* \"#utility.yul\":13431:13448   */\n      and\n        /* \"#utility.yul\":13421:13448   */\n      swap2\n      pop\n        /* \"#utility.yul\":13377:13458   */\n    tag_604:\n        /* \"#utility.yul\":13505:13507   */\n      0x20\n        /* \"#utility.yul\":13497:13503   */\n      dup3\n        /* \"#utility.yul\":13494:13508   */\n      lt\n        /* \"#utility.yul\":13474:13492   */\n      dup2\n        /* \"#utility.yul\":13471:13509   */\n      sub\n        /* \"#utility.yul\":13468:13552   */\n      tag_605\n      jumpi\n        /* \"#utility.yul\":13524:13542   */\n      tag_606\n      tag_423\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":13468:13552   */\n    tag_605:\n        /* \"#utility.yul\":13289:13558   */\n      pop\n        /* \"#utility.yul\":13238:13558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13564:14006   */\n    tag_172:\n        /* \"#utility.yul\":13713:13717   */\n      0x00\n        /* \"#utility.yul\":13751:13753   */\n      0x60\n        /* \"#utility.yul\":13740:13749   */\n      dup3\n        /* \"#utility.yul\":13736:13754   */\n      add\n        /* \"#utility.yul\":13728:13754   */\n      swap1\n      pop\n        /* \"#utility.yul\":13764:13835   */\n      tag_608\n        /* \"#utility.yul\":13832:13833   */\n      0x00\n        /* \"#utility.yul\":13821:13830   */\n      dup4\n        /* \"#utility.yul\":13817:13834   */\n      add\n        /* \"#utility.yul\":13808:13814   */\n      dup7\n        /* \"#utility.yul\":13764:13835   */\n      tag_400\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":13845:13917   */\n      tag_609\n        /* \"#utility.yul\":13913:13915   */\n      0x20\n        /* \"#utility.yul\":13902:13911   */\n      dup4\n        /* \"#utility.yul\":13898:13916   */\n      add\n        /* \"#utility.yul\":13889:13895   */\n      dup6\n        /* \"#utility.yul\":13845:13917   */\n      tag_406\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":13927:13999   */\n      tag_610\n        /* \"#utility.yul\":13995:13997   */\n      0x40\n        /* \"#utility.yul\":13984:13993   */\n      dup4\n        /* \"#utility.yul\":13980:13998   */\n      add\n        /* \"#utility.yul\":13971:13977   */\n      dup5\n        /* \"#utility.yul\":13927:13999   */\n      tag_400\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":13564:14006   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14012:14193   */\n    tag_424:\n        /* \"#utility.yul\":14152:14185   */\n      0x4e46542077697468207468697320494420616c72656164792065786973747300\n        /* \"#utility.yul\":14148:14149   */\n      0x00\n        /* \"#utility.yul\":14140:14146   */\n      dup3\n        /* \"#utility.yul\":14136:14150   */\n      add\n        /* \"#utility.yul\":14129:14186   */\n      mstore\n        /* \"#utility.yul\":14012:14193   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14199:14565   */\n    tag_425:\n        /* \"#utility.yul\":14341:14344   */\n      0x00\n        /* \"#utility.yul\":14362:14429   */\n      tag_613\n        /* \"#utility.yul\":14426:14428   */\n      0x1f\n        /* \"#utility.yul\":14421:14424   */\n      dup4\n        /* \"#utility.yul\":14362:14429   */\n      tag_391\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":14355:14429   */\n      swap2\n      pop\n        /* \"#utility.yul\":14438:14531   */\n      tag_614\n        /* \"#utility.yul\":14527:14530   */\n      dup3\n        /* \"#utility.yul\":14438:14531   */\n      tag_424\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":14556:14558   */\n      0x20\n        /* \"#utility.yul\":14551:14554   */\n      dup3\n        /* \"#utility.yul\":14547:14559   */\n      add\n        /* \"#utility.yul\":14540:14559   */\n      swap1\n      pop\n        /* \"#utility.yul\":14199:14565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14571:14990   */\n    tag_182:\n        /* \"#utility.yul\":14737:14741   */\n      0x00\n        /* \"#utility.yul\":14775:14777   */\n      0x20\n        /* \"#utility.yul\":14764:14773   */\n      dup3\n        /* \"#utility.yul\":14760:14778   */\n      add\n        /* \"#utility.yul\":14752:14778   */\n      swap1\n      pop\n        /* \"#utility.yul\":14824:14833   */\n      dup2\n        /* \"#utility.yul\":14818:14822   */\n      dup2\n        /* \"#utility.yul\":14814:14834   */\n      sub\n        /* \"#utility.yul\":14810:14811   */\n      0x00\n        /* \"#utility.yul\":14799:14808   */\n      dup4\n        /* \"#utility.yul\":14795:14812   */\n      add\n        /* \"#utility.yul\":14788:14835   */\n      mstore\n        /* \"#utility.yul\":14852:14983   */\n      tag_616\n        /* \"#utility.yul\":14978:14982   */\n      dup2\n        /* \"#utility.yul\":14852:14983   */\n      tag_425\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":14844:14983   */\n      swap1\n      pop\n        /* \"#utility.yul\":14571:14990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14996:15216   */\n    tag_426:\n        /* \"#utility.yul\":15136:15170   */\n      0x596f7520617265206e6f7420746865206f776e6572206f662074686973204e46\n        /* \"#utility.yul\":15132:15133   */\n      0x00\n        /* \"#utility.yul\":15124:15130   */\n      dup3\n        /* \"#utility.yul\":15120:15134   */\n      add\n        /* \"#utility.yul\":15113:15171   */\n      mstore\n        /* \"#utility.yul\":15205:15208   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15200:15202   */\n      0x20\n        /* \"#utility.yul\":15192:15198   */\n      dup3\n        /* \"#utility.yul\":15188:15203   */\n      add\n        /* \"#utility.yul\":15181:15209   */\n      mstore\n        /* \"#utility.yul\":14996:15216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15222:15588   */\n    tag_427:\n        /* \"#utility.yul\":15364:15367   */\n      0x00\n        /* \"#utility.yul\":15385:15452   */\n      tag_619\n        /* \"#utility.yul\":15449:15451   */\n      0x21\n        /* \"#utility.yul\":15444:15447   */\n      dup4\n        /* \"#utility.yul\":15385:15452   */\n      tag_391\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":15378:15452   */\n      swap2\n      pop\n        /* \"#utility.yul\":15461:15554   */\n      tag_620\n        /* \"#utility.yul\":15550:15553   */\n      dup3\n        /* \"#utility.yul\":15461:15554   */\n      tag_426\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":15579:15581   */\n      0x40\n        /* \"#utility.yul\":15574:15577   */\n      dup3\n        /* \"#utility.yul\":15570:15582   */\n      add\n        /* \"#utility.yul\":15563:15582   */\n      swap1\n      pop\n        /* \"#utility.yul\":15222:15588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15594:16013   */\n    tag_202:\n        /* \"#utility.yul\":15760:15764   */\n      0x00\n        /* \"#utility.yul\":15798:15800   */\n      0x20\n        /* \"#utility.yul\":15787:15796   */\n      dup3\n        /* \"#utility.yul\":15783:15801   */\n      add\n        /* \"#utility.yul\":15775:15801   */\n      swap1\n      pop\n        /* \"#utility.yul\":15847:15856   */\n      dup2\n        /* \"#utility.yul\":15841:15845   */\n      dup2\n        /* \"#utility.yul\":15837:15857   */\n      sub\n        /* \"#utility.yul\":15833:15834   */\n      0x00\n        /* \"#utility.yul\":15822:15831   */\n      dup4\n        /* \"#utility.yul\":15818:15835   */\n      add\n        /* \"#utility.yul\":15811:15858   */\n      mstore\n        /* \"#utility.yul\":15875:16006   */\n      tag_622\n        /* \"#utility.yul\":16001:16005   */\n      dup2\n        /* \"#utility.yul\":15875:16006   */\n      tag_427\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":15867:16006   */\n      swap1\n      pop\n        /* \"#utility.yul\":15594:16013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16019:16461   */\n    tag_206:\n        /* \"#utility.yul\":16168:16172   */\n      0x00\n        /* \"#utility.yul\":16206:16208   */\n      0x60\n        /* \"#utility.yul\":16195:16204   */\n      dup3\n        /* \"#utility.yul\":16191:16209   */\n      add\n        /* \"#utility.yul\":16183:16209   */\n      swap1\n      pop\n        /* \"#utility.yul\":16219:16290   */\n      tag_624\n        /* \"#utility.yul\":16287:16288   */\n      0x00\n        /* \"#utility.yul\":16276:16285   */\n      dup4\n        /* \"#utility.yul\":16272:16289   */\n      add\n        /* \"#utility.yul\":16263:16269   */\n      dup7\n        /* \"#utility.yul\":16219:16290   */\n      tag_400\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":16300:16372   */\n      tag_625\n        /* \"#utility.yul\":16368:16370   */\n      0x20\n        /* \"#utility.yul\":16357:16366   */\n      dup4\n        /* \"#utility.yul\":16353:16371   */\n      add\n        /* \"#utility.yul\":16344:16350   */\n      dup6\n        /* \"#utility.yul\":16300:16372   */\n      tag_400\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":16382:16454   */\n      tag_626\n        /* \"#utility.yul\":16450:16452   */\n      0x40\n        /* \"#utility.yul\":16439:16448   */\n      dup4\n        /* \"#utility.yul\":16435:16453   */\n      add\n        /* \"#utility.yul\":16426:16432   */\n      dup5\n        /* \"#utility.yul\":16382:16454   */\n      tag_406\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":16019:16461   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16467:16604   */\n    tag_428:\n        /* \"#utility.yul\":16521:16526   */\n      0x00\n        /* \"#utility.yul\":16552:16558   */\n      dup2\n        /* \"#utility.yul\":16546:16559   */\n      mload\n        /* \"#utility.yul\":16537:16559   */\n      swap1\n      pop\n        /* \"#utility.yul\":16568:16598   */\n      tag_628\n        /* \"#utility.yul\":16592:16597   */\n      dup2\n        /* \"#utility.yul\":16568:16598   */\n      tag_408\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":16467:16604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16610:16955   */\n    tag_210:\n        /* \"#utility.yul\":16677:16683   */\n      0x00\n        /* \"#utility.yul\":16726:16728   */\n      0x20\n        /* \"#utility.yul\":16714:16723   */\n      dup3\n        /* \"#utility.yul\":16705:16712   */\n      dup5\n        /* \"#utility.yul\":16701:16724   */\n      sub\n        /* \"#utility.yul\":16697:16729   */\n      slt\n        /* \"#utility.yul\":16694:16813   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":16732:16811   */\n      tag_631\n      tag_383\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":16694:16813   */\n    tag_630:\n        /* \"#utility.yul\":16852:16853   */\n      0x00\n        /* \"#utility.yul\":16877:16938   */\n      tag_632\n        /* \"#utility.yul\":16930:16937   */\n      dup5\n        /* \"#utility.yul\":16921:16927   */\n      dup3\n        /* \"#utility.yul\":16910:16919   */\n      dup6\n        /* \"#utility.yul\":16906:16928   */\n      add\n        /* \"#utility.yul\":16877:16938   */\n      tag_428\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":16867:16938   */\n      swap2\n      pop\n        /* \"#utility.yul\":16823:16948   */\n      pop\n        /* \"#utility.yul\":16610:16955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16961:17139   */\n    tag_429:\n        /* \"#utility.yul\":17101:17131   */\n      0x546f6b656e20416d6f756e74207472616e73666572206661696c656400000000\n        /* \"#utility.yul\":17097:17098   */\n      0x00\n        /* \"#utility.yul\":17089:17095   */\n      dup3\n        /* \"#utility.yul\":17085:17099   */\n      add\n        /* \"#utility.yul\":17078:17132   */\n      mstore\n        /* \"#utility.yul\":16961:17139   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17145:17511   */\n    tag_430:\n        /* \"#utility.yul\":17287:17290   */\n      0x00\n        /* \"#utility.yul\":17308:17375   */\n      tag_635\n        /* \"#utility.yul\":17372:17374   */\n      0x1c\n        /* \"#utility.yul\":17367:17370   */\n      dup4\n        /* \"#utility.yul\":17308:17375   */\n      tag_391\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":17301:17375   */\n      swap2\n      pop\n        /* \"#utility.yul\":17384:17477   */\n      tag_636\n        /* \"#utility.yul\":17473:17476   */\n      dup3\n        /* \"#utility.yul\":17384:17477   */\n      tag_429\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":17502:17504   */\n      0x20\n        /* \"#utility.yul\":17497:17500   */\n      dup3\n        /* \"#utility.yul\":17493:17505   */\n      add\n        /* \"#utility.yul\":17486:17505   */\n      swap1\n      pop\n        /* \"#utility.yul\":17145:17511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17517:17936   */\n    tag_213:\n        /* \"#utility.yul\":17683:17687   */\n      0x00\n        /* \"#utility.yul\":17721:17723   */\n      0x20\n        /* \"#utility.yul\":17710:17719   */\n      dup3\n        /* \"#utility.yul\":17706:17724   */\n      add\n        /* \"#utility.yul\":17698:17724   */\n      swap1\n      pop\n        /* \"#utility.yul\":17770:17779   */\n      dup2\n        /* \"#utility.yul\":17764:17768   */\n      dup2\n        /* \"#utility.yul\":17760:17780   */\n      sub\n        /* \"#utility.yul\":17756:17757   */\n      0x00\n        /* \"#utility.yul\":17745:17754   */\n      dup4\n        /* \"#utility.yul\":17741:17758   */\n      add\n        /* \"#utility.yul\":17734:17781   */\n      mstore\n        /* \"#utility.yul\":17798:17929   */\n      tag_638\n        /* \"#utility.yul\":17924:17928   */\n      dup2\n        /* \"#utility.yul\":17798:17929   */\n      tag_430\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":17790:17929   */\n      swap1\n      pop\n        /* \"#utility.yul\":17517:17936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17942:18036   */\n    tag_431:\n        /* \"#utility.yul\":17975:17983   */\n      0x00\n        /* \"#utility.yul\":18023:18028   */\n      dup2\n        /* \"#utility.yul\":18019:18021   */\n      0x60\n        /* \"#utility.yul\":18015:18029   */\n      shl\n        /* \"#utility.yul\":17994:18029   */\n      swap1\n      pop\n        /* \"#utility.yul\":17942:18036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18042:18136   */\n    tag_432:\n        /* \"#utility.yul\":18081:18088   */\n      0x00\n        /* \"#utility.yul\":18110:18130   */\n      tag_641\n        /* \"#utility.yul\":18124:18129   */\n      dup3\n        /* \"#utility.yul\":18110:18130   */\n      tag_431\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":18099:18130   */\n      swap1\n      pop\n        /* \"#utility.yul\":18042:18136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18142:18242   */\n    tag_433:\n        /* \"#utility.yul\":18181:18188   */\n      0x00\n        /* \"#utility.yul\":18210:18236   */\n      tag_643\n        /* \"#utility.yul\":18230:18235   */\n      dup3\n        /* \"#utility.yul\":18210:18236   */\n      tag_432\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":18199:18236   */\n      swap1\n      pop\n        /* \"#utility.yul\":18142:18242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18248:18405   */\n    tag_434:\n        /* \"#utility.yul\":18353:18398   */\n      tag_645\n        /* \"#utility.yul\":18373:18397   */\n      tag_646\n        /* \"#utility.yul\":18391:18396   */\n      dup3\n        /* \"#utility.yul\":18373:18397   */\n      tag_399\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":18353:18398   */\n      tag_433\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":18348:18351   */\n      dup3\n        /* \"#utility.yul\":18341:18399   */\n      mstore\n        /* \"#utility.yul\":18248:18405   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18411:18490   */\n    tag_435:\n        /* \"#utility.yul\":18450:18457   */\n      0x00\n        /* \"#utility.yul\":18479:18484   */\n      dup2\n        /* \"#utility.yul\":18468:18484   */\n      swap1\n      pop\n        /* \"#utility.yul\":18411:18490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18496:18653   */\n    tag_436:\n        /* \"#utility.yul\":18601:18646   */\n      tag_649\n        /* \"#utility.yul\":18621:18645   */\n      tag_650\n        /* \"#utility.yul\":18639:18644   */\n      dup3\n        /* \"#utility.yul\":18621:18645   */\n      tag_395\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":18601:18646   */\n      tag_435\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":18596:18599   */\n      dup3\n        /* \"#utility.yul\":18589:18647   */\n      mstore\n        /* \"#utility.yul\":18496:18653   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18659:19479   */\n    tag_215:\n        /* \"#utility.yul\":18883:18886   */\n      0x00\n        /* \"#utility.yul\":18898:18973   */\n      tag_652\n        /* \"#utility.yul\":18969:18972   */\n      dup3\n        /* \"#utility.yul\":18960:18966   */\n      dup9\n        /* \"#utility.yul\":18898:18973   */\n      tag_434\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":18998:19000   */\n      0x14\n        /* \"#utility.yul\":18993:18996   */\n      dup3\n        /* \"#utility.yul\":18989:19001   */\n      add\n        /* \"#utility.yul\":18982:19001   */\n      swap2\n      pop\n        /* \"#utility.yul\":19011:19086   */\n      tag_653\n        /* \"#utility.yul\":19082:19085   */\n      dup3\n        /* \"#utility.yul\":19073:19079   */\n      dup8\n        /* \"#utility.yul\":19011:19086   */\n      tag_434\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":19111:19113   */\n      0x14\n        /* \"#utility.yul\":19106:19109   */\n      dup3\n        /* \"#utility.yul\":19102:19114   */\n      add\n        /* \"#utility.yul\":19095:19114   */\n      swap2\n      pop\n        /* \"#utility.yul\":19124:19199   */\n      tag_654\n        /* \"#utility.yul\":19195:19198   */\n      dup3\n        /* \"#utility.yul\":19186:19192   */\n      dup7\n        /* \"#utility.yul\":19124:19199   */\n      tag_436\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":19224:19226   */\n      0x20\n        /* \"#utility.yul\":19219:19222   */\n      dup3\n        /* \"#utility.yul\":19215:19227   */\n      add\n        /* \"#utility.yul\":19208:19227   */\n      swap2\n      pop\n        /* \"#utility.yul\":19237:19312   */\n      tag_655\n        /* \"#utility.yul\":19308:19311   */\n      dup3\n        /* \"#utility.yul\":19299:19305   */\n      dup6\n        /* \"#utility.yul\":19237:19312   */\n      tag_436\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":19337:19339   */\n      0x20\n        /* \"#utility.yul\":19332:19335   */\n      dup3\n        /* \"#utility.yul\":19328:19340   */\n      add\n        /* \"#utility.yul\":19321:19340   */\n      swap2\n      pop\n        /* \"#utility.yul\":19350:19425   */\n      tag_656\n        /* \"#utility.yul\":19421:19424   */\n      dup3\n        /* \"#utility.yul\":19412:19418   */\n      dup5\n        /* \"#utility.yul\":19350:19425   */\n      tag_436\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":19450:19452   */\n      0x20\n        /* \"#utility.yul\":19445:19448   */\n      dup3\n        /* \"#utility.yul\":19441:19453   */\n      add\n        /* \"#utility.yul\":19434:19453   */\n      swap2\n      pop\n        /* \"#utility.yul\":19470:19473   */\n      dup2\n        /* \"#utility.yul\":19463:19473   */\n      swap1\n      pop\n        /* \"#utility.yul\":18659:19479   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19485:19927   */\n    tag_217:\n        /* \"#utility.yul\":19634:19638   */\n      0x00\n        /* \"#utility.yul\":19672:19674   */\n      0x60\n        /* \"#utility.yul\":19661:19670   */\n      dup3\n        /* \"#utility.yul\":19657:19675   */\n      add\n        /* \"#utility.yul\":19649:19675   */\n      swap1\n      pop\n        /* \"#utility.yul\":19685:19756   */\n      tag_658\n        /* \"#utility.yul\":19753:19754   */\n      0x00\n        /* \"#utility.yul\":19742:19751   */\n      dup4\n        /* \"#utility.yul\":19738:19755   */\n      add\n        /* \"#utility.yul\":19729:19735   */\n      dup7\n        /* \"#utility.yul\":19685:19756   */\n      tag_406\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":19766:19838   */\n      tag_659\n        /* \"#utility.yul\":19834:19836   */\n      0x20\n        /* \"#utility.yul\":19823:19832   */\n      dup4\n        /* \"#utility.yul\":19819:19837   */\n      add\n        /* \"#utility.yul\":19810:19816   */\n      dup6\n        /* \"#utility.yul\":19766:19838   */\n      tag_406\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":19848:19920   */\n      tag_660\n        /* \"#utility.yul\":19916:19918   */\n      0x40\n        /* \"#utility.yul\":19905:19914   */\n      dup4\n        /* \"#utility.yul\":19901:19919   */\n      add\n        /* \"#utility.yul\":19892:19898   */\n      dup5\n        /* \"#utility.yul\":19848:19920   */\n      tag_407\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":19485:19927   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19933:20018   */\n    tag_437:\n        /* \"#utility.yul\":19978:19985   */\n      0x00\n        /* \"#utility.yul\":20007:20012   */\n      dup2\n        /* \"#utility.yul\":19996:20012   */\n      swap1\n      pop\n        /* \"#utility.yul\":19933:20018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20024:20182   */\n    tag_438:\n        /* \"#utility.yul\":20082:20091   */\n      0x00\n        /* \"#utility.yul\":20115:20176   */\n      tag_663\n        /* \"#utility.yul\":20133:20175   */\n      tag_664\n        /* \"#utility.yul\":20142:20174   */\n      tag_665\n        /* \"#utility.yul\":20168:20173   */\n      dup5\n        /* \"#utility.yul\":20142:20174   */\n      tag_437\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":20133:20175   */\n      tag_418\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":20115:20176   */\n      tag_395\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":20102:20176   */\n      swap1\n      pop\n        /* \"#utility.yul\":20024:20182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20188:20335   */\n    tag_439:\n        /* \"#utility.yul\":20283:20328   */\n      tag_667\n        /* \"#utility.yul\":20322:20327   */\n      dup2\n        /* \"#utility.yul\":20283:20328   */\n      tag_438\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":20278:20281   */\n      dup3\n        /* \"#utility.yul\":20271:20329   */\n      mstore\n        /* \"#utility.yul\":20188:20335   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20341:20799   */\n    tag_225:\n        /* \"#utility.yul\":20498:20502   */\n      0x00\n        /* \"#utility.yul\":20536:20538   */\n      0x60\n        /* \"#utility.yul\":20525:20534   */\n      dup3\n        /* \"#utility.yul\":20521:20539   */\n      add\n        /* \"#utility.yul\":20513:20539   */\n      swap1\n      pop\n        /* \"#utility.yul\":20549:20620   */\n      tag_669\n        /* \"#utility.yul\":20617:20618   */\n      0x00\n        /* \"#utility.yul\":20606:20615   */\n      dup4\n        /* \"#utility.yul\":20602:20619   */\n      add\n        /* \"#utility.yul\":20593:20599   */\n      dup7\n        /* \"#utility.yul\":20549:20620   */\n      tag_406\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":20630:20710   */\n      tag_670\n        /* \"#utility.yul\":20706:20708   */\n      0x20\n        /* \"#utility.yul\":20695:20704   */\n      dup4\n        /* \"#utility.yul\":20691:20709   */\n      add\n        /* \"#utility.yul\":20682:20688   */\n      dup6\n        /* \"#utility.yul\":20630:20710   */\n      tag_439\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":20720:20792   */\n      tag_671\n        /* \"#utility.yul\":20788:20790   */\n      0x40\n        /* \"#utility.yul\":20777:20786   */\n      dup4\n        /* \"#utility.yul\":20773:20791   */\n      add\n        /* \"#utility.yul\":20764:20770   */\n      dup5\n        /* \"#utility.yul\":20720:20792   */\n      tag_407\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":20341:20799   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20805:20953   */\n    tag_440:\n        /* \"#utility.yul\":20907:20918   */\n      0x00\n        /* \"#utility.yul\":20944:20947   */\n      dup2\n        /* \"#utility.yul\":20929:20947   */\n      swap1\n      pop\n        /* \"#utility.yul\":20805:20953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20959:21349   */\n    tag_441:\n        /* \"#utility.yul\":21065:21068   */\n      0x00\n        /* \"#utility.yul\":21093:21132   */\n      tag_674\n        /* \"#utility.yul\":21126:21131   */\n      dup3\n        /* \"#utility.yul\":21093:21132   */\n      tag_390\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":21148:21237   */\n      tag_675\n        /* \"#utility.yul\":21230:21236   */\n      dup2\n        /* \"#utility.yul\":21225:21228   */\n      dup6\n        /* \"#utility.yul\":21148:21237   */\n      tag_440\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":21141:21237   */\n      swap4\n      pop\n        /* \"#utility.yul\":21246:21311   */\n      tag_676\n        /* \"#utility.yul\":21304:21310   */\n      dup2\n        /* \"#utility.yul\":21299:21302   */\n      dup6\n        /* \"#utility.yul\":21292:21296   */\n      0x20\n        /* \"#utility.yul\":21285:21290   */\n      dup7\n        /* \"#utility.yul\":21281:21297   */\n      add\n        /* \"#utility.yul\":21246:21311   */\n      tag_392\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":21336:21342   */\n      dup1\n        /* \"#utility.yul\":21331:21334   */\n      dup5\n        /* \"#utility.yul\":21327:21343   */\n      add\n        /* \"#utility.yul\":21320:21343   */\n      swap2\n      pop\n        /* \"#utility.yul\":21069:21349   */\n      pop\n        /* \"#utility.yul\":20959:21349   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21355:21790   */\n    tag_249:\n        /* \"#utility.yul\":21535:21538   */\n      0x00\n        /* \"#utility.yul\":21557:21652   */\n      tag_678\n        /* \"#utility.yul\":21648:21651   */\n      dup3\n        /* \"#utility.yul\":21639:21645   */\n      dup6\n        /* \"#utility.yul\":21557:21652   */\n      tag_441\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":21550:21652   */\n      swap2\n      pop\n        /* \"#utility.yul\":21669:21764   */\n      tag_679\n        /* \"#utility.yul\":21760:21763   */\n      dup3\n        /* \"#utility.yul\":21751:21757   */\n      dup5\n        /* \"#utility.yul\":21669:21764   */\n      tag_441\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":21662:21764   */\n      swap2\n      pop\n        /* \"#utility.yul\":21781:21784   */\n      dup2\n        /* \"#utility.yul\":21774:21784   */\n      swap1\n      pop\n        /* \"#utility.yul\":21355:21790   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21796:21894   */\n    tag_442:\n        /* \"#utility.yul\":21847:21853   */\n      0x00\n        /* \"#utility.yul\":21881:21886   */\n      dup2\n        /* \"#utility.yul\":21875:21887   */\n      mload\n        /* \"#utility.yul\":21865:21887   */\n      swap1\n      pop\n        /* \"#utility.yul\":21796:21894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21900:22068   */\n    tag_443:\n        /* \"#utility.yul\":21983:21994   */\n      0x00\n        /* \"#utility.yul\":22017:22023   */\n      dup3\n        /* \"#utility.yul\":22012:22015   */\n      dup3\n        /* \"#utility.yul\":22005:22024   */\n      mstore\n        /* \"#utility.yul\":22057:22061   */\n      0x20\n        /* \"#utility.yul\":22052:22055   */\n      dup3\n        /* \"#utility.yul\":22048:22062   */\n      add\n        /* \"#utility.yul\":22033:22062   */\n      swap1\n      pop\n        /* \"#utility.yul\":21900:22068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22074:22447   */\n    tag_444:\n        /* \"#utility.yul\":22160:22163   */\n      0x00\n        /* \"#utility.yul\":22188:22226   */\n      tag_683\n        /* \"#utility.yul\":22220:22225   */\n      dup3\n        /* \"#utility.yul\":22188:22226   */\n      tag_442\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":22242:22312   */\n      tag_684\n        /* \"#utility.yul\":22305:22311   */\n      dup2\n        /* \"#utility.yul\":22300:22303   */\n      dup6\n        /* \"#utility.yul\":22242:22312   */\n      tag_443\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":22235:22312   */\n      swap4\n      pop\n        /* \"#utility.yul\":22321:22386   */\n      tag_685\n        /* \"#utility.yul\":22379:22385   */\n      dup2\n        /* \"#utility.yul\":22374:22377   */\n      dup6\n        /* \"#utility.yul\":22367:22371   */\n      0x20\n        /* \"#utility.yul\":22360:22365   */\n      dup7\n        /* \"#utility.yul\":22356:22372   */\n      add\n        /* \"#utility.yul\":22321:22386   */\n      tag_392\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":22411:22440   */\n      tag_686\n        /* \"#utility.yul\":22433:22439   */\n      dup2\n        /* \"#utility.yul\":22411:22440   */\n      tag_393\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":22406:22409   */\n      dup5\n        /* \"#utility.yul\":22402:22441   */\n      add\n        /* \"#utility.yul\":22395:22441   */\n      swap2\n      pop\n        /* \"#utility.yul\":22164:22447   */\n      pop\n        /* \"#utility.yul\":22074:22447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22453:23093   */\n    tag_306:\n        /* \"#utility.yul\":22648:22652   */\n      0x00\n        /* \"#utility.yul\":22686:22689   */\n      0x80\n        /* \"#utility.yul\":22675:22684   */\n      dup3\n        /* \"#utility.yul\":22671:22690   */\n      add\n        /* \"#utility.yul\":22663:22690   */\n      swap1\n      pop\n        /* \"#utility.yul\":22700:22771   */\n      tag_688\n        /* \"#utility.yul\":22768:22769   */\n      0x00\n        /* \"#utility.yul\":22757:22766   */\n      dup4\n        /* \"#utility.yul\":22753:22770   */\n      add\n        /* \"#utility.yul\":22744:22750   */\n      dup8\n        /* \"#utility.yul\":22700:22771   */\n      tag_400\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":22781:22853   */\n      tag_689\n        /* \"#utility.yul\":22849:22851   */\n      0x20\n        /* \"#utility.yul\":22838:22847   */\n      dup4\n        /* \"#utility.yul\":22834:22852   */\n      add\n        /* \"#utility.yul\":22825:22831   */\n      dup7\n        /* \"#utility.yul\":22781:22853   */\n      tag_400\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":22863:22935   */\n      tag_690\n        /* \"#utility.yul\":22931:22933   */\n      0x40\n        /* \"#utility.yul\":22920:22929   */\n      dup4\n        /* \"#utility.yul\":22916:22934   */\n      add\n        /* \"#utility.yul\":22907:22913   */\n      dup6\n        /* \"#utility.yul\":22863:22935   */\n      tag_406\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":22982:22991   */\n      dup2\n        /* \"#utility.yul\":22976:22980   */\n      dup2\n        /* \"#utility.yul\":22972:22992   */\n      sub\n        /* \"#utility.yul\":22967:22969   */\n      0x60\n        /* \"#utility.yul\":22956:22965   */\n      dup4\n        /* \"#utility.yul\":22952:22970   */\n      add\n        /* \"#utility.yul\":22945:22993   */\n      mstore\n        /* \"#utility.yul\":23010:23086   */\n      tag_691\n        /* \"#utility.yul\":23081:23085   */\n      dup2\n        /* \"#utility.yul\":23072:23078   */\n      dup5\n        /* \"#utility.yul\":23010:23086   */\n      tag_444\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":23002:23086   */\n      swap1\n      pop\n        /* \"#utility.yul\":22453:23093   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23099:23240   */\n    tag_445:\n        /* \"#utility.yul\":23155:23160   */\n      0x00\n        /* \"#utility.yul\":23186:23192   */\n      dup2\n        /* \"#utility.yul\":23180:23193   */\n      mload\n        /* \"#utility.yul\":23171:23193   */\n      swap1\n      pop\n        /* \"#utility.yul\":23202:23234   */\n      tag_693\n        /* \"#utility.yul\":23228:23233   */\n      dup2\n        /* \"#utility.yul\":23202:23234   */\n      tag_386\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":23099:23240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23246:23595   */\n    tag_309:\n        /* \"#utility.yul\":23315:23321   */\n      0x00\n        /* \"#utility.yul\":23364:23366   */\n      0x20\n        /* \"#utility.yul\":23352:23361   */\n      dup3\n        /* \"#utility.yul\":23343:23350   */\n      dup5\n        /* \"#utility.yul\":23339:23362   */\n      sub\n        /* \"#utility.yul\":23335:23367   */\n      slt\n        /* \"#utility.yul\":23332:23451   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":23370:23449   */\n      tag_696\n      tag_383\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":23332:23451   */\n    tag_695:\n        /* \"#utility.yul\":23490:23491   */\n      0x00\n        /* \"#utility.yul\":23515:23578   */\n      tag_697\n        /* \"#utility.yul\":23570:23577   */\n      dup5\n        /* \"#utility.yul\":23561:23567   */\n      dup3\n        /* \"#utility.yul\":23550:23559   */\n      dup6\n        /* \"#utility.yul\":23546:23568   */\n      add\n        /* \"#utility.yul\":23515:23578   */\n      tag_445\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":23505:23578   */\n      swap2\n      pop\n        /* \"#utility.yul\":23461:23588   */\n      pop\n        /* \"#utility.yul\":23246:23595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23601:23781   */\n    tag_334:\n        /* \"#utility.yul\":23649:23726   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23646:23647   */\n      0x00\n        /* \"#utility.yul\":23639:23727   */\n      mstore\n        /* \"#utility.yul\":23746:23750   */\n      0x12\n        /* \"#utility.yul\":23743:23744   */\n      0x04\n        /* \"#utility.yul\":23736:23751   */\n      mstore\n        /* \"#utility.yul\":23770:23774   */\n      0x24\n        /* \"#utility.yul\":23767:23768   */\n      0x00\n        /* \"#utility.yul\":23760:23775   */\n      revert\n        /* \"#utility.yul\":23787:24119   */\n    tag_355:\n        /* \"#utility.yul\":23908:23912   */\n      0x00\n        /* \"#utility.yul\":23946:23948   */\n      0x40\n        /* \"#utility.yul\":23935:23944   */\n      dup3\n        /* \"#utility.yul\":23931:23949   */\n      add\n        /* \"#utility.yul\":23923:23949   */\n      swap1\n      pop\n        /* \"#utility.yul\":23959:24030   */\n      tag_700\n        /* \"#utility.yul\":24027:24028   */\n      0x00\n        /* \"#utility.yul\":24016:24025   */\n      dup4\n        /* \"#utility.yul\":24012:24029   */\n      add\n        /* \"#utility.yul\":24003:24009   */\n      dup6\n        /* \"#utility.yul\":23959:24030   */\n      tag_400\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":24040:24112   */\n      tag_701\n        /* \"#utility.yul\":24108:24110   */\n      0x20\n        /* \"#utility.yul\":24097:24106   */\n      dup4\n        /* \"#utility.yul\":24093:24111   */\n      add\n        /* \"#utility.yul\":24084:24090   */\n      dup5\n        /* \"#utility.yul\":24040:24112   */\n      tag_406\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":23787:24119   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203214b1311ee203f100044891666930a905352eda97e01f39fd84b5c43873793264736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3149": {
									"entryPoint": null,
									"id": 3149,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_432": {
									"entryPoint": null,
									"id": 432,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 470,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1203,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7090:15",
										"nodeType": "YulBlock",
										"src": "0:7090:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "759:80:15",
													"nodeType": "YulBlock",
													"src": "759:80:15",
													"statements": [
														{
															"nativeSrc": "769:22:15",
															"nodeType": "YulAssignment",
															"src": "769:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:15"
																},
																"nativeSrc": "778:13:15",
																"nodeType": "YulFunctionCall",
																"src": "778:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:15"
																},
																"nativeSrc": "800:33:15",
																"nodeType": "YulFunctionCall",
																"src": "800:33:15"
															},
															"nativeSrc": "800:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:15",
														"nodeType": "YulTypedName",
														"src": "737:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:15",
														"nodeType": "YulTypedName",
														"src": "745:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:15",
														"nodeType": "YulTypedName",
														"src": "753:5:15",
														"type": ""
													}
												],
												"src": "696:143:15"
											},
											{
												"body": {
													"nativeSrc": "956:552:15",
													"nodeType": "YulBlock",
													"src": "956:552:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:15",
																"nodeType": "YulBlock",
																"src": "1002:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:15"
																			},
																			"nativeSrc": "1004:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:15"
																		},
																		"nativeSrc": "1004:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:15"
																		},
																		"nativeSrc": "973:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:15",
																		"nodeType": "YulLiteral",
																		"src": "998:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:15"
																},
																"nativeSrc": "969:32:15",
																"nodeType": "YulFunctionCall",
																"src": "969:32:15"
															},
															"nativeSrc": "966:119:15",
															"nodeType": "YulIf",
															"src": "966:119:15"
														},
														{
															"nativeSrc": "1095:128:15",
															"nodeType": "YulBlock",
															"src": "1095:128:15",
															"statements": [
																{
																	"nativeSrc": "1110:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:15"
																				},
																				"nativeSrc": "1181:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:15"
																		},
																		"nativeSrc": "1149:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:15",
															"nodeType": "YulBlock",
															"src": "1233:129:15",
															"statements": [
																{
																	"nativeSrc": "1248:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:15"
																				},
																				"nativeSrc": "1320:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:15"
																		},
																		"nativeSrc": "1288:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:15",
															"nodeType": "YulBlock",
															"src": "1372:129:15",
															"statements": [
																{
																	"nativeSrc": "1387:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:15"
																				},
																				"nativeSrc": "1459:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:15"
																		},
																		"nativeSrc": "1427:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:15",
														"nodeType": "YulTypedName",
														"src": "910:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:15",
														"nodeType": "YulTypedName",
														"src": "921:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:15",
														"nodeType": "YulTypedName",
														"src": "933:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:15",
														"nodeType": "YulTypedName",
														"src": "941:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:15",
														"nodeType": "YulTypedName",
														"src": "949:6:15",
														"type": ""
													}
												],
												"src": "845:663:15"
											},
											{
												"body": {
													"nativeSrc": "1573:40:15",
													"nodeType": "YulBlock",
													"src": "1573:40:15",
													"statements": [
														{
															"nativeSrc": "1584:22:15",
															"nodeType": "YulAssignment",
															"src": "1584:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1600:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1600:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1594:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1594:5:15"
																},
																"nativeSrc": "1594:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1594:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1584:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1514:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1556:5:15",
														"nodeType": "YulTypedName",
														"src": "1556:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1566:6:15",
														"nodeType": "YulTypedName",
														"src": "1566:6:15",
														"type": ""
													}
												],
												"src": "1514:99:15"
											},
											{
												"body": {
													"nativeSrc": "1647:152:15",
													"nodeType": "YulBlock",
													"src": "1647:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:77:15",
																		"nodeType": "YulLiteral",
																		"src": "1667:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1657:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:15"
																},
																"nativeSrc": "1657:88:15",
																"nodeType": "YulFunctionCall",
																"src": "1657:88:15"
															},
															"nativeSrc": "1657:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "1657:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1761:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1764:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1754:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:15"
																},
																"nativeSrc": "1754:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1754:15:15"
															},
															"nativeSrc": "1754:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1754:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1785:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1785:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1788:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1788:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1778:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1778:6:15"
																},
																"nativeSrc": "1778:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1778:15:15"
															},
															"nativeSrc": "1778:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1778:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1619:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1619:180:15"
											},
											{
												"body": {
													"nativeSrc": "1833:152:15",
													"nodeType": "YulBlock",
													"src": "1833:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1850:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1850:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1853:77:15",
																		"nodeType": "YulLiteral",
																		"src": "1853:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1843:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:15"
																},
																"nativeSrc": "1843:88:15",
																"nodeType": "YulFunctionCall",
																"src": "1843:88:15"
															},
															"nativeSrc": "1843:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "1843:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1947:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1947:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1950:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1950:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1940:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1940:6:15"
																},
																"nativeSrc": "1940:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1940:15:15"
															},
															"nativeSrc": "1940:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1940:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1971:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1971:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1974:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1964:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:15"
																},
																"nativeSrc": "1964:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1964:15:15"
															},
															"nativeSrc": "1964:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1964:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1805:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1805:180:15"
											},
											{
												"body": {
													"nativeSrc": "2042:269:15",
													"nodeType": "YulBlock",
													"src": "2042:269:15",
													"statements": [
														{
															"nativeSrc": "2052:22:15",
															"nodeType": "YulAssignment",
															"src": "2052:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2066:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2066:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2072:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2072:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2062:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:15"
																},
																"nativeSrc": "2062:12:15",
																"nodeType": "YulFunctionCall",
																"src": "2062:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2052:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:15"
																}
															]
														},
														{
															"nativeSrc": "2083:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2083:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2113:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2113:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2119:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2119:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2109:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:15"
																},
																"nativeSrc": "2109:12:15",
																"nodeType": "YulFunctionCall",
																"src": "2109:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2087:18:15",
																	"nodeType": "YulTypedName",
																	"src": "2087:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2160:51:15",
																"nodeType": "YulBlock",
																"src": "2160:51:15",
																"statements": [
																	{
																		"nativeSrc": "2174:27:15",
																		"nodeType": "YulAssignment",
																		"src": "2174:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2188:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "2188:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2196:4:15",
																					"nodeType": "YulLiteral",
																					"src": "2196:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2184:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2184:3:15"
																			},
																			"nativeSrc": "2184:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2184:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2174:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2174:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2140:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "2140:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2133:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:15"
																},
																"nativeSrc": "2133:26:15",
																"nodeType": "YulFunctionCall",
																"src": "2133:26:15"
															},
															"nativeSrc": "2130:81:15",
															"nodeType": "YulIf",
															"src": "2130:81:15"
														},
														{
															"body": {
																"nativeSrc": "2263:42:15",
																"nodeType": "YulBlock",
																"src": "2263:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2277:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "2277:16:15"
																			},
																			"nativeSrc": "2277:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:18:15"
																		},
																		"nativeSrc": "2277:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2277:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2227:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "2227:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2250:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2250:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2258:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2258:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2247:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2247:2:15"
																		},
																		"nativeSrc": "2247:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2247:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2224:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2224:2:15"
																},
																"nativeSrc": "2224:38:15",
																"nodeType": "YulFunctionCall",
																"src": "2224:38:15"
															},
															"nativeSrc": "2221:84:15",
															"nodeType": "YulIf",
															"src": "2221:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1991:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2026:4:15",
														"nodeType": "YulTypedName",
														"src": "2026:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2035:6:15",
														"nodeType": "YulTypedName",
														"src": "2035:6:15",
														"type": ""
													}
												],
												"src": "1991:320:15"
											},
											{
												"body": {
													"nativeSrc": "2371:87:15",
													"nodeType": "YulBlock",
													"src": "2371:87:15",
													"statements": [
														{
															"nativeSrc": "2381:11:15",
															"nodeType": "YulAssignment",
															"src": "2381:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "2389:3:15",
																"nodeType": "YulIdentifier",
																"src": "2389:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2381:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2381:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2409:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2409:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2412:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2412:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2402:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:15"
																},
																"nativeSrc": "2402:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2402:14:15"
															},
															"nativeSrc": "2402:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "2402:14:15"
														},
														{
															"nativeSrc": "2425:26:15",
															"nodeType": "YulAssignment",
															"src": "2425:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2443:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2443:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2446:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2446:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2433:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2433:9:15"
																},
																"nativeSrc": "2433:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2433:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2425:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2425:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2317:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2358:3:15",
														"nodeType": "YulTypedName",
														"src": "2358:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2366:4:15",
														"nodeType": "YulTypedName",
														"src": "2366:4:15",
														"type": ""
													}
												],
												"src": "2317:141:15"
											},
											{
												"body": {
													"nativeSrc": "2508:49:15",
													"nodeType": "YulBlock",
													"src": "2508:49:15",
													"statements": [
														{
															"nativeSrc": "2518:33:15",
															"nodeType": "YulAssignment",
															"src": "2518:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2536:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2536:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2543:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2543:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2532:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:15"
																		},
																		"nativeSrc": "2532:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2548:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2548:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2528:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:15"
																},
																"nativeSrc": "2528:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2528:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2518:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2464:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2491:5:15",
														"nodeType": "YulTypedName",
														"src": "2491:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2501:6:15",
														"nodeType": "YulTypedName",
														"src": "2501:6:15",
														"type": ""
													}
												],
												"src": "2464:93:15"
											},
											{
												"body": {
													"nativeSrc": "2616:54:15",
													"nodeType": "YulBlock",
													"src": "2616:54:15",
													"statements": [
														{
															"nativeSrc": "2626:37:15",
															"nodeType": "YulAssignment",
															"src": "2626:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2651:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2651:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2657:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2657:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2647:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2647:3:15"
																},
																"nativeSrc": "2647:16:15",
																"nodeType": "YulFunctionCall",
																"src": "2647:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2626:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "2626:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2563:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2591:4:15",
														"nodeType": "YulTypedName",
														"src": "2591:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2597:5:15",
														"nodeType": "YulTypedName",
														"src": "2597:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2607:8:15",
														"nodeType": "YulTypedName",
														"src": "2607:8:15",
														"type": ""
													}
												],
												"src": "2563:107:15"
											},
											{
												"body": {
													"nativeSrc": "2752:317:15",
													"nodeType": "YulBlock",
													"src": "2752:317:15",
													"statements": [
														{
															"nativeSrc": "2762:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2762:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2783:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "2783:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2795:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2795:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2779:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2779:3:15"
																},
																"nativeSrc": "2779:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2779:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2766:9:15",
																	"nodeType": "YulTypedName",
																	"src": "2766:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2806:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2806:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2837:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2848:66:15",
																		"nodeType": "YulLiteral",
																		"src": "2848:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2818:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2818:18:15"
																},
																"nativeSrc": "2818:97:15",
																"nodeType": "YulFunctionCall",
																"src": "2818:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2810:4:15",
																	"nodeType": "YulTypedName",
																	"src": "2810:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2924:51:15",
															"nodeType": "YulAssignment",
															"src": "2924:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2955:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2955:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2966:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "2966:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2936:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2936:18:15"
																},
																"nativeSrc": "2936:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2936:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2924:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "2924:8:15"
																}
															]
														},
														{
															"nativeSrc": "2984:30:15",
															"nodeType": "YulAssignment",
															"src": "2984:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2997:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2997:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3008:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3008:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3004:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:15"
																		},
																		"nativeSrc": "3004:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2993:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:15"
																},
																"nativeSrc": "2993:21:15",
																"nodeType": "YulFunctionCall",
																"src": "2993:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2984:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2984:5:15"
																}
															]
														},
														{
															"nativeSrc": "3023:40:15",
															"nodeType": "YulAssignment",
															"src": "3023:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3036:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3036:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3047:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "3047:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3057:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3057:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3043:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3043:3:15"
																		},
																		"nativeSrc": "3043:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3043:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3033:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3033:2:15"
																},
																"nativeSrc": "3033:30:15",
																"nodeType": "YulFunctionCall",
																"src": "3033:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3023:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2676:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2713:5:15",
														"nodeType": "YulTypedName",
														"src": "2713:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2720:10:15",
														"nodeType": "YulTypedName",
														"src": "2720:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2732:8:15",
														"nodeType": "YulTypedName",
														"src": "2732:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2745:6:15",
														"nodeType": "YulTypedName",
														"src": "2745:6:15",
														"type": ""
													}
												],
												"src": "2676:393:15"
											},
											{
												"body": {
													"nativeSrc": "3120:32:15",
													"nodeType": "YulBlock",
													"src": "3120:32:15",
													"statements": [
														{
															"nativeSrc": "3130:16:15",
															"nodeType": "YulAssignment",
															"src": "3130:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "3141:5:15",
																"nodeType": "YulIdentifier",
																"src": "3141:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3130:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3130:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3075:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3102:5:15",
														"nodeType": "YulTypedName",
														"src": "3102:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3112:7:15",
														"nodeType": "YulTypedName",
														"src": "3112:7:15",
														"type": ""
													}
												],
												"src": "3075:77:15"
											},
											{
												"body": {
													"nativeSrc": "3190:28:15",
													"nodeType": "YulBlock",
													"src": "3190:28:15",
													"statements": [
														{
															"nativeSrc": "3200:12:15",
															"nodeType": "YulAssignment",
															"src": "3200:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "3207:5:15",
																"nodeType": "YulIdentifier",
																"src": "3207:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3200:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3158:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3176:5:15",
														"nodeType": "YulTypedName",
														"src": "3176:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3186:3:15",
														"nodeType": "YulTypedName",
														"src": "3186:3:15",
														"type": ""
													}
												],
												"src": "3158:60:15"
											},
											{
												"body": {
													"nativeSrc": "3284:82:15",
													"nodeType": "YulBlock",
													"src": "3284:82:15",
													"statements": [
														{
															"nativeSrc": "3294:66:15",
															"nodeType": "YulAssignment",
															"src": "3294:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3352:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3352:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3334:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "3334:17:15"
																				},
																				"nativeSrc": "3334:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3334:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3325:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "3325:8:15"
																		},
																		"nativeSrc": "3325:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3325:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3307:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "3307:17:15"
																},
																"nativeSrc": "3307:53:15",
																"nodeType": "YulFunctionCall",
																"src": "3307:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3294:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "3294:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3224:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3264:5:15",
														"nodeType": "YulTypedName",
														"src": "3264:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3274:9:15",
														"nodeType": "YulTypedName",
														"src": "3274:9:15",
														"type": ""
													}
												],
												"src": "3224:142:15"
											},
											{
												"body": {
													"nativeSrc": "3419:28:15",
													"nodeType": "YulBlock",
													"src": "3419:28:15",
													"statements": [
														{
															"nativeSrc": "3429:12:15",
															"nodeType": "YulAssignment",
															"src": "3429:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "3436:5:15",
																"nodeType": "YulIdentifier",
																"src": "3436:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3429:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3429:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3372:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3405:5:15",
														"nodeType": "YulTypedName",
														"src": "3405:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3415:3:15",
														"nodeType": "YulTypedName",
														"src": "3415:3:15",
														"type": ""
													}
												],
												"src": "3372:75:15"
											},
											{
												"body": {
													"nativeSrc": "3529:193:15",
													"nodeType": "YulBlock",
													"src": "3529:193:15",
													"statements": [
														{
															"nativeSrc": "3539:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3539:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3594:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "3594:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3563:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "3563:30:15"
																},
																"nativeSrc": "3563:39:15",
																"nodeType": "YulFunctionCall",
																"src": "3563:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3543:16:15",
																	"nodeType": "YulTypedName",
																	"src": "3543:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3618:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3618:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3658:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "3658:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3652:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "3652:5:15"
																				},
																				"nativeSrc": "3652:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3652:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3665:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3665:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3697:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "3697:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3673:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "3673:23:15"
																				},
																				"nativeSrc": "3673:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3673:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3624:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "3624:27:15"
																		},
																		"nativeSrc": "3624:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3624:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3611:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3611:6:15"
																},
																"nativeSrc": "3611:105:15",
																"nodeType": "YulFunctionCall",
																"src": "3611:105:15"
															},
															"nativeSrc": "3611:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "3611:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3453:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3506:4:15",
														"nodeType": "YulTypedName",
														"src": "3506:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3512:6:15",
														"nodeType": "YulTypedName",
														"src": "3512:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3520:7:15",
														"nodeType": "YulTypedName",
														"src": "3520:7:15",
														"type": ""
													}
												],
												"src": "3453:269:15"
											},
											{
												"body": {
													"nativeSrc": "3777:24:15",
													"nodeType": "YulBlock",
													"src": "3777:24:15",
													"statements": [
														{
															"nativeSrc": "3787:8:15",
															"nodeType": "YulAssignment",
															"src": "3787:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3794:1:15",
																"nodeType": "YulLiteral",
																"src": "3794:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3787:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3728:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3773:3:15",
														"nodeType": "YulTypedName",
														"src": "3773:3:15",
														"type": ""
													}
												],
												"src": "3728:73:15"
											},
											{
												"body": {
													"nativeSrc": "3860:136:15",
													"nodeType": "YulBlock",
													"src": "3860:136:15",
													"statements": [
														{
															"nativeSrc": "3870:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3870:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3884:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "3884:30:15"
																},
																"nativeSrc": "3884:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3884:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3874:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3874:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3969:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3969:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3975:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3975:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3983:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3983:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3925:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "3925:43:15"
																},
																"nativeSrc": "3925:65:15",
																"nodeType": "YulFunctionCall",
																"src": "3925:65:15"
															},
															"nativeSrc": "3925:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "3925:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3807:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3846:4:15",
														"nodeType": "YulTypedName",
														"src": "3846:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3852:6:15",
														"nodeType": "YulTypedName",
														"src": "3852:6:15",
														"type": ""
													}
												],
												"src": "3807:189:15"
											},
											{
												"body": {
													"nativeSrc": "4052:136:15",
													"nodeType": "YulBlock",
													"src": "4052:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4119:63:15",
																"nodeType": "YulBlock",
																"src": "4119:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4163:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "4163:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4170:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4170:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4133:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "4133:29:15"
																			},
																			"nativeSrc": "4133:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4133:39:15"
																		},
																		"nativeSrc": "4133:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4133:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4072:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4072:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4079:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4079:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4069:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4069:2:15"
																},
																"nativeSrc": "4069:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4069:14:15"
															},
															"nativeSrc": "4062:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4084:26:15",
																"nodeType": "YulBlock",
																"src": "4084:26:15",
																"statements": [
																	{
																		"nativeSrc": "4086:22:15",
																		"nodeType": "YulAssignment",
																		"src": "4086:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4099:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "4099:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4106:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4106:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4095:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4095:3:15"
																			},
																			"nativeSrc": "4095:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4095:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4086:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4086:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4066:2:15",
																"nodeType": "YulBlock",
																"src": "4066:2:15",
																"statements": []
															},
															"src": "4062:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4002:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4040:5:15",
														"nodeType": "YulTypedName",
														"src": "4040:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4047:3:15",
														"nodeType": "YulTypedName",
														"src": "4047:3:15",
														"type": ""
													}
												],
												"src": "4002:186:15"
											},
											{
												"body": {
													"nativeSrc": "4273:464:15",
													"nodeType": "YulBlock",
													"src": "4273:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4299:431:15",
																"nodeType": "YulBlock",
																"src": "4299:431:15",
																"statements": [
																	{
																		"nativeSrc": "4313:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4313:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4361:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "4361:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4329:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "4329:31:15"
																			},
																			"nativeSrc": "4329:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4329:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4317:8:15",
																				"nodeType": "YulTypedName",
																				"src": "4317:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4380:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4380:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4403:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "4403:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4431:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "4431:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4413:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "4413:17:15"
																					},
																					"nativeSrc": "4413:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4413:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4399:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4399:3:15"
																			},
																			"nativeSrc": "4399:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4399:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4384:11:15",
																				"nodeType": "YulTypedName",
																				"src": "4384:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4600:27:15",
																			"nodeType": "YulBlock",
																			"src": "4600:27:15",
																			"statements": [
																				{
																					"nativeSrc": "4602:23:15",
																					"nodeType": "YulAssignment",
																					"src": "4602:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4617:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "4617:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4602:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "4602:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4584:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "4584:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4596:2:15",
																					"nodeType": "YulLiteral",
																					"src": "4596:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4581:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "4581:2:15"
																			},
																			"nativeSrc": "4581:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4581:18:15"
																		},
																		"nativeSrc": "4578:49:15",
																		"nodeType": "YulIf",
																		"src": "4578:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4669:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "4669:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4686:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "4686:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4714:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4714:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4696:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "4696:17:15"
																							},
																							"nativeSrc": "4696:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "4696:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4682:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4682:3:15"
																					},
																					"nativeSrc": "4682:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4682:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4640:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "4640:28:15"
																			},
																			"nativeSrc": "4640:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4640:80:15"
																		},
																		"nativeSrc": "4640:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4640:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4290:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4290:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4295:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4287:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4287:2:15"
																},
																"nativeSrc": "4287:11:15",
																"nodeType": "YulFunctionCall",
																"src": "4287:11:15"
															},
															"nativeSrc": "4284:446:15",
															"nodeType": "YulIf",
															"src": "4284:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4194:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4249:5:15",
														"nodeType": "YulTypedName",
														"src": "4249:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4256:3:15",
														"nodeType": "YulTypedName",
														"src": "4256:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4261:10:15",
														"nodeType": "YulTypedName",
														"src": "4261:10:15",
														"type": ""
													}
												],
												"src": "4194:543:15"
											},
											{
												"body": {
													"nativeSrc": "4806:54:15",
													"nodeType": "YulBlock",
													"src": "4806:54:15",
													"statements": [
														{
															"nativeSrc": "4816:37:15",
															"nodeType": "YulAssignment",
															"src": "4816:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4841:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4841:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4847:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4847:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4837:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4837:3:15"
																},
																"nativeSrc": "4837:16:15",
																"nodeType": "YulFunctionCall",
																"src": "4837:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4816:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "4816:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4743:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4781:4:15",
														"nodeType": "YulTypedName",
														"src": "4781:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4787:5:15",
														"nodeType": "YulTypedName",
														"src": "4787:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4797:8:15",
														"nodeType": "YulTypedName",
														"src": "4797:8:15",
														"type": ""
													}
												],
												"src": "4743:117:15"
											},
											{
												"body": {
													"nativeSrc": "4917:118:15",
													"nodeType": "YulBlock",
													"src": "4917:118:15",
													"statements": [
														{
															"nativeSrc": "4927:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4927:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4976:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4976:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4979:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4979:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4972:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4972:3:15"
																				},
																				"nativeSrc": "4972:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4972:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4991:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4991:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4987:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4987:3:15"
																				},
																				"nativeSrc": "4987:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4987:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4943:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "4943:28:15"
																		},
																		"nativeSrc": "4943:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4943:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4939:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:15"
																},
																"nativeSrc": "4939:56:15",
																"nodeType": "YulFunctionCall",
																"src": "4939:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4931:4:15",
																	"nodeType": "YulTypedName",
																	"src": "4931:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5004:25:15",
															"nodeType": "YulAssignment",
															"src": "5004:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5018:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5018:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5024:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5024:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5014:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5014:3:15"
																},
																"nativeSrc": "5014:15:15",
																"nodeType": "YulFunctionCall",
																"src": "5014:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5004:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4866:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4894:4:15",
														"nodeType": "YulTypedName",
														"src": "4894:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4900:5:15",
														"nodeType": "YulTypedName",
														"src": "4900:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4910:6:15",
														"nodeType": "YulTypedName",
														"src": "4910:6:15",
														"type": ""
													}
												],
												"src": "4866:169:15"
											},
											{
												"body": {
													"nativeSrc": "5121:214:15",
													"nodeType": "YulBlock",
													"src": "5121:214:15",
													"statements": [
														{
															"nativeSrc": "5254:37:15",
															"nodeType": "YulAssignment",
															"src": "5254:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5281:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5281:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5287:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5287:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5262:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "5262:18:15"
																},
																"nativeSrc": "5262:29:15",
																"nodeType": "YulFunctionCall",
																"src": "5262:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5254:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5254:4:15"
																}
															]
														},
														{
															"nativeSrc": "5300:29:15",
															"nodeType": "YulAssignment",
															"src": "5300:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5311:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5311:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5321:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5321:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5324:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5324:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5317:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5317:3:15"
																		},
																		"nativeSrc": "5317:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5317:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5308:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5308:2:15"
																},
																"nativeSrc": "5308:21:15",
																"nodeType": "YulFunctionCall",
																"src": "5308:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5300:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5300:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5040:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5102:4:15",
														"nodeType": "YulTypedName",
														"src": "5102:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5108:3:15",
														"nodeType": "YulTypedName",
														"src": "5108:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5116:4:15",
														"nodeType": "YulTypedName",
														"src": "5116:4:15",
														"type": ""
													}
												],
												"src": "5040:295:15"
											},
											{
												"body": {
													"nativeSrc": "5432:1303:15",
													"nodeType": "YulBlock",
													"src": "5432:1303:15",
													"statements": [
														{
															"nativeSrc": "5443:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5443:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5490:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5490:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5457:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "5457:32:15"
																},
																"nativeSrc": "5457:37:15",
																"nodeType": "YulFunctionCall",
																"src": "5457:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5447:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5447:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5579:22:15",
																"nodeType": "YulBlock",
																"src": "5579:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5581:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "5581:16:15"
																			},
																			"nativeSrc": "5581:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5581:18:15"
																		},
																		"nativeSrc": "5581:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5581:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5551:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5551:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5559:18:15",
																		"nodeType": "YulLiteral",
																		"src": "5559:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5548:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5548:2:15"
																},
																"nativeSrc": "5548:30:15",
																"nodeType": "YulFunctionCall",
																"src": "5548:30:15"
															},
															"nativeSrc": "5545:56:15",
															"nodeType": "YulIf",
															"src": "5545:56:15"
														},
														{
															"nativeSrc": "5611:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5611:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5657:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5657:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5651:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5651:5:15"
																		},
																		"nativeSrc": "5651:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5651:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5625:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "5625:25:15"
																},
																"nativeSrc": "5625:38:15",
																"nodeType": "YulFunctionCall",
																"src": "5625:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5615:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5615:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5756:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5756:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5762:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5762:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5770:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5710:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "5710:45:15"
																},
																"nativeSrc": "5710:67:15",
																"nodeType": "YulFunctionCall",
																"src": "5710:67:15"
															},
															"nativeSrc": "5710:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "5710:67:15"
														},
														{
															"nativeSrc": "5787:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5787:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5804:1:15",
																"nodeType": "YulLiteral",
																"src": "5804:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5791:9:15",
																	"nodeType": "YulTypedName",
																	"src": "5791:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5815:17:15",
															"nodeType": "YulAssignment",
															"src": "5815:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5828:4:15",
																"nodeType": "YulLiteral",
																"src": "5828:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5815:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "5815:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5879:611:15",
																		"nodeType": "YulBlock",
																		"src": "5879:611:15",
																		"statements": [
																			{
																				"nativeSrc": "5893:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5893:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5912:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "5912:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5924:4:15",
																									"nodeType": "YulLiteral",
																									"src": "5924:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5920:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "5920:3:15"
																							},
																							"nativeSrc": "5920:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "5920:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5908:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5908:3:15"
																					},
																					"nativeSrc": "5908:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5908:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5897:7:15",
																						"nodeType": "YulTypedName",
																						"src": "5897:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5944:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5944:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5990:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "5990:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5958:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "5958:31:15"
																					},
																					"nativeSrc": "5958:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5958:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5948:6:15",
																						"nodeType": "YulTypedName",
																						"src": "5948:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6008:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6008:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6017:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6017:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6012:1:15",
																						"nodeType": "YulTypedName",
																						"src": "6012:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6076:163:15",
																					"nodeType": "YulBlock",
																					"src": "6076:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6101:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "6101:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6119:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "6119:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6124:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "6124:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6115:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "6115:3:15"
																												},
																												"nativeSrc": "6115:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "6115:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6109:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "6109:5:15"
																										},
																										"nativeSrc": "6109:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "6109:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6094:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "6094:6:15"
																								},
																								"nativeSrc": "6094:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6094:42:15"
																							},
																							"nativeSrc": "6094:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "6094:42:15"
																						},
																						{
																							"nativeSrc": "6153:24:15",
																							"nodeType": "YulAssignment",
																							"src": "6153:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6167:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "6167:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6175:1:15",
																										"nodeType": "YulLiteral",
																										"src": "6175:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6163:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "6163:3:15"
																								},
																								"nativeSrc": "6163:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6163:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6153:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "6153:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6194:31:15",
																							"nodeType": "YulAssignment",
																							"src": "6194:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6211:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "6211:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6222:2:15",
																										"nodeType": "YulLiteral",
																										"src": "6222:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6207:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "6207:3:15"
																								},
																								"nativeSrc": "6207:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6207:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6194:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "6194:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6042:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "6042:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6045:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "6045:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6039:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "6039:2:15"
																					},
																					"nativeSrc": "6039:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6039:14:15"
																				},
																				"nativeSrc": "6031:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6054:21:15",
																					"nodeType": "YulBlock",
																					"src": "6054:21:15",
																					"statements": [
																						{
																							"nativeSrc": "6056:17:15",
																							"nodeType": "YulAssignment",
																							"src": "6056:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6065:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "6065:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6068:4:15",
																										"nodeType": "YulLiteral",
																										"src": "6068:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6061:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "6061:3:15"
																								},
																								"nativeSrc": "6061:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6061:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6056:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "6056:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6035:3:15",
																					"nodeType": "YulBlock",
																					"src": "6035:3:15",
																					"statements": []
																				},
																				"src": "6031:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "6275:156:15",
																					"nodeType": "YulBlock",
																					"src": "6275:156:15",
																					"statements": [
																						{
																							"nativeSrc": "6293:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6293:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6320:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "6320:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6325:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "6325:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6316:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "6316:3:15"
																										},
																										"nativeSrc": "6316:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "6316:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6310:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "6310:5:15"
																								},
																								"nativeSrc": "6310:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6310:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6297:9:15",
																									"nodeType": "YulTypedName",
																									"src": "6297:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6360:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "6360:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6387:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "6387:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6402:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "6402:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6410:4:15",
																														"nodeType": "YulLiteral",
																														"src": "6410:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6398:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "6398:3:15"
																												},
																												"nativeSrc": "6398:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "6398:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6368:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "6368:18:15"
																										},
																										"nativeSrc": "6368:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "6368:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6353:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "6353:6:15"
																								},
																								"nativeSrc": "6353:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6353:64:15"
																							},
																							"nativeSrc": "6353:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "6353:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6258:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "6258:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6267:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "6267:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6255:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "6255:2:15"
																					},
																					"nativeSrc": "6255:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6255:19:15"
																				},
																				"nativeSrc": "6252:179:15",
																				"nodeType": "YulIf",
																				"src": "6252:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6451:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "6451:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6465:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "6465:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6473:1:15",
																											"nodeType": "YulLiteral",
																											"src": "6473:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6461:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "6461:3:15"
																									},
																									"nativeSrc": "6461:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "6461:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6477:1:15",
																									"nodeType": "YulLiteral",
																									"src": "6477:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6457:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "6457:3:15"
																							},
																							"nativeSrc": "6457:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "6457:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6444:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6444:6:15"
																					},
																					"nativeSrc": "6444:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6444:36:15"
																				},
																				"nativeSrc": "6444:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "6444:36:15"
																			}
																		]
																	},
																	"nativeSrc": "5872:618:15",
																	"nodeType": "YulCase",
																	"src": "5872:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5877:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5877:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6507:222:15",
																		"nodeType": "YulBlock",
																		"src": "6507:222:15",
																		"statements": [
																			{
																				"nativeSrc": "6521:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6521:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6534:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6534:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6525:5:15",
																						"nodeType": "YulTypedName",
																						"src": "6525:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6558:67:15",
																					"nodeType": "YulBlock",
																					"src": "6558:67:15",
																					"statements": [
																						{
																							"nativeSrc": "6576:35:15",
																							"nodeType": "YulAssignment",
																							"src": "6576:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6595:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "6595:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6600:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "6600:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6591:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "6591:3:15"
																										},
																										"nativeSrc": "6591:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "6591:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6585:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "6585:5:15"
																								},
																								"nativeSrc": "6585:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "6585:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6576:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "6576:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6551:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "6551:6:15"
																				},
																				"nativeSrc": "6548:77:15",
																				"nodeType": "YulIf",
																				"src": "6548:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6645:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "6645:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6704:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "6704:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6711:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "6711:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6651:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "6651:52:15"
																							},
																							"nativeSrc": "6651:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "6651:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6638:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6638:6:15"
																					},
																					"nativeSrc": "6638:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6638:81:15"
																				},
																				"nativeSrc": "6638:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "6638:81:15"
																			}
																		]
																	},
																	"nativeSrc": "6499:230:15",
																	"nodeType": "YulCase",
																	"src": "6499:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5852:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5860:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5860:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5849:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5849:2:15"
																},
																"nativeSrc": "5849:14:15",
																"nodeType": "YulFunctionCall",
																"src": "5849:14:15"
															},
															"nativeSrc": "5842:887:15",
															"nodeType": "YulSwitch",
															"src": "5842:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5340:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5421:4:15",
														"nodeType": "YulTypedName",
														"src": "5421:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5427:3:15",
														"nodeType": "YulTypedName",
														"src": "5427:3:15",
														"type": ""
													}
												],
												"src": "5340:1395:15"
											},
											{
												"body": {
													"nativeSrc": "6806:53:15",
													"nodeType": "YulBlock",
													"src": "6806:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6823:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6823:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6846:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6846:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6828:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "6828:17:15"
																		},
																		"nativeSrc": "6828:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6828:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6816:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6816:6:15"
																},
																"nativeSrc": "6816:37:15",
																"nodeType": "YulFunctionCall",
																"src": "6816:37:15"
															},
															"nativeSrc": "6816:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "6816:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6741:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6794:5:15",
														"nodeType": "YulTypedName",
														"src": "6794:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6801:3:15",
														"nodeType": "YulTypedName",
														"src": "6801:3:15",
														"type": ""
													}
												],
												"src": "6741:118:15"
											},
											{
												"body": {
													"nativeSrc": "6963:124:15",
													"nodeType": "YulBlock",
													"src": "6963:124:15",
													"statements": [
														{
															"nativeSrc": "6973:26:15",
															"nodeType": "YulAssignment",
															"src": "6973:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6985:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6985:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6996:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6996:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6981:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6981:3:15"
																},
																"nativeSrc": "6981:18:15",
																"nodeType": "YulFunctionCall",
																"src": "6981:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6973:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6973:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7053:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7053:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7066:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7066:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7077:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7077:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7062:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7062:3:15"
																		},
																		"nativeSrc": "7062:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7062:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7009:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "7009:43:15"
																},
																"nativeSrc": "7009:71:15",
																"nodeType": "YulFunctionCall",
																"src": "7009:71:15"
															},
															"nativeSrc": "7009:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "7009:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6865:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6935:9:15",
														"nodeType": "YulTypedName",
														"src": "6935:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6947:6:15",
														"nodeType": "YulTypedName",
														"src": "6947:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6958:4:15",
														"nodeType": "YulTypedName",
														"src": "6958:4:15",
														"type": ""
													}
												],
												"src": "6865:222:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620032b3380380620032b38339818101604052810190620000369190620002fe565b816040518060400160405280600a81526020017f4e465450617469656e74000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4e504e5400000000000000000000000000000000000000000000000000000000815250815f9081620000b39190620005bb565b508060019081620000c59190620005bb565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001329190620006b0565b60405180910390fd5b6200014c81620001d660201b60201c565b508260085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620006cb565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002c8826200029d565b9050919050565b620002da81620002bc565b8114620002e5575f80fd5b50565b5f81519050620002f881620002cf565b92915050565b5f805f6060848603121562000318576200031762000299565b5b5f6200032786828701620002e8565b93505060206200033a86828701620002e8565b92505060406200034d86828701620002e8565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620003d357607f821691505b602082108103620003e957620003e86200038e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200044d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000410565b62000459868362000410565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620004a36200049d620004978462000471565b6200047a565b62000471565b9050919050565b5f819050919050565b620004be8362000483565b620004d6620004cd82620004aa565b8484546200041c565b825550505050565b5f90565b620004ec620004de565b620004f9818484620004b3565b505050565b5b818110156200052057620005145f82620004e2565b600181019050620004ff565b5050565b601f8211156200056f576200053981620003ef565b620005448462000401565b8101602085101562000554578190505b6200056c620005638562000401565b830182620004fe565b50505b505050565b5f82821c905092915050565b5f620005915f198460080262000574565b1980831691505092915050565b5f620005ab838362000580565b9150826002028217905092915050565b620005c68262000357565b67ffffffffffffffff811115620005e257620005e162000361565b5b620005ee8254620003bb565b620005fb82828562000524565b5f60209050601f83116001811462000631575f84156200061c578287015190505b6200062885826200059e565b86555062000697565b601f1984166200064186620003ef565b5f5b828110156200066a5784890151825560018201915060208501945060208101905062000643565b868310156200068a578489015162000686601f89168262000580565b8355505b6001600288020188555050505b505050505050565b620006aa81620002bc565b82525050565b5f602082019050620006c55f8301846200069f565b92915050565b612bda80620006d95f395ff3fe60806040526004361061013f575f3560e01c8063863b3894116100b5578063a22cb4651161006e578063a22cb4651461044d578063b88d4fde14610475578063b8fcf9371461049d578063c87b56dd146104c7578063e985e9c514610503578063f2fde38b1461053f5761013f565b8063863b38941461033b5780638da5cb5b146103655780638f3481c01461038f57806394407465146103bf57806394ab67fe146103fb57806395d89b41146104235761013f565b8063374189721161010757806337418972146102355780633c168eab1461025d57806342842e0e146102855780636352211e146102ad57806370a08231146102e9578063715018a6146103255761013f565b806301ffc9a71461014357806306fdde031461017f578063081812fc146101a9578063095ea7b3146101e557806323b872dd1461020d575b5f80fd5b34801561014e575f80fd5b5061016960048036038101906101649190611fe9565b610567565b604051610176919061202e565b60405180910390f35b34801561018a575f80fd5b50610193610648565b6040516101a091906120d1565b60405180910390f35b3480156101b4575f80fd5b506101cf60048036038101906101ca9190612124565b6106d7565b6040516101dc919061218e565b60405180910390f35b3480156101f0575f80fd5b5061020b600480360381019061020691906121d1565b6106f2565b005b348015610218575f80fd5b50610233600480360381019061022e919061220f565b610708565b005b348015610240575f80fd5b5061025b60048036038101906102569190612292565b610807565b005b348015610268575f80fd5b50610283600480360381019061027e91906121d1565b61083b565b005b348015610290575f80fd5b506102ab60048036038101906102a6919061220f565b6108d8565b005b3480156102b8575f80fd5b506102d360048036038101906102ce9190612124565b6108f7565b6040516102e0919061218e565b60405180910390f35b3480156102f4575f80fd5b5061030f600480360381019061030a91906122bd565b610908565b60405161031c91906122f7565b60405180910390f35b348015610330575f80fd5b506103396109be565b005b348015610346575f80fd5b5061034f6109d1565b60405161035c919061218e565b60405180910390f35b348015610370575f80fd5b506103796109f6565b604051610386919061218e565b60405180910390f35b6103a960048036038101906103a49190612310565b610a1e565b6040516103b6919061236f565b60405180910390f35b3480156103ca575f80fd5b506103e560048036038101906103e09190612292565b610c50565b6040516103f2919061202e565b60405180910390f35b348015610406575f80fd5b50610421600480360381019061041c91906121d1565b610c76565b005b34801561042e575f80fd5b50610437610d6b565b60405161044491906120d1565b60405180910390f35b348015610458575f80fd5b50610473600480360381019061046e91906123b2565b610dfb565b005b348015610480575f80fd5b5061049b6004803603810190610496919061251c565b610e11565b005b3480156104a8575f80fd5b506104b1610e2e565b6040516104be91906125f7565b60405180910390f35b3480156104d2575f80fd5b506104ed60048036038101906104e89190612124565b610e53565b6040516104fa91906120d1565b60405180910390f35b34801561050e575f80fd5b5061052960048036038101906105249190612610565b610eb9565b604051610536919061202e565b60405180910390f35b34801561054a575f80fd5b50610565600480360381019061056091906122bd565b610f47565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061063157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610641575061064082610fcb565b5b9050919050565b60605f80546106569061267b565b80601f01602080910402602001604051908101604052809291908181526020018280546106829061267b565b80156106cd5780601f106106a4576101008083540402835291602001916106cd565b820191905f5260205f20905b8154815290600101906020018083116106b057829003601f168201915b5050505050905090565b5f6106e182611034565b506106eb826110ba565b9050919050565b61070482826106ff6110f3565b6110fa565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610778575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161076f919061218e565b60405180910390fd5b5f61078b83836107866110f3565b61110c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610801578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107f8939291906126ab565b60405180910390fd5b50505050565b61080f611317565b6001600b5f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610843611317565b600a5f8281526020019081526020015f205f9054906101000a900460ff16156108a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108989061272a565b60405180910390fd5b6108ab828261139e565b6001600a5f8381526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b6108f283838360405180602001604052805f815250610e11565b505050565b5f61090182611034565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610979575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610970919061218e565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109c6611317565b6109cf5f611491565b565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f80610a29846108f7565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a90906127b8565b60405180910390fd5b610aa4818686611554565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8683866040518463ffffffff1660e01b8152600401610b02939291906127d6565b6020604051808303815f875af1158015610b1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b42919061281f565b610b81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7890612894565b60405180910390fd5b5f3386868643604051602001610b9b959493929190612917565b6040516020818303038152906040528051906020012090505f600b5f8381526020019081526020015f205f6101000a81548160ff0219169083151502179055508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f9f9ac6bca37e427696541548195017f8d7569c1bdff1ba5b97d815bfb9c11f8c878785604051610c3c93929190612975565b60405180910390a380925050509392505050565b5f600b5f8381526020019081526020015f205f9054906101000a900460ff169050919050565b5f610c80826108f7565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce7906127b8565b60405180910390fd5b610cfb818484611554565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f9f9ac6bca37e427696541548195017f8d7569c1bdff1ba5b97d815bfb9c11f8c845f805f1b604051610d5e939291906129e3565b60405180910390a3505050565b606060018054610d7a9061267b565b80601f0160208091040260200160405190810160405280929190818152602001828054610da69061267b565b8015610df15780601f10610dc857610100808354040283529160200191610df1565b820191905f5260205f20905b815481529060010190602001808311610dd457829003601f168201915b5050505050905090565b610e0d610e066110f3565b83836116bc565b5050565b610e1c848484610708565b610e2884848484611825565b50505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060610e5e82611034565b505f610e686119d7565b90505f815111610e865760405180602001604052805f815250610eb1565b80610e90846119ed565b604051602001610ea1929190612a52565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610f4f611317565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fbf575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fb6919061218e565b60405180910390fd5b610fc881611491565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061103f83611ab7565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110b157826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016110a891906122f7565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6111078383836001611af0565b505050565b5f8061111784611ab7565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461115857611157818486611caf565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146111e3576111975f855f80611af0565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461126257600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61131f6110f3565b73ffffffffffffffffffffffffffffffffffffffff1661133d6109f6565b73ffffffffffffffffffffffffffffffffffffffff161461139c576113606110f3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611393919061218e565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361140e575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611405919061218e565b60405180910390fd5b5f61141a83835f61110c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461148c575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611483919061218e565b60405180910390fd5b505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115c4575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115bb919061218e565b60405180910390fd5b5f6115d083835f61110c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361164257816040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161163991906122f7565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116b6578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016116ad939291906126ab565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361172c57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611723919061218e565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611818919061202e565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156119d1578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026118686110f3565b8685856040518563ffffffff1660e01b815260040161188a9493929190612ac7565b6020604051808303815f875af19250505080156118c557506040513d601f19601f820116820180604052508101906118c29190612b25565b60015b611946573d805f81146118f3576040519150601f19603f3d011682016040523d82523d5f602084013e6118f8565b606091505b505f81510361193e57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611935919061218e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146119cf57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119c6919061218e565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f60016119fb84611d72565b0190505f8167ffffffffffffffff811115611a1957611a186123f8565b5b6040519080825280601f01601f191660200182016040528015611a4b5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611aac578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611aa157611aa0612b50565b5b0494505f8503611a58575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611b2857505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611c5a575f611b3784611034565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611ba157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611bb45750611bb28184610eb9565b155b15611bf657826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611bed919061218e565b60405180910390fd5b8115611c5857838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611cba838383611ec3565b611d6d575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d2e57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611d2591906122f7565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611d64929190612b7d565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611dce577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611dc457611dc3612b50565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611e0b576d04ee2d6d415b85acef81000000008381611e0157611e00612b50565b5b0492506020810190505b662386f26fc100008310611e3a57662386f26fc100008381611e3057611e2f612b50565b5b0492506010810190505b6305f5e1008310611e63576305f5e1008381611e5957611e58612b50565b5b0492506008810190505b6127108310611e88576127108381611e7e57611e7d612b50565b5b0492506004810190505b60648310611eab5760648381611ea157611ea0612b50565b5b0492506002810190505b600a8310611eba576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611f7a57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611f3b5750611f3a8484610eb9565b5b80611f7957508273ffffffffffffffffffffffffffffffffffffffff16611f61836110ba565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611fc881611f94565b8114611fd2575f80fd5b50565b5f81359050611fe381611fbf565b92915050565b5f60208284031215611ffe57611ffd611f8c565b5b5f61200b84828501611fd5565b91505092915050565b5f8115159050919050565b61202881612014565b82525050565b5f6020820190506120415f83018461201f565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561207e578082015181840152602081019050612063565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6120a382612047565b6120ad8185612051565b93506120bd818560208601612061565b6120c681612089565b840191505092915050565b5f6020820190508181035f8301526120e98184612099565b905092915050565b5f819050919050565b612103816120f1565b811461210d575f80fd5b50565b5f8135905061211e816120fa565b92915050565b5f6020828403121561213957612138611f8c565b5b5f61214684828501612110565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6121788261214f565b9050919050565b6121888161216e565b82525050565b5f6020820190506121a15f83018461217f565b92915050565b6121b08161216e565b81146121ba575f80fd5b50565b5f813590506121cb816121a7565b92915050565b5f80604083850312156121e7576121e6611f8c565b5b5f6121f4858286016121bd565b925050602061220585828601612110565b9150509250929050565b5f805f6060848603121561222657612225611f8c565b5b5f612233868287016121bd565b9350506020612244868287016121bd565b925050604061225586828701612110565b9150509250925092565b5f819050919050565b6122718161225f565b811461227b575f80fd5b50565b5f8135905061228c81612268565b92915050565b5f602082840312156122a7576122a6611f8c565b5b5f6122b48482850161227e565b91505092915050565b5f602082840312156122d2576122d1611f8c565b5b5f6122df848285016121bd565b91505092915050565b6122f1816120f1565b82525050565b5f60208201905061230a5f8301846122e8565b92915050565b5f805f6060848603121561232757612326611f8c565b5b5f612334868287016121bd565b935050602061234586828701612110565b925050604061235686828701612110565b9150509250925092565b6123698161225f565b82525050565b5f6020820190506123825f830184612360565b92915050565b61239181612014565b811461239b575f80fd5b50565b5f813590506123ac81612388565b92915050565b5f80604083850312156123c8576123c7611f8c565b5b5f6123d5858286016121bd565b92505060206123e68582860161239e565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61242e82612089565b810181811067ffffffffffffffff8211171561244d5761244c6123f8565b5b80604052505050565b5f61245f611f83565b905061246b8282612425565b919050565b5f67ffffffffffffffff82111561248a576124896123f8565b5b61249382612089565b9050602081019050919050565b828183375f83830152505050565b5f6124c06124bb84612470565b612456565b9050828152602081018484840111156124dc576124db6123f4565b5b6124e78482856124a0565b509392505050565b5f82601f830112612503576125026123f0565b5b81356125138482602086016124ae565b91505092915050565b5f805f806080858703121561253457612533611f8c565b5b5f612541878288016121bd565b9450506020612552878288016121bd565b935050604061256387828801612110565b925050606085013567ffffffffffffffff81111561258457612583611f90565b5b612590878288016124ef565b91505092959194509250565b5f819050919050565b5f6125bf6125ba6125b58461214f565b61259c565b61214f565b9050919050565b5f6125d0826125a5565b9050919050565b5f6125e1826125c6565b9050919050565b6125f1816125d7565b82525050565b5f60208201905061260a5f8301846125e8565b92915050565b5f806040838503121561262657612625611f8c565b5b5f612633858286016121bd565b9250506020612644858286016121bd565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061269257607f821691505b6020821081036126a5576126a461264e565b5b50919050565b5f6060820190506126be5f83018661217f565b6126cb60208301856122e8565b6126d8604083018461217f565b949350505050565b7f4e46542077697468207468697320494420616c726561647920657869737473005f82015250565b5f612714601f83612051565b915061271f826126e0565b602082019050919050565b5f6020820190508181035f83015261274181612708565b9050919050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686973204e465f8201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6127a2602183612051565b91506127ad82612748565b604082019050919050565b5f6020820190508181035f8301526127cf81612796565b9050919050565b5f6060820190506127e95f83018661217f565b6127f6602083018561217f565b61280360408301846122e8565b949350505050565b5f8151905061281981612388565b92915050565b5f6020828403121561283457612833611f8c565b5b5f6128418482850161280b565b91505092915050565b7f546f6b656e20416d6f756e74207472616e73666572206661696c6564000000005f82015250565b5f61287e601c83612051565b91506128898261284a565b602082019050919050565b5f6020820190508181035f8301526128ab81612872565b9050919050565b5f8160601b9050919050565b5f6128c8826128b2565b9050919050565b5f6128d9826128be565b9050919050565b6128f16128ec8261216e565b6128cf565b82525050565b5f819050919050565b61291161290c826120f1565b6128f7565b82525050565b5f61292282886128e0565b60148201915061293282876128e0565b6014820191506129428286612900565b6020820191506129528285612900565b6020820191506129628284612900565b6020820191508190509695505050505050565b5f6060820190506129885f8301866122e8565b61299560208301856122e8565b6129a26040830184612360565b949350505050565b5f819050919050565b5f6129cd6129c86129c3846129aa565b61259c565b6120f1565b9050919050565b6129dd816129b3565b82525050565b5f6060820190506129f65f8301866122e8565b612a0360208301856129d4565b612a106040830184612360565b949350505050565b5f81905092915050565b5f612a2c82612047565b612a368185612a18565b9350612a46818560208601612061565b80840191505092915050565b5f612a5d8285612a22565b9150612a698284612a22565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f612a9982612a75565b612aa38185612a7f565b9350612ab3818560208601612061565b612abc81612089565b840191505092915050565b5f608082019050612ada5f83018761217f565b612ae7602083018661217f565b612af460408301856122e8565b8181036060830152612b068184612a8f565b905095945050505050565b5f81519050612b1f81611fbf565b92915050565b5f60208284031215612b3a57612b39611f8c565b5b5f612b4784828501612b11565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050612b905f83018561217f565b612b9d60208301846122e8565b939250505056fea26469706673582212203214b1311ee203f100044891666930a905352eda97e01f39fd84b5c43873793264736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x32B3 CODESIZE SUB DUP1 PUSH3 0x32B3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x2FE JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E465450617469656E7400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E504E5400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x5BB JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x5BB JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x132 SWAP2 SWAP1 PUSH3 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14C DUP2 PUSH3 0x1D6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x6CB JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2C8 DUP3 PUSH3 0x29D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2DA DUP2 PUSH3 0x2BC JUMP JUMPDEST DUP2 EQ PUSH3 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F8 DUP2 PUSH3 0x2CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x318 JUMPI PUSH3 0x317 PUSH3 0x299 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x327 DUP7 DUP3 DUP8 ADD PUSH3 0x2E8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x33A DUP7 DUP3 DUP8 ADD PUSH3 0x2E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x34D DUP7 DUP3 DUP8 ADD PUSH3 0x2E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3D3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3E9 JUMPI PUSH3 0x3E8 PUSH3 0x38E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x44D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x410 JUMP JUMPDEST PUSH3 0x459 DUP7 DUP4 PUSH3 0x410 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x4A3 PUSH3 0x49D PUSH3 0x497 DUP5 PUSH3 0x471 JUMP JUMPDEST PUSH3 0x47A JUMP JUMPDEST PUSH3 0x471 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4BE DUP4 PUSH3 0x483 JUMP JUMPDEST PUSH3 0x4D6 PUSH3 0x4CD DUP3 PUSH3 0x4AA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x41C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x4EC PUSH3 0x4DE JUMP JUMPDEST PUSH3 0x4F9 DUP2 DUP5 DUP5 PUSH3 0x4B3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x520 JUMPI PUSH3 0x514 PUSH0 DUP3 PUSH3 0x4E2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x56F JUMPI PUSH3 0x539 DUP2 PUSH3 0x3EF JUMP JUMPDEST PUSH3 0x544 DUP5 PUSH3 0x401 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x554 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x56C PUSH3 0x563 DUP6 PUSH3 0x401 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4FE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x591 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x574 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5AB DUP4 DUP4 PUSH3 0x580 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5C6 DUP3 PUSH3 0x357 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5E2 JUMPI PUSH3 0x5E1 PUSH3 0x361 JUMP JUMPDEST JUMPDEST PUSH3 0x5EE DUP3 SLOAD PUSH3 0x3BB JUMP JUMPDEST PUSH3 0x5FB DUP3 DUP3 DUP6 PUSH3 0x524 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x631 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x61C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x628 DUP6 DUP3 PUSH3 0x59E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x697 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x641 DUP7 PUSH3 0x3EF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x66A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x643 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x68A JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x686 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x580 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x6AA DUP2 PUSH3 0x2BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6C5 PUSH0 DUP4 ADD DUP5 PUSH3 0x69F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BDA DUP1 PUSH3 0x6D9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x863B3894 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x53F JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x863B3894 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x8F3481C0 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x94407465 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x94AB67FE EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x423 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x37418972 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x37418972 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x3C168EAB EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x325 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1FE9 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x9BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x379 PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x2310 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x437 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x458 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x23B2 JUMP JUMPDEST PUSH2 0xDFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x251C JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x565 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0xF47 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x631 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x641 JUMPI POP PUSH2 0x640 DUP3 PUSH2 0xFCB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x656 SWAP1 PUSH2 0x267B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x682 SWAP1 PUSH2 0x267B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x6E1 DUP3 PUSH2 0x1034 JUMP JUMPDEST POP PUSH2 0x6EB DUP3 PUSH2 0x10BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x704 DUP3 DUP3 PUSH2 0x6FF PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x10FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x778 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x78B DUP4 DUP4 PUSH2 0x786 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x110C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x801 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x80F PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x843 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP1 PUSH2 0x272A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AB DUP3 DUP3 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x8F2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x901 DUP3 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x979 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x970 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x9CF PUSH0 PUSH2 0x1491 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA29 DUP5 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA90 SWAP1 PUSH2 0x27B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA4 DUP2 DUP7 DUP7 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP4 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x281F JUMP JUMPDEST PUSH2 0xB81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP1 PUSH2 0x2894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER DUP7 DUP7 DUP7 NUMBER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB9B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9F9AC6BCA37E427696541548195017F8D7569C1BDFF1BA5B97D815BFB9C11F8C DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC3C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC80 DUP3 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE7 SWAP1 PUSH2 0x27B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFB DUP2 DUP5 DUP5 PUSH2 0x1554 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9F9AC6BCA37E427696541548195017F8D7569C1BDFF1BA5B97D815BFB9C11F8C DUP5 PUSH0 DUP1 PUSH0 SHL PUSH1 0x40 MLOAD PUSH2 0xD5E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xD7A SWAP1 PUSH2 0x267B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDA6 SWAP1 PUSH2 0x267B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDF1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDC8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDF1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDD4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE0D PUSH2 0xE06 PUSH2 0x10F3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x16BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE1C DUP5 DUP5 DUP5 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xE28 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1825 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE5E DUP3 PUSH2 0x1034 JUMP JUMPDEST POP PUSH0 PUSH2 0xE68 PUSH2 0x19D7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xEB1 JUMP JUMPDEST DUP1 PUSH2 0xE90 DUP5 PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEA1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF4F PUSH2 0x1317 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC8 DUP2 PUSH2 0x1491 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x103F DUP4 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A8 SWAP2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1107 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1AF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1117 DUP5 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1158 JUMPI PUSH2 0x1157 DUP2 DUP5 DUP7 PUSH2 0x1CAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11E3 JUMPI PUSH2 0x1197 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1262 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x131F PUSH2 0x10F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x133D PUSH2 0x9F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x139C JUMPI PUSH2 0x1360 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1393 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1405 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x141A DUP4 DUP4 PUSH0 PUSH2 0x110C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BB SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x15D0 DUP4 DUP4 PUSH0 PUSH2 0x110C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1642 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1639 SWAP2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16B6 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x172C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1723 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1818 SWAP2 SWAP1 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x19D1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1868 PUSH2 0x10F3 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18C5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18C2 SWAP2 SWAP1 PUSH2 0x2B25 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1946 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x18F3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x193E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1935 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x19CF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C6 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x19FB DUP5 PUSH2 0x1D72 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x23F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A4B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1AAC JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1AA1 JUMPI PUSH2 0x1AA0 PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1A58 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1B28 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1C5A JUMPI PUSH0 PUSH2 0x1B37 DUP5 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BA1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BB4 JUMPI POP PUSH2 0x1BB2 DUP2 DUP5 PUSH2 0xEB9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1BF6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BED SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1C58 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CBA DUP4 DUP4 DUP4 PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x1D6D JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D2E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D25 SWAP2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D64 SWAP3 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1DCE JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1DC4 JUMPI PUSH2 0x1DC3 PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1E0B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1E01 JUMPI PUSH2 0x1E00 PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1E3A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1E30 JUMPI PUSH2 0x1E2F PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1E63 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1E59 JUMPI PUSH2 0x1E58 PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1E88 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1EAB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1EA1 JUMPI PUSH2 0x1EA0 PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1EBA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F7A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1F3B JUMPI POP PUSH2 0x1F3A DUP5 DUP5 PUSH2 0xEB9 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1F79 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F61 DUP4 PUSH2 0x10BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC8 DUP2 PUSH2 0x1F94 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FE3 DUP2 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FFE JUMPI PUSH2 0x1FFD PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x200B DUP5 DUP3 DUP6 ADD PUSH2 0x1FD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2028 DUP2 PUSH2 0x2014 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2041 PUSH0 DUP4 ADD DUP5 PUSH2 0x201F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x207E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2063 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20A3 DUP3 PUSH2 0x2047 JUMP JUMPDEST PUSH2 0x20AD DUP2 DUP6 PUSH2 0x2051 JUMP JUMPDEST SWAP4 POP PUSH2 0x20BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x20C6 DUP2 PUSH2 0x2089 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20E9 DUP2 DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2103 DUP2 PUSH2 0x20F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x210D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x211E DUP2 PUSH2 0x20FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2139 JUMPI PUSH2 0x2138 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2146 DUP5 DUP3 DUP6 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2178 DUP3 PUSH2 0x214F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2188 DUP2 PUSH2 0x216E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x217F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21B0 DUP2 PUSH2 0x216E JUMP JUMPDEST DUP2 EQ PUSH2 0x21BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21CB DUP2 PUSH2 0x21A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21E7 JUMPI PUSH2 0x21E6 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21F4 DUP6 DUP3 DUP7 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2205 DUP6 DUP3 DUP7 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2226 JUMPI PUSH2 0x2225 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2233 DUP7 DUP3 DUP8 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2244 DUP7 DUP3 DUP8 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2255 DUP7 DUP3 DUP8 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2271 DUP2 PUSH2 0x225F JUMP JUMPDEST DUP2 EQ PUSH2 0x227B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228C DUP2 PUSH2 0x2268 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A7 JUMPI PUSH2 0x22A6 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22B4 DUP5 DUP3 DUP6 ADD PUSH2 0x227E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D2 JUMPI PUSH2 0x22D1 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22DF DUP5 DUP3 DUP6 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F1 DUP2 PUSH2 0x20F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x230A PUSH0 DUP4 ADD DUP5 PUSH2 0x22E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2327 JUMPI PUSH2 0x2326 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2334 DUP7 DUP3 DUP8 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2345 DUP7 DUP3 DUP8 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2356 DUP7 DUP3 DUP8 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2369 DUP2 PUSH2 0x225F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2382 PUSH0 DUP4 ADD DUP5 PUSH2 0x2360 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2391 DUP2 PUSH2 0x2014 JUMP JUMPDEST DUP2 EQ PUSH2 0x239B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AC DUP2 PUSH2 0x2388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23C8 JUMPI PUSH2 0x23C7 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D5 DUP6 DUP3 DUP7 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23E6 DUP6 DUP3 DUP7 ADD PUSH2 0x239E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x242E DUP3 PUSH2 0x2089 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x244D JUMPI PUSH2 0x244C PUSH2 0x23F8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x245F PUSH2 0x1F83 JUMP JUMPDEST SWAP1 POP PUSH2 0x246B DUP3 DUP3 PUSH2 0x2425 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x248A JUMPI PUSH2 0x2489 PUSH2 0x23F8 JUMP JUMPDEST JUMPDEST PUSH2 0x2493 DUP3 PUSH2 0x2089 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24C0 PUSH2 0x24BB DUP5 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x24DC JUMPI PUSH2 0x24DB PUSH2 0x23F4 JUMP JUMPDEST JUMPDEST PUSH2 0x24E7 DUP5 DUP3 DUP6 PUSH2 0x24A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2503 JUMPI PUSH2 0x2502 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2513 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2534 JUMPI PUSH2 0x2533 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2541 DUP8 DUP3 DUP9 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2552 DUP8 DUP3 DUP9 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2563 DUP8 DUP3 DUP9 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2584 JUMPI PUSH2 0x2583 PUSH2 0x1F90 JUMP JUMPDEST JUMPDEST PUSH2 0x2590 DUP8 DUP3 DUP9 ADD PUSH2 0x24EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25BF PUSH2 0x25BA PUSH2 0x25B5 DUP5 PUSH2 0x214F JUMP JUMPDEST PUSH2 0x259C JUMP JUMPDEST PUSH2 0x214F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25D0 DUP3 PUSH2 0x25A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25E1 DUP3 PUSH2 0x25C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F1 DUP2 PUSH2 0x25D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x260A PUSH0 DUP4 ADD DUP5 PUSH2 0x25E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2626 JUMPI PUSH2 0x2625 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2633 DUP6 DUP3 DUP7 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2644 DUP6 DUP3 DUP7 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2692 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x26A5 JUMPI PUSH2 0x26A4 PUSH2 0x264E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26BE PUSH0 DUP4 ADD DUP7 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x26CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x26D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x217F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E46542077697468207468697320494420616C72656164792065786973747300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2714 PUSH1 0x1F DUP4 PUSH2 0x2051 JUMP JUMPDEST SWAP2 POP PUSH2 0x271F DUP3 PUSH2 0x26E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2741 DUP2 PUSH2 0x2708 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973204E46 PUSH0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27A2 PUSH1 0x21 DUP4 PUSH2 0x2051 JUMP JUMPDEST SWAP2 POP PUSH2 0x27AD DUP3 PUSH2 0x2748 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27CF DUP2 PUSH2 0x2796 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27E9 PUSH0 DUP4 ADD DUP7 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x27F6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x2803 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22E8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2819 DUP2 PUSH2 0x2388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2834 JUMPI PUSH2 0x2833 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2841 DUP5 DUP3 DUP6 ADD PUSH2 0x280B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20416D6F756E74207472616E73666572206661696C656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x287E PUSH1 0x1C DUP4 PUSH2 0x2051 JUMP JUMPDEST SWAP2 POP PUSH2 0x2889 DUP3 PUSH2 0x284A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28AB DUP2 PUSH2 0x2872 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28C8 DUP3 PUSH2 0x28B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28D9 DUP3 PUSH2 0x28BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F1 PUSH2 0x28EC DUP3 PUSH2 0x216E JUMP JUMPDEST PUSH2 0x28CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2911 PUSH2 0x290C DUP3 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0x28F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2922 DUP3 DUP9 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x2932 DUP3 DUP8 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x2942 DUP3 DUP7 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2952 DUP3 DUP6 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2962 DUP3 DUP5 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2988 PUSH0 DUP4 ADD DUP7 PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x2995 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x29A2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2360 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29CD PUSH2 0x29C8 PUSH2 0x29C3 DUP5 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x259C JUMP JUMPDEST PUSH2 0x20F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29DD DUP2 PUSH2 0x29B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29F6 PUSH0 DUP4 ADD DUP7 PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x2A03 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x29D4 JUMP JUMPDEST PUSH2 0x2A10 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2360 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A2C DUP3 PUSH2 0x2047 JUMP JUMPDEST PUSH2 0x2A36 DUP2 DUP6 PUSH2 0x2A18 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2061 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A5D DUP3 DUP6 PUSH2 0x2A22 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A69 DUP3 DUP5 PUSH2 0x2A22 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A99 DUP3 PUSH2 0x2A75 JUMP JUMPDEST PUSH2 0x2AA3 DUP2 DUP6 PUSH2 0x2A7F JUMP JUMPDEST SWAP4 POP PUSH2 0x2AB3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x2ABC DUP2 PUSH2 0x2089 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2ADA PUSH0 DUP4 ADD DUP8 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x2AE7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x2AF4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22E8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2B06 DUP2 DUP5 PUSH2 0x2A8F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B1F DUP2 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B3A JUMPI PUSH2 0x2B39 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B47 DUP5 DUP3 DUP6 ADD PUSH2 0x2B11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B90 PUSH0 DUP4 ADD DUP6 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x2B9D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN EQ 0xB1 BALANCE 0x1E 0xE2 SUB CALL STOP DIV BASEFEE SWAP2 PUSH7 0x6930A905352EDA SWAP8 0xE0 0x1F CODECOPY REVERT DUP5 0xB5 0xC4 CODESIZE PUSH20 0x793264736F6C6343000815003300000000000000 ",
							"sourceMap": "288:3286:14:-:0;;;916:221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1034:12;1381:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1076:15:14::2;1059:7;;:33;;;;;;;;;;;;;;;;;;1117:12;1103:11;;:26;;;;;;;;;;;;;;;;;;916:221:::0;;;288:3286;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:15:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:99::-;1566:6;1600:5;1594:12;1584:22;;1514:99;;;:::o;1619:180::-;1667:77;1664:1;1657:88;1764:4;1761:1;1754:15;1788:4;1785:1;1778:15;1805:180;1853:77;1850:1;1843:88;1950:4;1947:1;1940:15;1974:4;1971:1;1964:15;1991:320;2035:6;2072:1;2066:4;2062:12;2052:22;;2119:1;2113:4;2109:12;2140:18;2130:81;;2196:4;2188:6;2184:17;2174:27;;2130:81;2258:2;2250:6;2247:14;2227:18;2224:38;2221:84;;2277:18;;:::i;:::-;2221:84;2042:269;1991:320;;;:::o;2317:141::-;2366:4;2389:3;2381:11;;2412:3;2409:1;2402:14;2446:4;2443:1;2433:18;2425:26;;2317:141;;;:::o;2464:93::-;2501:6;2548:2;2543;2536:5;2532:14;2528:23;2518:33;;2464:93;;;:::o;2563:107::-;2607:8;2657:5;2651:4;2647:16;2626:37;;2563:107;;;;:::o;2676:393::-;2745:6;2795:1;2783:10;2779:18;2818:97;2848:66;2837:9;2818:97;:::i;:::-;2936:39;2966:8;2955:9;2936:39;:::i;:::-;2924:51;;3008:4;3004:9;2997:5;2993:21;2984:30;;3057:4;3047:8;3043:19;3036:5;3033:30;3023:40;;2752:317;;2676:393;;;;;:::o;3075:77::-;3112:7;3141:5;3130:16;;3075:77;;;:::o;3158:60::-;3186:3;3207:5;3200:12;;3158:60;;;:::o;3224:142::-;3274:9;3307:53;3325:34;3334:24;3352:5;3334:24;:::i;:::-;3325:34;:::i;:::-;3307:53;:::i;:::-;3294:66;;3224:142;;;:::o;3372:75::-;3415:3;3436:5;3429:12;;3372:75;;;:::o;3453:269::-;3563:39;3594:7;3563:39;:::i;:::-;3624:91;3673:41;3697:16;3673:41;:::i;:::-;3665:6;3658:4;3652:11;3624:91;:::i;:::-;3618:4;3611:105;3529:193;3453:269;;;:::o;3728:73::-;3773:3;3728:73;:::o;3807:189::-;3884:32;;:::i;:::-;3925:65;3983:6;3975;3969:4;3925:65;:::i;:::-;3860:136;3807:189;;:::o;4002:186::-;4062:120;4079:3;4072:5;4069:14;4062:120;;;4133:39;4170:1;4163:5;4133:39;:::i;:::-;4106:1;4099:5;4095:13;4086:22;;4062:120;;;4002:186;;:::o;4194:543::-;4295:2;4290:3;4287:11;4284:446;;;4329:38;4361:5;4329:38;:::i;:::-;4413:29;4431:10;4413:29;:::i;:::-;4403:8;4399:44;4596:2;4584:10;4581:18;4578:49;;;4617:8;4602:23;;4578:49;4640:80;4696:22;4714:3;4696:22;:::i;:::-;4686:8;4682:37;4669:11;4640:80;:::i;:::-;4299:431;;4284:446;4194:543;;;:::o;4743:117::-;4797:8;4847:5;4841:4;4837:16;4816:37;;4743:117;;;;:::o;4866:169::-;4910:6;4943:51;4991:1;4987:6;4979:5;4976:1;4972:13;4943:51;:::i;:::-;4939:56;5024:4;5018;5014:15;5004:25;;4917:118;4866:169;;;;:::o;5040:295::-;5116:4;5262:29;5287:3;5281:4;5262:29;:::i;:::-;5254:37;;5324:3;5321:1;5317:11;5311:4;5308:21;5300:29;;5040:295;;;;:::o;5340:1395::-;5457:37;5490:3;5457:37;:::i;:::-;5559:18;5551:6;5548:30;5545:56;;;5581:18;;:::i;:::-;5545:56;5625:38;5657:4;5651:11;5625:38;:::i;:::-;5710:67;5770:6;5762;5756:4;5710:67;:::i;:::-;5804:1;5828:4;5815:17;;5860:2;5852:6;5849:14;5877:1;5872:618;;;;6534:1;6551:6;6548:77;;;6600:9;6595:3;6591:19;6585:26;6576:35;;6548:77;6651:67;6711:6;6704:5;6651:67;:::i;:::-;6645:4;6638:81;6507:222;5842:887;;5872:618;5924:4;5920:9;5912:6;5908:22;5958:37;5990:4;5958:37;:::i;:::-;6017:1;6031:208;6045:7;6042:1;6039:14;6031:208;;;6124:9;6119:3;6115:19;6109:26;6101:6;6094:42;6175:1;6167:6;6163:14;6153:24;;6222:2;6211:9;6207:18;6194:31;;6068:4;6065:1;6061:12;6056:17;;6031:208;;;6267:6;6258:7;6255:19;6252:179;;;6325:9;6320:3;6316:19;6310:26;6368:48;6410:4;6402:6;6398:17;6387:9;6368:48;:::i;:::-;6360:6;6353:64;6275:156;6252:179;6477:1;6473;6465:6;6461:14;6457:22;6451:4;6444:36;5879:611;;;5842:887;;5432:1303;;;5340:1395;;:::o;6741:118::-;6828:24;6846:5;6828:24;:::i;:::-;6823:3;6816:37;6741:118;;:::o;6865:222::-;6958:4;6996:2;6985:9;6981:18;6973:26;;7009:71;7077:1;7066:9;7062:17;7053:6;7009:71;:::i;:::-;6865:222;;;;:::o;288:3286:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1174": {
									"entryPoint": 4346,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1240": {
									"entryPoint": 6896,
									"id": 1240,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_567": {
									"entryPoint": 6615,
									"id": 567,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_822": {
									"entryPoint": 7343,
									"id": 822,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1370": {
									"entryPoint": 6181,
									"id": 1370,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4887,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_749": {
									"entryPoint": 4282,
									"id": 749,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_785": {
									"entryPoint": 7875,
									"id": 785,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_978": {
									"entryPoint": 5022,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1546": {
									"entryPoint": 4339,
									"id": 1546,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_736": {
									"entryPoint": 6839,
									"id": 736,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1306": {
									"entryPoint": 4148,
									"id": 1306,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1277": {
									"entryPoint": 5820,
									"id": 1277,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5265,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1112": {
									"entryPoint": 5460,
									"id": 1112,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_928": {
									"entryPoint": 4364,
									"id": 928,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_583": {
									"entryPoint": 1778,
									"id": 583,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_491": {
									"entryPoint": 2312,
									"id": 491,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_600": {
									"entryPoint": 1751,
									"id": 600,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTransactionStatus_3302": {
									"entryPoint": 3152,
									"id": 3302,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@housewallet_3102": {
									"entryPoint": 2513,
									"id": 3102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_633": {
									"entryPoint": 3769,
									"id": 633,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2795": {
									"entryPoint": 7538,
									"id": 2795,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@markTransactionCompleted_3316": {
									"entryPoint": 2055,
									"id": 3316,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintNFT_3178": {
									"entryPoint": 2107,
									"id": 3178,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@myToken_3100": {
									"entryPoint": 3630,
									"id": 3100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_513": {
									"entryPoint": 1608,
									"id": 513,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_504": {
									"entryPoint": 2295,
									"id": 504,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2550,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2494,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_697": {
									"entryPoint": 2264,
									"id": 697,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_723": {
									"entryPoint": 3601,
									"id": 723,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_616": {
									"entryPoint": 3579,
									"id": 616,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1908": {
									"entryPoint": 4043,
									"id": 1908,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_463": {
									"entryPoint": 1383,
									"id": 463,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_522": {
									"entryPoint": 3435,
									"id": 522,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1698": {
									"entryPoint": 6637,
									"id": 1698,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_558": {
									"entryPoint": 3667,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_679": {
									"entryPoint": 1800,
									"id": 679,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferNFTWithToken_3290": {
									"entryPoint": 2590,
									"id": 3290,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferNFT_3217": {
									"entryPoint": 3190,
									"id": 3217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3911,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9390,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 11025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 8976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 11045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 10464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$362_to_t_address_fromStack": {
									"entryPoint": 9704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 10708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 10496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10519,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10834,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10198,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10951,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11133,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9899,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$362__to_t_address__fromStack_reversed": {
									"entryPoint": 9719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_bytes32__to_t_uint256_t_uint256_t_bytes32__fromStack_reversed": {
									"entryPoint": 10723,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_bytes32__fromStack_reversed": {
									"entryPoint": 10613,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 10666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$362_to_t_address": {
									"entryPoint": 9687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 10675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 10447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 10430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 10487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 11088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9806,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9200,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9204,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8076,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 10418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f": {
									"entryPoint": 9952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab": {
									"entryPoint": 10056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd": {
									"entryPoint": 10314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24122:15",
										"nodeType": "YulBlock",
										"src": "0:24122:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "378:105:15",
													"nodeType": "YulBlock",
													"src": "378:105:15",
													"statements": [
														{
															"nativeSrc": "388:89:15",
															"nodeType": "YulAssignment",
															"src": "388:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:15",
																		"nodeType": "YulLiteral",
																		"src": "410:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:15"
																},
																"nativeSrc": "399:78:15",
																"nodeType": "YulFunctionCall",
																"src": "399:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:15",
														"nodeType": "YulTypedName",
														"src": "360:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:15",
														"nodeType": "YulTypedName",
														"src": "370:7:15",
														"type": ""
													}
												],
												"src": "334:149:15"
											},
											{
												"body": {
													"nativeSrc": "531:78:15",
													"nodeType": "YulBlock",
													"src": "531:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:15",
																"nodeType": "YulBlock",
																"src": "587:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:15",
																					"nodeType": "YulLiteral",
																					"src": "596:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:15",
																					"nodeType": "YulLiteral",
																					"src": "599:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:15"
																			},
																			"nativeSrc": "589:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:15"
																		},
																		"nativeSrc": "589:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:15"
																				},
																				"nativeSrc": "561:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:15"
																		},
																		"nativeSrc": "551:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:15"
																},
																"nativeSrc": "544:42:15",
																"nodeType": "YulFunctionCall",
																"src": "544:42:15"
															},
															"nativeSrc": "541:62:15",
															"nodeType": "YulIf",
															"src": "541:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:15",
														"nodeType": "YulTypedName",
														"src": "524:5:15",
														"type": ""
													}
												],
												"src": "489:120:15"
											},
											{
												"body": {
													"nativeSrc": "666:86:15",
													"nodeType": "YulBlock",
													"src": "666:86:15",
													"statements": [
														{
															"nativeSrc": "676:29:15",
															"nodeType": "YulAssignment",
															"src": "676:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:15"
																},
																"nativeSrc": "685:20:15",
																"nodeType": "YulFunctionCall",
																"src": "685:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:15"
																},
																"nativeSrc": "714:32:15",
																"nodeType": "YulFunctionCall",
																"src": "714:32:15"
															},
															"nativeSrc": "714:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:15",
														"nodeType": "YulTypedName",
														"src": "644:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:15",
														"nodeType": "YulTypedName",
														"src": "652:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:15",
														"nodeType": "YulTypedName",
														"src": "660:5:15",
														"type": ""
													}
												],
												"src": "615:137:15"
											},
											{
												"body": {
													"nativeSrc": "823:262:15",
													"nodeType": "YulBlock",
													"src": "823:262:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:15",
																"nodeType": "YulBlock",
																"src": "869:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:15"
																			},
																			"nativeSrc": "871:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:15"
																		},
																		"nativeSrc": "871:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:15"
																		},
																		"nativeSrc": "840:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:15",
																		"nodeType": "YulLiteral",
																		"src": "865:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:15"
																},
																"nativeSrc": "836:32:15",
																"nodeType": "YulFunctionCall",
																"src": "836:32:15"
															},
															"nativeSrc": "833:119:15",
															"nodeType": "YulIf",
															"src": "833:119:15"
														},
														{
															"nativeSrc": "962:116:15",
															"nodeType": "YulBlock",
															"src": "962:116:15",
															"statements": [
																{
																	"nativeSrc": "977:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:15",
																		"nodeType": "YulLiteral",
																		"src": "991:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:15",
																			"nodeType": "YulTypedName",
																			"src": "981:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:15",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:15"
																				},
																				"nativeSrc": "1036:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:15"
																		},
																		"nativeSrc": "1016:52:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:15",
														"nodeType": "YulTypedName",
														"src": "793:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:15",
														"nodeType": "YulTypedName",
														"src": "804:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:15",
														"nodeType": "YulTypedName",
														"src": "816:6:15",
														"type": ""
													}
												],
												"src": "758:327:15"
											},
											{
												"body": {
													"nativeSrc": "1133:48:15",
													"nodeType": "YulBlock",
													"src": "1133:48:15",
													"statements": [
														{
															"nativeSrc": "1143:32:15",
															"nodeType": "YulAssignment",
															"src": "1143:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:15"
																		},
																		"nativeSrc": "1161:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:15"
																},
																"nativeSrc": "1154:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:15",
														"nodeType": "YulTypedName",
														"src": "1115:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:15",
														"nodeType": "YulTypedName",
														"src": "1125:7:15",
														"type": ""
													}
												],
												"src": "1091:90:15"
											},
											{
												"body": {
													"nativeSrc": "1246:50:15",
													"nodeType": "YulBlock",
													"src": "1246:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:15"
																		},
																		"nativeSrc": "1268:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:15"
																},
																"nativeSrc": "1256:34:15",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:15"
															},
															"nativeSrc": "1256:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:15",
														"nodeType": "YulTypedName",
														"src": "1234:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:15",
														"nodeType": "YulTypedName",
														"src": "1241:3:15",
														"type": ""
													}
												],
												"src": "1187:109:15"
											},
											{
												"body": {
													"nativeSrc": "1394:118:15",
													"nodeType": "YulBlock",
													"src": "1394:118:15",
													"statements": [
														{
															"nativeSrc": "1404:26:15",
															"nodeType": "YulAssignment",
															"src": "1404:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:15"
																},
																"nativeSrc": "1412:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:15"
																		},
																		"nativeSrc": "1487:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:15"
																},
																"nativeSrc": "1440:65:15",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:15"
															},
															"nativeSrc": "1440:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:15",
														"nodeType": "YulTypedName",
														"src": "1366:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:15",
														"nodeType": "YulTypedName",
														"src": "1378:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:15",
														"nodeType": "YulTypedName",
														"src": "1389:4:15",
														"type": ""
													}
												],
												"src": "1302:210:15"
											},
											{
												"body": {
													"nativeSrc": "1577:40:15",
													"nodeType": "YulBlock",
													"src": "1577:40:15",
													"statements": [
														{
															"nativeSrc": "1588:22:15",
															"nodeType": "YulAssignment",
															"src": "1588:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:15"
																},
																"nativeSrc": "1598:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:15",
														"nodeType": "YulTypedName",
														"src": "1560:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:15",
														"nodeType": "YulTypedName",
														"src": "1570:6:15",
														"type": ""
													}
												],
												"src": "1518:99:15"
											},
											{
												"body": {
													"nativeSrc": "1719:73:15",
													"nodeType": "YulBlock",
													"src": "1719:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:15"
																},
																"nativeSrc": "1729:19:15",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:15"
															},
															"nativeSrc": "1729:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:15"
														},
														{
															"nativeSrc": "1757:29:15",
															"nodeType": "YulAssignment",
															"src": "1757:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:15"
																},
																"nativeSrc": "1772:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:15",
														"nodeType": "YulTypedName",
														"src": "1691:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:15",
														"nodeType": "YulTypedName",
														"src": "1696:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:15",
														"nodeType": "YulTypedName",
														"src": "1707:11:15",
														"type": ""
													}
												],
												"src": "1623:169:15"
											},
											{
												"body": {
													"nativeSrc": "1860:184:15",
													"nodeType": "YulBlock",
													"src": "1860:184:15",
													"statements": [
														{
															"nativeSrc": "1870:10:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:15",
																"nodeType": "YulLiteral",
																"src": "1879:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:15",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:15",
																"nodeType": "YulBlock",
																"src": "1939:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:15"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:15"
																					},
																					"nativeSrc": "1960:11:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:15"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:15"
																							},
																							"nativeSrc": "1979:11:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:15"
																					},
																					"nativeSrc": "1973:18:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:15"
																			},
																			"nativeSrc": "1953:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:15"
																		},
																		"nativeSrc": "1953:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:15"
																},
																"nativeSrc": "1897:13:15",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:15"
															},
															"nativeSrc": "1889:113:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:15",
																"nodeType": "YulBlock",
																"src": "1911:19:15",
																"statements": [
																	{
																		"nativeSrc": "1913:15:15",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:15",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:15"
																			},
																			"nativeSrc": "1918:10:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:15",
																"nodeType": "YulBlock",
																"src": "1893:3:15",
																"statements": []
															},
															"src": "1889:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:15"
																		},
																		"nativeSrc": "2018:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:15"
																},
																"nativeSrc": "2011:27:15",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:15"
															},
															"nativeSrc": "2011:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:15",
														"nodeType": "YulTypedName",
														"src": "1842:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:15",
														"nodeType": "YulTypedName",
														"src": "1847:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:15",
														"nodeType": "YulTypedName",
														"src": "1852:6:15",
														"type": ""
													}
												],
												"src": "1798:246:15"
											},
											{
												"body": {
													"nativeSrc": "2098:54:15",
													"nodeType": "YulBlock",
													"src": "2098:54:15",
													"statements": [
														{
															"nativeSrc": "2108:38:15",
															"nodeType": "YulAssignment",
															"src": "2108:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:15"
																		},
																		"nativeSrc": "2122:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:15"
																		},
																		"nativeSrc": "2138:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:15"
																},
																"nativeSrc": "2118:28:15",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:15",
														"nodeType": "YulTypedName",
														"src": "2081:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:15",
														"nodeType": "YulTypedName",
														"src": "2091:6:15",
														"type": ""
													}
												],
												"src": "2050:102:15"
											},
											{
												"body": {
													"nativeSrc": "2250:285:15",
													"nodeType": "YulBlock",
													"src": "2250:285:15",
													"statements": [
														{
															"nativeSrc": "2260:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:15"
																},
																"nativeSrc": "2274:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:15",
															"nodeType": "YulAssignment",
															"src": "2322:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:15"
																},
																"nativeSrc": "2329:71:15",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:15"
																		},
																		"nativeSrc": "2444:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:15"
																},
																"nativeSrc": "2409:65:15",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:15"
															},
															"nativeSrc": "2409:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:15"
														},
														{
															"nativeSrc": "2483:46:15",
															"nodeType": "YulAssignment",
															"src": "2483:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:15"
																		},
																		"nativeSrc": "2499:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:15"
																},
																"nativeSrc": "2490:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:15",
														"nodeType": "YulTypedName",
														"src": "2231:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:15",
														"nodeType": "YulTypedName",
														"src": "2238:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:15",
														"nodeType": "YulTypedName",
														"src": "2246:3:15",
														"type": ""
													}
												],
												"src": "2158:377:15"
											},
											{
												"body": {
													"nativeSrc": "2659:195:15",
													"nodeType": "YulBlock",
													"src": "2659:195:15",
													"statements": [
														{
															"nativeSrc": "2669:26:15",
															"nodeType": "YulAssignment",
															"src": "2669:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:15"
																},
																"nativeSrc": "2677:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:15"
																		},
																		"nativeSrc": "2712:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:15"
																		},
																		"nativeSrc": "2731:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:15"
																},
																"nativeSrc": "2705:47:15",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:15"
															},
															"nativeSrc": "2705:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:15"
														},
														{
															"nativeSrc": "2761:86:15",
															"nodeType": "YulAssignment",
															"src": "2761:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:15"
																},
																"nativeSrc": "2769:78:15",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:15",
														"nodeType": "YulTypedName",
														"src": "2631:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:15",
														"nodeType": "YulTypedName",
														"src": "2643:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:15",
														"nodeType": "YulTypedName",
														"src": "2654:4:15",
														"type": ""
													}
												],
												"src": "2541:313:15"
											},
											{
												"body": {
													"nativeSrc": "2905:32:15",
													"nodeType": "YulBlock",
													"src": "2905:32:15",
													"statements": [
														{
															"nativeSrc": "2915:16:15",
															"nodeType": "YulAssignment",
															"src": "2915:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:15",
																"nodeType": "YulIdentifier",
																"src": "2926:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:15",
														"nodeType": "YulTypedName",
														"src": "2887:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:15",
														"nodeType": "YulTypedName",
														"src": "2897:7:15",
														"type": ""
													}
												],
												"src": "2860:77:15"
											},
											{
												"body": {
													"nativeSrc": "2986:79:15",
													"nodeType": "YulBlock",
													"src": "2986:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:15",
																"nodeType": "YulBlock",
																"src": "3043:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:15"
																			},
																			"nativeSrc": "3045:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:15"
																		},
																		"nativeSrc": "3045:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:15"
																				},
																				"nativeSrc": "3016:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:15"
																		},
																		"nativeSrc": "3006:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:15"
																},
																"nativeSrc": "2999:43:15",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:15"
															},
															"nativeSrc": "2996:63:15",
															"nodeType": "YulIf",
															"src": "2996:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:15",
														"nodeType": "YulTypedName",
														"src": "2979:5:15",
														"type": ""
													}
												],
												"src": "2943:122:15"
											},
											{
												"body": {
													"nativeSrc": "3123:87:15",
													"nodeType": "YulBlock",
													"src": "3123:87:15",
													"statements": [
														{
															"nativeSrc": "3133:29:15",
															"nodeType": "YulAssignment",
															"src": "3133:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:15"
																},
																"nativeSrc": "3142:20:15",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:15"
																},
																"nativeSrc": "3171:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:15"
															},
															"nativeSrc": "3171:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:15",
														"nodeType": "YulTypedName",
														"src": "3101:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:15",
														"nodeType": "YulTypedName",
														"src": "3109:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:15",
														"nodeType": "YulTypedName",
														"src": "3117:5:15",
														"type": ""
													}
												],
												"src": "3071:139:15"
											},
											{
												"body": {
													"nativeSrc": "3282:263:15",
													"nodeType": "YulBlock",
													"src": "3282:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:15",
																"nodeType": "YulBlock",
																"src": "3328:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:15"
																			},
																			"nativeSrc": "3330:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:15"
																		},
																		"nativeSrc": "3330:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:15"
																		},
																		"nativeSrc": "3299:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:15"
																},
																"nativeSrc": "3295:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:15"
															},
															"nativeSrc": "3292:119:15",
															"nodeType": "YulIf",
															"src": "3292:119:15"
														},
														{
															"nativeSrc": "3421:117:15",
															"nodeType": "YulBlock",
															"src": "3421:117:15",
															"statements": [
																{
																	"nativeSrc": "3436:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:15",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:15"
																				},
																				"nativeSrc": "3496:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:15"
																		},
																		"nativeSrc": "3475:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:15",
														"nodeType": "YulTypedName",
														"src": "3252:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:15",
														"nodeType": "YulTypedName",
														"src": "3263:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:15",
														"nodeType": "YulTypedName",
														"src": "3275:6:15",
														"type": ""
													}
												],
												"src": "3216:329:15"
											},
											{
												"body": {
													"nativeSrc": "3596:81:15",
													"nodeType": "YulBlock",
													"src": "3596:81:15",
													"statements": [
														{
															"nativeSrc": "3606:65:15",
															"nodeType": "YulAssignment",
															"src": "3606:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:15",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:15"
																},
																"nativeSrc": "3617:54:15",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:15",
														"nodeType": "YulTypedName",
														"src": "3578:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:15",
														"nodeType": "YulTypedName",
														"src": "3588:7:15",
														"type": ""
													}
												],
												"src": "3551:126:15"
											},
											{
												"body": {
													"nativeSrc": "3728:51:15",
													"nodeType": "YulBlock",
													"src": "3728:51:15",
													"statements": [
														{
															"nativeSrc": "3738:35:15",
															"nodeType": "YulAssignment",
															"src": "3738:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:15"
																},
																"nativeSrc": "3749:24:15",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:15",
														"nodeType": "YulTypedName",
														"src": "3710:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:15",
														"nodeType": "YulTypedName",
														"src": "3720:7:15",
														"type": ""
													}
												],
												"src": "3683:96:15"
											},
											{
												"body": {
													"nativeSrc": "3850:53:15",
													"nodeType": "YulBlock",
													"src": "3850:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:15"
																		},
																		"nativeSrc": "3872:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:15"
																},
																"nativeSrc": "3860:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:15"
															},
															"nativeSrc": "3860:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:15",
														"nodeType": "YulTypedName",
														"src": "3838:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:15",
														"nodeType": "YulTypedName",
														"src": "3845:3:15",
														"type": ""
													}
												],
												"src": "3785:118:15"
											},
											{
												"body": {
													"nativeSrc": "4007:124:15",
													"nodeType": "YulBlock",
													"src": "4007:124:15",
													"statements": [
														{
															"nativeSrc": "4017:26:15",
															"nodeType": "YulAssignment",
															"src": "4017:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:15"
																},
																"nativeSrc": "4025:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:15"
																		},
																		"nativeSrc": "4106:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:15"
																},
																"nativeSrc": "4053:71:15",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:15"
															},
															"nativeSrc": "4053:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:15",
														"nodeType": "YulTypedName",
														"src": "3979:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:15",
														"nodeType": "YulTypedName",
														"src": "3991:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:15",
														"nodeType": "YulTypedName",
														"src": "4002:4:15",
														"type": ""
													}
												],
												"src": "3909:222:15"
											},
											{
												"body": {
													"nativeSrc": "4180:79:15",
													"nodeType": "YulBlock",
													"src": "4180:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:15",
																"nodeType": "YulBlock",
																"src": "4237:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:15"
																			},
																			"nativeSrc": "4239:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:15"
																		},
																		"nativeSrc": "4239:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:15"
																				},
																				"nativeSrc": "4210:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:15"
																		},
																		"nativeSrc": "4200:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:15"
																},
																"nativeSrc": "4193:43:15",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:15"
															},
															"nativeSrc": "4190:63:15",
															"nodeType": "YulIf",
															"src": "4190:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:15",
														"nodeType": "YulTypedName",
														"src": "4173:5:15",
														"type": ""
													}
												],
												"src": "4137:122:15"
											},
											{
												"body": {
													"nativeSrc": "4317:87:15",
													"nodeType": "YulBlock",
													"src": "4317:87:15",
													"statements": [
														{
															"nativeSrc": "4327:29:15",
															"nodeType": "YulAssignment",
															"src": "4327:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:15"
																},
																"nativeSrc": "4336:20:15",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:15"
																},
																"nativeSrc": "4365:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:15"
															},
															"nativeSrc": "4365:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:15",
														"nodeType": "YulTypedName",
														"src": "4295:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:15",
														"nodeType": "YulTypedName",
														"src": "4303:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:15",
														"nodeType": "YulTypedName",
														"src": "4311:5:15",
														"type": ""
													}
												],
												"src": "4265:139:15"
											},
											{
												"body": {
													"nativeSrc": "4493:391:15",
													"nodeType": "YulBlock",
													"src": "4493:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:15",
																"nodeType": "YulBlock",
																"src": "4539:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:15"
																			},
																			"nativeSrc": "4541:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:15"
																		},
																		"nativeSrc": "4541:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:15"
																		},
																		"nativeSrc": "4510:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:15"
																},
																"nativeSrc": "4506:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:15"
															},
															"nativeSrc": "4503:119:15",
															"nodeType": "YulIf",
															"src": "4503:119:15"
														},
														{
															"nativeSrc": "4632:117:15",
															"nodeType": "YulBlock",
															"src": "4632:117:15",
															"statements": [
																{
																	"nativeSrc": "4647:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:15"
																				},
																				"nativeSrc": "4707:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:15"
																		},
																		"nativeSrc": "4686:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:15",
															"nodeType": "YulBlock",
															"src": "4759:118:15",
															"statements": [
																{
																	"nativeSrc": "4774:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:15"
																				},
																				"nativeSrc": "4835:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:15"
																		},
																		"nativeSrc": "4814:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:15",
														"nodeType": "YulTypedName",
														"src": "4455:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:15",
														"nodeType": "YulTypedName",
														"src": "4466:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:15",
														"nodeType": "YulTypedName",
														"src": "4478:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:15",
														"nodeType": "YulTypedName",
														"src": "4486:6:15",
														"type": ""
													}
												],
												"src": "4410:474:15"
											},
											{
												"body": {
													"nativeSrc": "4990:519:15",
													"nodeType": "YulBlock",
													"src": "4990:519:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:15",
																"nodeType": "YulBlock",
																"src": "5036:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:15"
																			},
																			"nativeSrc": "5038:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:15"
																		},
																		"nativeSrc": "5038:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:15"
																		},
																		"nativeSrc": "5007:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:15"
																},
																"nativeSrc": "5003:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:15"
															},
															"nativeSrc": "5000:119:15",
															"nodeType": "YulIf",
															"src": "5000:119:15"
														},
														{
															"nativeSrc": "5129:117:15",
															"nodeType": "YulBlock",
															"src": "5129:117:15",
															"statements": [
																{
																	"nativeSrc": "5144:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:15"
																				},
																				"nativeSrc": "5204:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:15"
																		},
																		"nativeSrc": "5183:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:15",
															"nodeType": "YulBlock",
															"src": "5256:118:15",
															"statements": [
																{
																	"nativeSrc": "5271:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:15"
																				},
																				"nativeSrc": "5332:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:15"
																		},
																		"nativeSrc": "5311:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:15",
															"nodeType": "YulBlock",
															"src": "5384:118:15",
															"statements": [
																{
																	"nativeSrc": "5399:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:15"
																				},
																				"nativeSrc": "5460:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:15"
																		},
																		"nativeSrc": "5439:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:15",
														"nodeType": "YulTypedName",
														"src": "4944:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:15",
														"nodeType": "YulTypedName",
														"src": "4955:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:15",
														"nodeType": "YulTypedName",
														"src": "4967:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:15",
														"nodeType": "YulTypedName",
														"src": "4975:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:15",
														"nodeType": "YulTypedName",
														"src": "4983:6:15",
														"type": ""
													}
												],
												"src": "4890:619:15"
											},
											{
												"body": {
													"nativeSrc": "5560:32:15",
													"nodeType": "YulBlock",
													"src": "5560:32:15",
													"statements": [
														{
															"nativeSrc": "5570:16:15",
															"nodeType": "YulAssignment",
															"src": "5570:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "5581:5:15",
																"nodeType": "YulIdentifier",
																"src": "5581:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5570:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "5570:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5515:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5542:5:15",
														"nodeType": "YulTypedName",
														"src": "5542:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5552:7:15",
														"nodeType": "YulTypedName",
														"src": "5552:7:15",
														"type": ""
													}
												],
												"src": "5515:77:15"
											},
											{
												"body": {
													"nativeSrc": "5641:79:15",
													"nodeType": "YulBlock",
													"src": "5641:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5698:16:15",
																"nodeType": "YulBlock",
																"src": "5698:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5707:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5710:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5710:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5700:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:15"
																			},
																			"nativeSrc": "5700:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5700:12:15"
																		},
																		"nativeSrc": "5700:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5664:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5664:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5689:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5689:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5671:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "5671:17:15"
																				},
																				"nativeSrc": "5671:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5661:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "5661:2:15"
																		},
																		"nativeSrc": "5661:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5661:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5654:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5654:6:15"
																},
																"nativeSrc": "5654:43:15",
																"nodeType": "YulFunctionCall",
																"src": "5654:43:15"
															},
															"nativeSrc": "5651:63:15",
															"nodeType": "YulIf",
															"src": "5651:63:15"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5598:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5634:5:15",
														"nodeType": "YulTypedName",
														"src": "5634:5:15",
														"type": ""
													}
												],
												"src": "5598:122:15"
											},
											{
												"body": {
													"nativeSrc": "5778:87:15",
													"nodeType": "YulBlock",
													"src": "5778:87:15",
													"statements": [
														{
															"nativeSrc": "5788:29:15",
															"nodeType": "YulAssignment",
															"src": "5788:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5810:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5810:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5797:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5797:12:15"
																},
																"nativeSrc": "5797:20:15",
																"nodeType": "YulFunctionCall",
																"src": "5797:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5788:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5788:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5853:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5853:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5826:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "5826:26:15"
																},
																"nativeSrc": "5826:33:15",
																"nodeType": "YulFunctionCall",
																"src": "5826:33:15"
															},
															"nativeSrc": "5826:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "5826:33:15"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5726:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5756:6:15",
														"nodeType": "YulTypedName",
														"src": "5756:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5764:3:15",
														"nodeType": "YulTypedName",
														"src": "5764:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5772:5:15",
														"nodeType": "YulTypedName",
														"src": "5772:5:15",
														"type": ""
													}
												],
												"src": "5726:139:15"
											},
											{
												"body": {
													"nativeSrc": "5937:263:15",
													"nodeType": "YulBlock",
													"src": "5937:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5983:83:15",
																"nodeType": "YulBlock",
																"src": "5983:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5985:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5985:77:15"
																			},
																			"nativeSrc": "5985:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5985:79:15"
																		},
																		"nativeSrc": "5985:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5985:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5958:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5958:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5967:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5967:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5954:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5954:3:15"
																		},
																		"nativeSrc": "5954:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5954:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5979:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5979:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5950:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:15"
																},
																"nativeSrc": "5950:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5950:32:15"
															},
															"nativeSrc": "5947:119:15",
															"nodeType": "YulIf",
															"src": "5947:119:15"
														},
														{
															"nativeSrc": "6076:117:15",
															"nodeType": "YulBlock",
															"src": "6076:117:15",
															"statements": [
																{
																	"nativeSrc": "6091:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6091:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6105:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6105:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6095:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6095:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6120:63:15",
																	"nodeType": "YulAssignment",
																	"src": "6120:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6155:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6155:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6166:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6166:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6151:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6151:3:15"
																				},
																				"nativeSrc": "6151:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6151:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6175:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6175:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6130:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "6130:20:15"
																		},
																		"nativeSrc": "6130:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6130:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6120:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6120:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5871:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5907:9:15",
														"nodeType": "YulTypedName",
														"src": "5907:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5918:7:15",
														"nodeType": "YulTypedName",
														"src": "5918:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5930:6:15",
														"nodeType": "YulTypedName",
														"src": "5930:6:15",
														"type": ""
													}
												],
												"src": "5871:329:15"
											},
											{
												"body": {
													"nativeSrc": "6272:263:15",
													"nodeType": "YulBlock",
													"src": "6272:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6318:83:15",
																"nodeType": "YulBlock",
																"src": "6318:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6320:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "6320:77:15"
																			},
																			"nativeSrc": "6320:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6320:79:15"
																		},
																		"nativeSrc": "6320:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6320:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6293:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6293:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6302:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6302:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6289:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6289:3:15"
																		},
																		"nativeSrc": "6289:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6289:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6314:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6314:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6285:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6285:3:15"
																},
																"nativeSrc": "6285:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6285:32:15"
															},
															"nativeSrc": "6282:119:15",
															"nodeType": "YulIf",
															"src": "6282:119:15"
														},
														{
															"nativeSrc": "6411:117:15",
															"nodeType": "YulBlock",
															"src": "6411:117:15",
															"statements": [
																{
																	"nativeSrc": "6426:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6426:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6440:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6440:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6430:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6430:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6455:63:15",
																	"nodeType": "YulAssignment",
																	"src": "6455:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6490:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6490:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6501:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6501:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6486:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6486:3:15"
																				},
																				"nativeSrc": "6486:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6486:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6510:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6510:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6465:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "6465:20:15"
																		},
																		"nativeSrc": "6465:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6465:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6455:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6455:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6206:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6242:9:15",
														"nodeType": "YulTypedName",
														"src": "6242:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6253:7:15",
														"nodeType": "YulTypedName",
														"src": "6253:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6265:6:15",
														"nodeType": "YulTypedName",
														"src": "6265:6:15",
														"type": ""
													}
												],
												"src": "6206:329:15"
											},
											{
												"body": {
													"nativeSrc": "6606:53:15",
													"nodeType": "YulBlock",
													"src": "6606:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6623:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6623:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6646:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6646:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6628:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "6628:17:15"
																		},
																		"nativeSrc": "6628:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6628:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6616:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6616:6:15"
																},
																"nativeSrc": "6616:37:15",
																"nodeType": "YulFunctionCall",
																"src": "6616:37:15"
															},
															"nativeSrc": "6616:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "6616:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6541:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6594:5:15",
														"nodeType": "YulTypedName",
														"src": "6594:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6601:3:15",
														"nodeType": "YulTypedName",
														"src": "6601:3:15",
														"type": ""
													}
												],
												"src": "6541:118:15"
											},
											{
												"body": {
													"nativeSrc": "6763:124:15",
													"nodeType": "YulBlock",
													"src": "6763:124:15",
													"statements": [
														{
															"nativeSrc": "6773:26:15",
															"nodeType": "YulAssignment",
															"src": "6773:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6785:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6785:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6796:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6796:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6781:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6781:3:15"
																},
																"nativeSrc": "6781:18:15",
																"nodeType": "YulFunctionCall",
																"src": "6781:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6773:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6773:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6853:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6853:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6866:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6866:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6877:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6877:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6862:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6862:3:15"
																		},
																		"nativeSrc": "6862:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6862:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6809:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "6809:43:15"
																},
																"nativeSrc": "6809:71:15",
																"nodeType": "YulFunctionCall",
																"src": "6809:71:15"
															},
															"nativeSrc": "6809:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "6809:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6665:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6735:9:15",
														"nodeType": "YulTypedName",
														"src": "6735:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6747:6:15",
														"nodeType": "YulTypedName",
														"src": "6747:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6758:4:15",
														"nodeType": "YulTypedName",
														"src": "6758:4:15",
														"type": ""
													}
												],
												"src": "6665:222:15"
											},
											{
												"body": {
													"nativeSrc": "6993:519:15",
													"nodeType": "YulBlock",
													"src": "6993:519:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7039:83:15",
																"nodeType": "YulBlock",
																"src": "7039:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7041:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "7041:77:15"
																			},
																			"nativeSrc": "7041:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7041:79:15"
																		},
																		"nativeSrc": "7041:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7041:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7014:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7014:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7023:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7023:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7010:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7010:3:15"
																		},
																		"nativeSrc": "7010:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7010:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7035:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7035:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7006:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7006:3:15"
																},
																"nativeSrc": "7006:32:15",
																"nodeType": "YulFunctionCall",
																"src": "7006:32:15"
															},
															"nativeSrc": "7003:119:15",
															"nodeType": "YulIf",
															"src": "7003:119:15"
														},
														{
															"nativeSrc": "7132:117:15",
															"nodeType": "YulBlock",
															"src": "7132:117:15",
															"statements": [
																{
																	"nativeSrc": "7147:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7147:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7161:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7161:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7151:6:15",
																			"nodeType": "YulTypedName",
																			"src": "7151:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7176:63:15",
																	"nodeType": "YulAssignment",
																	"src": "7176:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7211:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "7211:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7222:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "7222:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7207:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7207:3:15"
																				},
																				"nativeSrc": "7207:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7207:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7231:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7231:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7186:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "7186:20:15"
																		},
																		"nativeSrc": "7186:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7186:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7176:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "7176:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7259:118:15",
															"nodeType": "YulBlock",
															"src": "7259:118:15",
															"statements": [
																{
																	"nativeSrc": "7274:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7274:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7288:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7288:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7278:6:15",
																			"nodeType": "YulTypedName",
																			"src": "7278:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7304:63:15",
																	"nodeType": "YulAssignment",
																	"src": "7304:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7339:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "7339:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7350:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "7350:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7335:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7335:3:15"
																				},
																				"nativeSrc": "7335:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7335:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7359:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7359:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7314:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "7314:20:15"
																		},
																		"nativeSrc": "7314:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7314:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7304:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "7304:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7387:118:15",
															"nodeType": "YulBlock",
															"src": "7387:118:15",
															"statements": [
																{
																	"nativeSrc": "7402:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7402:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7416:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7416:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7406:6:15",
																			"nodeType": "YulTypedName",
																			"src": "7406:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7432:63:15",
																	"nodeType": "YulAssignment",
																	"src": "7432:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7467:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "7467:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7478:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "7478:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7463:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7463:3:15"
																				},
																				"nativeSrc": "7463:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7463:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7487:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7487:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7442:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "7442:20:15"
																		},
																		"nativeSrc": "7442:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7442:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7432:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "7432:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "6893:619:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6947:9:15",
														"nodeType": "YulTypedName",
														"src": "6947:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6958:7:15",
														"nodeType": "YulTypedName",
														"src": "6958:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6970:6:15",
														"nodeType": "YulTypedName",
														"src": "6970:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6978:6:15",
														"nodeType": "YulTypedName",
														"src": "6978:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6986:6:15",
														"nodeType": "YulTypedName",
														"src": "6986:6:15",
														"type": ""
													}
												],
												"src": "6893:619:15"
											},
											{
												"body": {
													"nativeSrc": "7583:53:15",
													"nodeType": "YulBlock",
													"src": "7583:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7600:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7600:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7623:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "7623:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "7605:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "7605:17:15"
																		},
																		"nativeSrc": "7605:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7605:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7593:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7593:6:15"
																},
																"nativeSrc": "7593:37:15",
																"nodeType": "YulFunctionCall",
																"src": "7593:37:15"
															},
															"nativeSrc": "7593:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "7593:37:15"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "7518:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7571:5:15",
														"nodeType": "YulTypedName",
														"src": "7571:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7578:3:15",
														"nodeType": "YulTypedName",
														"src": "7578:3:15",
														"type": ""
													}
												],
												"src": "7518:118:15"
											},
											{
												"body": {
													"nativeSrc": "7740:124:15",
													"nodeType": "YulBlock",
													"src": "7740:124:15",
													"statements": [
														{
															"nativeSrc": "7750:26:15",
															"nodeType": "YulAssignment",
															"src": "7750:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7762:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7762:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7773:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7773:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7758:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7758:3:15"
																},
																"nativeSrc": "7758:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7758:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7750:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7750:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7830:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7830:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7843:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7843:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7854:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7854:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7839:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7839:3:15"
																		},
																		"nativeSrc": "7839:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7839:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "7786:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "7786:43:15"
																},
																"nativeSrc": "7786:71:15",
																"nodeType": "YulFunctionCall",
																"src": "7786:71:15"
															},
															"nativeSrc": "7786:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "7786:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "7642:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7712:9:15",
														"nodeType": "YulTypedName",
														"src": "7712:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7724:6:15",
														"nodeType": "YulTypedName",
														"src": "7724:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7735:4:15",
														"nodeType": "YulTypedName",
														"src": "7735:4:15",
														"type": ""
													}
												],
												"src": "7642:222:15"
											},
											{
												"body": {
													"nativeSrc": "7910:76:15",
													"nodeType": "YulBlock",
													"src": "7910:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7964:16:15",
																"nodeType": "YulBlock",
																"src": "7964:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7973:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7973:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7976:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7976:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7966:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7966:6:15"
																			},
																			"nativeSrc": "7966:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7966:12:15"
																		},
																		"nativeSrc": "7966:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7966:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7933:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "7933:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7955:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7955:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7940:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "7940:14:15"
																				},
																				"nativeSrc": "7940:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7940:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7930:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7930:2:15"
																		},
																		"nativeSrc": "7930:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7930:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7923:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7923:6:15"
																},
																"nativeSrc": "7923:40:15",
																"nodeType": "YulFunctionCall",
																"src": "7923:40:15"
															},
															"nativeSrc": "7920:60:15",
															"nodeType": "YulIf",
															"src": "7920:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7870:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7903:5:15",
														"nodeType": "YulTypedName",
														"src": "7903:5:15",
														"type": ""
													}
												],
												"src": "7870:116:15"
											},
											{
												"body": {
													"nativeSrc": "8041:84:15",
													"nodeType": "YulBlock",
													"src": "8041:84:15",
													"statements": [
														{
															"nativeSrc": "8051:29:15",
															"nodeType": "YulAssignment",
															"src": "8051:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8073:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8073:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8060:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8060:12:15"
																},
																"nativeSrc": "8060:20:15",
																"nodeType": "YulFunctionCall",
																"src": "8060:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8051:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8051:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8113:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8113:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8089:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "8089:23:15"
																},
																"nativeSrc": "8089:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8089:30:15"
															},
															"nativeSrc": "8089:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8089:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "7992:133:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8019:6:15",
														"nodeType": "YulTypedName",
														"src": "8019:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8027:3:15",
														"nodeType": "YulTypedName",
														"src": "8027:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8035:5:15",
														"nodeType": "YulTypedName",
														"src": "8035:5:15",
														"type": ""
													}
												],
												"src": "7992:133:15"
											},
											{
												"body": {
													"nativeSrc": "8211:388:15",
													"nodeType": "YulBlock",
													"src": "8211:388:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8257:83:15",
																"nodeType": "YulBlock",
																"src": "8257:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8259:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8259:77:15"
																			},
																			"nativeSrc": "8259:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8259:79:15"
																		},
																		"nativeSrc": "8259:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8259:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8232:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8232:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8241:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8241:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8228:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8228:3:15"
																		},
																		"nativeSrc": "8228:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8228:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8253:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8253:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8224:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8224:3:15"
																},
																"nativeSrc": "8224:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8224:32:15"
															},
															"nativeSrc": "8221:119:15",
															"nodeType": "YulIf",
															"src": "8221:119:15"
														},
														{
															"nativeSrc": "8350:117:15",
															"nodeType": "YulBlock",
															"src": "8350:117:15",
															"statements": [
																{
																	"nativeSrc": "8365:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8365:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8379:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8379:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8369:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8369:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8394:63:15",
																	"nodeType": "YulAssignment",
																	"src": "8394:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8429:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8429:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8440:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8440:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8425:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8425:3:15"
																				},
																				"nativeSrc": "8425:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8425:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8449:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8449:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8404:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "8404:20:15"
																		},
																		"nativeSrc": "8404:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8404:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8394:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8394:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8477:115:15",
															"nodeType": "YulBlock",
															"src": "8477:115:15",
															"statements": [
																{
																	"nativeSrc": "8492:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8492:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8506:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8506:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8496:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8496:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8522:60:15",
																	"nodeType": "YulAssignment",
																	"src": "8522:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8554:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8554:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8565:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8565:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8550:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8550:3:15"
																				},
																				"nativeSrc": "8550:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8550:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8574:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8574:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8532:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "8532:17:15"
																		},
																		"nativeSrc": "8532:50:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8532:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8522:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8522:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "8131:468:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8173:9:15",
														"nodeType": "YulTypedName",
														"src": "8173:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8184:7:15",
														"nodeType": "YulTypedName",
														"src": "8184:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8196:6:15",
														"nodeType": "YulTypedName",
														"src": "8196:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8204:6:15",
														"nodeType": "YulTypedName",
														"src": "8204:6:15",
														"type": ""
													}
												],
												"src": "8131:468:15"
											},
											{
												"body": {
													"nativeSrc": "8694:28:15",
													"nodeType": "YulBlock",
													"src": "8694:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8711:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8711:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8714:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8714:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8704:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8704:6:15"
																},
																"nativeSrc": "8704:12:15",
																"nodeType": "YulFunctionCall",
																"src": "8704:12:15"
															},
															"nativeSrc": "8704:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "8704:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "8605:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "8605:117:15"
											},
											{
												"body": {
													"nativeSrc": "8817:28:15",
													"nodeType": "YulBlock",
													"src": "8817:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8834:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8834:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8837:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8837:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8827:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8827:6:15"
																},
																"nativeSrc": "8827:12:15",
																"nodeType": "YulFunctionCall",
																"src": "8827:12:15"
															},
															"nativeSrc": "8827:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "8827:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "8728:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "8728:117:15"
											},
											{
												"body": {
													"nativeSrc": "8879:152:15",
													"nodeType": "YulBlock",
													"src": "8879:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8896:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8896:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8899:77:15",
																		"nodeType": "YulLiteral",
																		"src": "8899:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8889:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8889:6:15"
																},
																"nativeSrc": "8889:88:15",
																"nodeType": "YulFunctionCall",
																"src": "8889:88:15"
															},
															"nativeSrc": "8889:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "8889:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8993:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8993:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8996:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8996:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8986:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8986:6:15"
																},
																"nativeSrc": "8986:15:15",
																"nodeType": "YulFunctionCall",
																"src": "8986:15:15"
															},
															"nativeSrc": "8986:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "8986:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9017:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9017:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9020:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9020:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9010:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9010:6:15"
																},
																"nativeSrc": "9010:15:15",
																"nodeType": "YulFunctionCall",
																"src": "9010:15:15"
															},
															"nativeSrc": "9010:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "9010:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "8851:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "8851:180:15"
											},
											{
												"body": {
													"nativeSrc": "9080:238:15",
													"nodeType": "YulBlock",
													"src": "9080:238:15",
													"statements": [
														{
															"nativeSrc": "9090:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9090:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "9112:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9112:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "9142:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "9142:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9120:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "9120:21:15"
																		},
																		"nativeSrc": "9120:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9120:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9108:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9108:3:15"
																},
																"nativeSrc": "9108:40:15",
																"nodeType": "YulFunctionCall",
																"src": "9108:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "9094:10:15",
																	"nodeType": "YulTypedName",
																	"src": "9094:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9259:22:15",
																"nodeType": "YulBlock",
																"src": "9259:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9261:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "9261:16:15"
																			},
																			"nativeSrc": "9261:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9261:18:15"
																		},
																		"nativeSrc": "9261:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9261:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9202:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "9202:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9214:18:15",
																				"nodeType": "YulLiteral",
																				"src": "9214:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9199:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9199:2:15"
																		},
																		"nativeSrc": "9199:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9199:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9238:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "9238:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "9250:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9250:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9235:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9235:2:15"
																		},
																		"nativeSrc": "9235:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9235:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9196:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9196:2:15"
																},
																"nativeSrc": "9196:62:15",
																"nodeType": "YulFunctionCall",
																"src": "9196:62:15"
															},
															"nativeSrc": "9193:88:15",
															"nodeType": "YulIf",
															"src": "9193:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9297:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9297:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "9301:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "9301:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9290:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9290:6:15"
																},
																"nativeSrc": "9290:22:15",
																"nodeType": "YulFunctionCall",
																"src": "9290:22:15"
															},
															"nativeSrc": "9290:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "9290:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "9037:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9066:6:15",
														"nodeType": "YulTypedName",
														"src": "9066:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "9074:4:15",
														"nodeType": "YulTypedName",
														"src": "9074:4:15",
														"type": ""
													}
												],
												"src": "9037:281:15"
											},
											{
												"body": {
													"nativeSrc": "9365:88:15",
													"nodeType": "YulBlock",
													"src": "9365:88:15",
													"statements": [
														{
															"nativeSrc": "9375:30:15",
															"nodeType": "YulAssignment",
															"src": "9375:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "9385:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "9385:18:15"
																},
																"nativeSrc": "9385:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9385:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "9375:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9375:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "9434:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9434:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "9442:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9442:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "9414:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "9414:19:15"
																},
																"nativeSrc": "9414:33:15",
																"nodeType": "YulFunctionCall",
																"src": "9414:33:15"
															},
															"nativeSrc": "9414:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "9414:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "9324:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "9349:4:15",
														"nodeType": "YulTypedName",
														"src": "9349:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "9358:6:15",
														"nodeType": "YulTypedName",
														"src": "9358:6:15",
														"type": ""
													}
												],
												"src": "9324:129:15"
											},
											{
												"body": {
													"nativeSrc": "9525:241:15",
													"nodeType": "YulBlock",
													"src": "9525:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9630:22:15",
																"nodeType": "YulBlock",
																"src": "9630:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9632:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "9632:16:15"
																			},
																			"nativeSrc": "9632:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9632:18:15"
																		},
																		"nativeSrc": "9632:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9632:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9602:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9602:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9610:18:15",
																		"nodeType": "YulLiteral",
																		"src": "9610:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9599:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9599:2:15"
																},
																"nativeSrc": "9599:30:15",
																"nodeType": "YulFunctionCall",
																"src": "9599:30:15"
															},
															"nativeSrc": "9596:56:15",
															"nodeType": "YulIf",
															"src": "9596:56:15"
														},
														{
															"nativeSrc": "9662:37:15",
															"nodeType": "YulAssignment",
															"src": "9662:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9692:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9692:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9670:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "9670:21:15"
																},
																"nativeSrc": "9670:29:15",
																"nodeType": "YulFunctionCall",
																"src": "9670:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9662:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9662:4:15"
																}
															]
														},
														{
															"nativeSrc": "9736:23:15",
															"nodeType": "YulAssignment",
															"src": "9736:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9748:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9748:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9754:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9754:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9744:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9744:3:15"
																},
																"nativeSrc": "9744:15:15",
																"nodeType": "YulFunctionCall",
																"src": "9744:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9736:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9736:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "9459:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9509:6:15",
														"nodeType": "YulTypedName",
														"src": "9509:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9520:4:15",
														"nodeType": "YulTypedName",
														"src": "9520:4:15",
														"type": ""
													}
												],
												"src": "9459:307:15"
											},
											{
												"body": {
													"nativeSrc": "9836:82:15",
													"nodeType": "YulBlock",
													"src": "9836:82:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9859:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9859:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9864:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9864:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9869:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9869:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "9846:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "9846:12:15"
																},
																"nativeSrc": "9846:30:15",
																"nodeType": "YulFunctionCall",
																"src": "9846:30:15"
															},
															"nativeSrc": "9846:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "9846:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9896:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "9896:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9901:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9901:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9892:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9892:3:15"
																		},
																		"nativeSrc": "9892:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9892:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9910:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9910:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9885:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9885:6:15"
																},
																"nativeSrc": "9885:27:15",
																"nodeType": "YulFunctionCall",
																"src": "9885:27:15"
															},
															"nativeSrc": "9885:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "9885:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "9772:146:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9818:3:15",
														"nodeType": "YulTypedName",
														"src": "9818:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9823:3:15",
														"nodeType": "YulTypedName",
														"src": "9823:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9828:6:15",
														"nodeType": "YulTypedName",
														"src": "9828:6:15",
														"type": ""
													}
												],
												"src": "9772:146:15"
											},
											{
												"body": {
													"nativeSrc": "10007:340:15",
													"nodeType": "YulBlock",
													"src": "10007:340:15",
													"statements": [
														{
															"nativeSrc": "10017:74:15",
															"nodeType": "YulAssignment",
															"src": "10017:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10083:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10083:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10042:40:15",
																			"nodeType": "YulIdentifier",
																			"src": "10042:40:15"
																		},
																		"nativeSrc": "10042:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10042:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10026:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "10026:15:15"
																},
																"nativeSrc": "10026:65:15",
																"nodeType": "YulFunctionCall",
																"src": "10026:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10017:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10017:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10107:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10107:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10114:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10114:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10100:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10100:6:15"
																},
																"nativeSrc": "10100:21:15",
																"nodeType": "YulFunctionCall",
																"src": "10100:21:15"
															},
															"nativeSrc": "10100:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "10100:21:15"
														},
														{
															"nativeSrc": "10130:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10130:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10145:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10145:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10152:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10152:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10141:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10141:3:15"
																},
																"nativeSrc": "10141:16:15",
																"nodeType": "YulFunctionCall",
																"src": "10141:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10134:3:15",
																	"nodeType": "YulTypedName",
																	"src": "10134:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10195:83:15",
																"nodeType": "YulBlock",
																"src": "10195:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10197:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10197:77:15"
																			},
																			"nativeSrc": "10197:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10197:79:15"
																		},
																		"nativeSrc": "10197:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10197:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10176:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "10176:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10181:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10181:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10172:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10172:3:15"
																		},
																		"nativeSrc": "10172:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10172:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10190:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10190:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10169:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10169:2:15"
																},
																"nativeSrc": "10169:25:15",
																"nodeType": "YulFunctionCall",
																"src": "10169:25:15"
															},
															"nativeSrc": "10166:112:15",
															"nodeType": "YulIf",
															"src": "10166:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10324:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10324:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10329:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10329:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10334:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10334:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10287:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "10287:36:15"
																},
																"nativeSrc": "10287:54:15",
																"nodeType": "YulFunctionCall",
																"src": "10287:54:15"
															},
															"nativeSrc": "10287:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "10287:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9924:423:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9980:3:15",
														"nodeType": "YulTypedName",
														"src": "9980:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9985:6:15",
														"nodeType": "YulTypedName",
														"src": "9985:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9993:3:15",
														"nodeType": "YulTypedName",
														"src": "9993:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10001:5:15",
														"nodeType": "YulTypedName",
														"src": "10001:5:15",
														"type": ""
													}
												],
												"src": "9924:423:15"
											},
											{
												"body": {
													"nativeSrc": "10427:277:15",
													"nodeType": "YulBlock",
													"src": "10427:277:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10476:83:15",
																"nodeType": "YulBlock",
																"src": "10476:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10478:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10478:77:15"
																			},
																			"nativeSrc": "10478:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10478:79:15"
																		},
																		"nativeSrc": "10478:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10478:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10455:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10455:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10463:4:15",
																						"nodeType": "YulLiteral",
																						"src": "10463:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10451:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10451:3:15"
																				},
																				"nativeSrc": "10451:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10451:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10470:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "10470:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10447:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10447:3:15"
																		},
																		"nativeSrc": "10447:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10447:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10440:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10440:6:15"
																},
																"nativeSrc": "10440:35:15",
																"nodeType": "YulFunctionCall",
																"src": "10440:35:15"
															},
															"nativeSrc": "10437:122:15",
															"nodeType": "YulIf",
															"src": "10437:122:15"
														},
														{
															"nativeSrc": "10568:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10568:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10595:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10595:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10582:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "10582:12:15"
																},
																"nativeSrc": "10582:20:15",
																"nodeType": "YulFunctionCall",
																"src": "10582:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10572:6:15",
																	"nodeType": "YulTypedName",
																	"src": "10572:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10611:87:15",
															"nodeType": "YulAssignment",
															"src": "10611:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10671:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10671:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10679:4:15",
																				"nodeType": "YulLiteral",
																				"src": "10679:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10667:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10667:3:15"
																		},
																		"nativeSrc": "10667:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10667:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10686:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10686:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10694:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10694:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10620:46:15",
																	"nodeType": "YulIdentifier",
																	"src": "10620:46:15"
																},
																"nativeSrc": "10620:78:15",
																"nodeType": "YulFunctionCall",
																"src": "10620:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10611:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10611:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10366:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10405:6:15",
														"nodeType": "YulTypedName",
														"src": "10405:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10413:3:15",
														"nodeType": "YulTypedName",
														"src": "10413:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10421:5:15",
														"nodeType": "YulTypedName",
														"src": "10421:5:15",
														"type": ""
													}
												],
												"src": "10366:338:15"
											},
											{
												"body": {
													"nativeSrc": "10836:817:15",
													"nodeType": "YulBlock",
													"src": "10836:817:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10883:83:15",
																"nodeType": "YulBlock",
																"src": "10883:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10885:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10885:77:15"
																			},
																			"nativeSrc": "10885:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10885:79:15"
																		},
																		"nativeSrc": "10885:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10885:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10857:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10857:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10866:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10866:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10853:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10853:3:15"
																		},
																		"nativeSrc": "10853:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10853:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10878:3:15",
																		"nodeType": "YulLiteral",
																		"src": "10878:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10849:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10849:3:15"
																},
																"nativeSrc": "10849:33:15",
																"nodeType": "YulFunctionCall",
																"src": "10849:33:15"
															},
															"nativeSrc": "10846:120:15",
															"nodeType": "YulIf",
															"src": "10846:120:15"
														},
														{
															"nativeSrc": "10976:117:15",
															"nodeType": "YulBlock",
															"src": "10976:117:15",
															"statements": [
																{
																	"nativeSrc": "10991:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10991:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11005:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11005:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10995:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10995:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11020:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11020:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11055:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11055:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11066:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11066:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11051:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11051:3:15"
																				},
																				"nativeSrc": "11051:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11051:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11075:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11075:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11030:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11030:20:15"
																		},
																		"nativeSrc": "11030:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11030:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11020:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11020:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11103:118:15",
															"nodeType": "YulBlock",
															"src": "11103:118:15",
															"statements": [
																{
																	"nativeSrc": "11118:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11118:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11132:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11132:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11122:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11122:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11148:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11148:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11183:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11183:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11194:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11194:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11179:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11179:3:15"
																				},
																				"nativeSrc": "11179:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11179:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11203:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11203:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11158:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11158:20:15"
																		},
																		"nativeSrc": "11158:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11158:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11148:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11148:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11231:118:15",
															"nodeType": "YulBlock",
															"src": "11231:118:15",
															"statements": [
																{
																	"nativeSrc": "11246:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11246:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11260:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11260:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11250:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11250:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11276:63:15",
																	"nodeType": "YulAssignment",
																	"src": "11276:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11311:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11311:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11322:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11322:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11307:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11307:3:15"
																				},
																				"nativeSrc": "11307:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11307:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11331:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11331:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11286:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "11286:20:15"
																		},
																		"nativeSrc": "11286:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11286:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11276:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11276:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11359:287:15",
															"nodeType": "YulBlock",
															"src": "11359:287:15",
															"statements": [
																{
																	"nativeSrc": "11374:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11374:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11405:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11405:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11416:2:15",
																						"nodeType": "YulLiteral",
																						"src": "11416:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11401:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11401:3:15"
																				},
																				"nativeSrc": "11401:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11401:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11388:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "11388:12:15"
																		},
																		"nativeSrc": "11388:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11388:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11378:6:15",
																			"nodeType": "YulTypedName",
																			"src": "11378:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11467:83:15",
																		"nodeType": "YulBlock",
																		"src": "11467:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11469:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "11469:77:15"
																					},
																					"nativeSrc": "11469:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "11469:79:15"
																				},
																				"nativeSrc": "11469:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "11469:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11439:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11439:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11447:18:15",
																				"nodeType": "YulLiteral",
																				"src": "11447:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11436:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11436:2:15"
																		},
																		"nativeSrc": "11436:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11436:30:15"
																	},
																	"nativeSrc": "11433:117:15",
																	"nodeType": "YulIf",
																	"src": "11433:117:15"
																},
																{
																	"nativeSrc": "11564:72:15",
																	"nodeType": "YulAssignment",
																	"src": "11564:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11608:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "11608:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11619:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11619:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11604:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11604:3:15"
																				},
																				"nativeSrc": "11604:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11604:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11628:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11628:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11574:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "11574:29:15"
																		},
																		"nativeSrc": "11574:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11574:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11564:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11564:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "10710:943:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10782:9:15",
														"nodeType": "YulTypedName",
														"src": "10782:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10793:7:15",
														"nodeType": "YulTypedName",
														"src": "10793:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10805:6:15",
														"nodeType": "YulTypedName",
														"src": "10805:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10813:6:15",
														"nodeType": "YulTypedName",
														"src": "10813:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10821:6:15",
														"nodeType": "YulTypedName",
														"src": "10821:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10829:6:15",
														"nodeType": "YulTypedName",
														"src": "10829:6:15",
														"type": ""
													}
												],
												"src": "10710:943:15"
											},
											{
												"body": {
													"nativeSrc": "11691:28:15",
													"nodeType": "YulBlock",
													"src": "11691:28:15",
													"statements": [
														{
															"nativeSrc": "11701:12:15",
															"nodeType": "YulAssignment",
															"src": "11701:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "11708:5:15",
																"nodeType": "YulIdentifier",
																"src": "11708:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11701:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11701:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "11659:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11677:5:15",
														"nodeType": "YulTypedName",
														"src": "11677:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11687:3:15",
														"nodeType": "YulTypedName",
														"src": "11687:3:15",
														"type": ""
													}
												],
												"src": "11659:60:15"
											},
											{
												"body": {
													"nativeSrc": "11785:82:15",
													"nodeType": "YulBlock",
													"src": "11785:82:15",
													"statements": [
														{
															"nativeSrc": "11795:66:15",
															"nodeType": "YulAssignment",
															"src": "11795:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11853:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "11853:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "11835:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "11835:17:15"
																				},
																				"nativeSrc": "11835:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11835:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11826:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "11826:8:15"
																		},
																		"nativeSrc": "11826:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11826:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "11808:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11808:17:15"
																},
																"nativeSrc": "11808:53:15",
																"nodeType": "YulFunctionCall",
																"src": "11808:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11795:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "11795:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "11725:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11765:5:15",
														"nodeType": "YulTypedName",
														"src": "11765:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11775:9:15",
														"nodeType": "YulTypedName",
														"src": "11775:9:15",
														"type": ""
													}
												],
												"src": "11725:142:15"
											},
											{
												"body": {
													"nativeSrc": "11933:66:15",
													"nodeType": "YulBlock",
													"src": "11933:66:15",
													"statements": [
														{
															"nativeSrc": "11943:50:15",
															"nodeType": "YulAssignment",
															"src": "11943:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11987:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11987:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "11956:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "11956:30:15"
																},
																"nativeSrc": "11956:37:15",
																"nodeType": "YulFunctionCall",
																"src": "11956:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11943:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "11943:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "11873:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11913:5:15",
														"nodeType": "YulTypedName",
														"src": "11913:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11923:9:15",
														"nodeType": "YulTypedName",
														"src": "11923:9:15",
														"type": ""
													}
												],
												"src": "11873:126:15"
											},
											{
												"body": {
													"nativeSrc": "12079:66:15",
													"nodeType": "YulBlock",
													"src": "12079:66:15",
													"statements": [
														{
															"nativeSrc": "12089:50:15",
															"nodeType": "YulAssignment",
															"src": "12089:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12133:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12133:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "12102:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "12102:30:15"
																},
																"nativeSrc": "12102:37:15",
																"nodeType": "YulFunctionCall",
																"src": "12102:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12089:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "12089:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$362_to_t_address",
												"nativeSrc": "12005:140:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12059:5:15",
														"nodeType": "YulTypedName",
														"src": "12059:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12069:9:15",
														"nodeType": "YulTypedName",
														"src": "12069:9:15",
														"type": ""
													}
												],
												"src": "12005:140:15"
											},
											{
												"body": {
													"nativeSrc": "12230:80:15",
													"nodeType": "YulBlock",
													"src": "12230:80:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12247:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12247:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12297:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "12297:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$362_to_t_address",
																			"nativeSrc": "12252:44:15",
																			"nodeType": "YulIdentifier",
																			"src": "12252:44:15"
																		},
																		"nativeSrc": "12252:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12252:51:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12240:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12240:6:15"
																},
																"nativeSrc": "12240:64:15",
																"nodeType": "YulFunctionCall",
																"src": "12240:64:15"
															},
															"nativeSrc": "12240:64:15",
															"nodeType": "YulExpressionStatement",
															"src": "12240:64:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$362_to_t_address_fromStack",
												"nativeSrc": "12151:159:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12218:5:15",
														"nodeType": "YulTypedName",
														"src": "12218:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12225:3:15",
														"nodeType": "YulTypedName",
														"src": "12225:3:15",
														"type": ""
													}
												],
												"src": "12151:159:15"
											},
											{
												"body": {
													"nativeSrc": "12428:138:15",
													"nodeType": "YulBlock",
													"src": "12428:138:15",
													"statements": [
														{
															"nativeSrc": "12438:26:15",
															"nodeType": "YulAssignment",
															"src": "12438:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12450:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12450:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12461:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12461:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12446:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12446:3:15"
																},
																"nativeSrc": "12446:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12446:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12438:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12438:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12532:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12532:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12545:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12545:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12556:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12556:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12541:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12541:3:15"
																		},
																		"nativeSrc": "12541:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12541:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$362_to_t_address_fromStack",
																	"nativeSrc": "12474:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "12474:57:15"
																},
																"nativeSrc": "12474:85:15",
																"nodeType": "YulFunctionCall",
																"src": "12474:85:15"
															},
															"nativeSrc": "12474:85:15",
															"nodeType": "YulExpressionStatement",
															"src": "12474:85:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$362__to_t_address__fromStack_reversed",
												"nativeSrc": "12316:250:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12400:9:15",
														"nodeType": "YulTypedName",
														"src": "12400:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12412:6:15",
														"nodeType": "YulTypedName",
														"src": "12412:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12423:4:15",
														"nodeType": "YulTypedName",
														"src": "12423:4:15",
														"type": ""
													}
												],
												"src": "12316:250:15"
											},
											{
												"body": {
													"nativeSrc": "12655:391:15",
													"nodeType": "YulBlock",
													"src": "12655:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12701:83:15",
																"nodeType": "YulBlock",
																"src": "12701:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12703:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "12703:77:15"
																			},
																			"nativeSrc": "12703:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12703:79:15"
																		},
																		"nativeSrc": "12703:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12703:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12676:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12676:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12685:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12685:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12672:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12672:3:15"
																		},
																		"nativeSrc": "12672:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12672:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12697:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12697:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12668:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12668:3:15"
																},
																"nativeSrc": "12668:32:15",
																"nodeType": "YulFunctionCall",
																"src": "12668:32:15"
															},
															"nativeSrc": "12665:119:15",
															"nodeType": "YulIf",
															"src": "12665:119:15"
														},
														{
															"nativeSrc": "12794:117:15",
															"nodeType": "YulBlock",
															"src": "12794:117:15",
															"statements": [
																{
																	"nativeSrc": "12809:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12809:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12823:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12823:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12813:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12813:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12838:63:15",
																	"nodeType": "YulAssignment",
																	"src": "12838:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12873:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12873:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12884:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12884:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12869:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12869:3:15"
																				},
																				"nativeSrc": "12869:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12869:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12893:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12893:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12848:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "12848:20:15"
																		},
																		"nativeSrc": "12848:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12848:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12838:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12838:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12921:118:15",
															"nodeType": "YulBlock",
															"src": "12921:118:15",
															"statements": [
																{
																	"nativeSrc": "12936:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12936:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12950:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12950:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12940:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12940:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12966:63:15",
																	"nodeType": "YulAssignment",
																	"src": "12966:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13001:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "13001:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13012:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "13012:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12997:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12997:3:15"
																				},
																				"nativeSrc": "12997:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12997:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13021:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13021:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12976:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "12976:20:15"
																		},
																		"nativeSrc": "12976:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12976:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12966:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12966:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12572:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12617:9:15",
														"nodeType": "YulTypedName",
														"src": "12617:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12628:7:15",
														"nodeType": "YulTypedName",
														"src": "12628:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12640:6:15",
														"nodeType": "YulTypedName",
														"src": "12640:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12648:6:15",
														"nodeType": "YulTypedName",
														"src": "12648:6:15",
														"type": ""
													}
												],
												"src": "12572:474:15"
											},
											{
												"body": {
													"nativeSrc": "13080:152:15",
													"nodeType": "YulBlock",
													"src": "13080:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13097:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13097:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13100:77:15",
																		"nodeType": "YulLiteral",
																		"src": "13100:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13090:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13090:6:15"
																},
																"nativeSrc": "13090:88:15",
																"nodeType": "YulFunctionCall",
																"src": "13090:88:15"
															},
															"nativeSrc": "13090:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "13090:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13194:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13197:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13197:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13187:6:15"
																},
																"nativeSrc": "13187:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13187:15:15"
															},
															"nativeSrc": "13187:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "13187:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13218:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13218:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13221:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13221:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13211:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13211:6:15"
																},
																"nativeSrc": "13211:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13211:15:15"
															},
															"nativeSrc": "13211:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "13211:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13052:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "13052:180:15"
											},
											{
												"body": {
													"nativeSrc": "13289:269:15",
													"nodeType": "YulBlock",
													"src": "13289:269:15",
													"statements": [
														{
															"nativeSrc": "13299:22:15",
															"nodeType": "YulAssignment",
															"src": "13299:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13313:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "13313:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13319:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13319:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13309:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13309:3:15"
																},
																"nativeSrc": "13309:12:15",
																"nodeType": "YulFunctionCall",
																"src": "13309:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13299:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13299:6:15"
																}
															]
														},
														{
															"nativeSrc": "13330:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "13330:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13360:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "13360:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13366:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13366:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13356:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13356:3:15"
																},
																"nativeSrc": "13356:12:15",
																"nodeType": "YulFunctionCall",
																"src": "13356:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13334:18:15",
																	"nodeType": "YulTypedName",
																	"src": "13334:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13407:51:15",
																"nodeType": "YulBlock",
																"src": "13407:51:15",
																"statements": [
																	{
																		"nativeSrc": "13421:27:15",
																		"nodeType": "YulAssignment",
																		"src": "13421:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13435:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "13435:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13443:4:15",
																					"nodeType": "YulLiteral",
																					"src": "13443:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13431:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "13431:3:15"
																			},
																			"nativeSrc": "13431:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13431:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13421:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13421:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13387:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "13387:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13380:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13380:6:15"
																},
																"nativeSrc": "13380:26:15",
																"nodeType": "YulFunctionCall",
																"src": "13380:26:15"
															},
															"nativeSrc": "13377:81:15",
															"nodeType": "YulIf",
															"src": "13377:81:15"
														},
														{
															"body": {
																"nativeSrc": "13510:42:15",
																"nodeType": "YulBlock",
																"src": "13510:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13524:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "13524:16:15"
																			},
																			"nativeSrc": "13524:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13524:18:15"
																		},
																		"nativeSrc": "13524:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13524:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13474:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "13474:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13497:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13497:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13505:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13505:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13494:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "13494:2:15"
																		},
																		"nativeSrc": "13494:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13494:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13471:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13471:2:15"
																},
																"nativeSrc": "13471:38:15",
																"nodeType": "YulFunctionCall",
																"src": "13471:38:15"
															},
															"nativeSrc": "13468:84:15",
															"nodeType": "YulIf",
															"src": "13468:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13238:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13273:4:15",
														"nodeType": "YulTypedName",
														"src": "13273:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13282:6:15",
														"nodeType": "YulTypedName",
														"src": "13282:6:15",
														"type": ""
													}
												],
												"src": "13238:320:15"
											},
											{
												"body": {
													"nativeSrc": "13718:288:15",
													"nodeType": "YulBlock",
													"src": "13718:288:15",
													"statements": [
														{
															"nativeSrc": "13728:26:15",
															"nodeType": "YulAssignment",
															"src": "13728:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13740:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13740:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13751:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13751:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13736:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13736:3:15"
																},
																"nativeSrc": "13736:18:15",
																"nodeType": "YulFunctionCall",
																"src": "13736:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13728:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13728:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13808:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13808:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13821:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13821:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13832:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13832:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13817:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13817:3:15"
																		},
																		"nativeSrc": "13817:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13817:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13764:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13764:43:15"
																},
																"nativeSrc": "13764:71:15",
																"nodeType": "YulFunctionCall",
																"src": "13764:71:15"
															},
															"nativeSrc": "13764:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "13764:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13889:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13889:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13902:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13902:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13913:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13913:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13898:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13898:3:15"
																		},
																		"nativeSrc": "13898:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13898:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13845:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13845:43:15"
																},
																"nativeSrc": "13845:72:15",
																"nodeType": "YulFunctionCall",
																"src": "13845:72:15"
															},
															"nativeSrc": "13845:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "13845:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13971:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13971:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13984:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13984:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13995:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13995:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13980:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13980:3:15"
																		},
																		"nativeSrc": "13980:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13980:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13927:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13927:43:15"
																},
																"nativeSrc": "13927:72:15",
																"nodeType": "YulFunctionCall",
																"src": "13927:72:15"
															},
															"nativeSrc": "13927:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "13927:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13564:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13674:9:15",
														"nodeType": "YulTypedName",
														"src": "13674:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13686:6:15",
														"nodeType": "YulTypedName",
														"src": "13686:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13694:6:15",
														"nodeType": "YulTypedName",
														"src": "13694:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13702:6:15",
														"nodeType": "YulTypedName",
														"src": "13702:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13713:4:15",
														"nodeType": "YulTypedName",
														"src": "13713:4:15",
														"type": ""
													}
												],
												"src": "13564:442:15"
											},
											{
												"body": {
													"nativeSrc": "14118:75:15",
													"nodeType": "YulBlock",
													"src": "14118:75:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14140:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14140:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14148:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14148:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14136:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14136:3:15"
																		},
																		"nativeSrc": "14136:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14136:14:15"
																	},
																	{
																		"hexValue": "4e46542077697468207468697320494420616c726561647920657869737473",
																		"kind": "string",
																		"nativeSrc": "14152:33:15",
																		"nodeType": "YulLiteral",
																		"src": "14152:33:15",
																		"type": "",
																		"value": "NFT with this ID already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14129:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14129:6:15"
																},
																"nativeSrc": "14129:57:15",
																"nodeType": "YulFunctionCall",
																"src": "14129:57:15"
															},
															"nativeSrc": "14129:57:15",
															"nodeType": "YulExpressionStatement",
															"src": "14129:57:15"
														}
													]
												},
												"name": "store_literal_in_memory_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f",
												"nativeSrc": "14012:181:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14110:6:15",
														"nodeType": "YulTypedName",
														"src": "14110:6:15",
														"type": ""
													}
												],
												"src": "14012:181:15"
											},
											{
												"body": {
													"nativeSrc": "14345:220:15",
													"nodeType": "YulBlock",
													"src": "14345:220:15",
													"statements": [
														{
															"nativeSrc": "14355:74:15",
															"nodeType": "YulAssignment",
															"src": "14355:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14421:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14421:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14426:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14426:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14362:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "14362:58:15"
																},
																"nativeSrc": "14362:67:15",
																"nodeType": "YulFunctionCall",
																"src": "14362:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14355:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14355:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14527:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14527:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f",
																	"nativeSrc": "14438:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "14438:88:15"
																},
																"nativeSrc": "14438:93:15",
																"nodeType": "YulFunctionCall",
																"src": "14438:93:15"
															},
															"nativeSrc": "14438:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "14438:93:15"
														},
														{
															"nativeSrc": "14540:19:15",
															"nodeType": "YulAssignment",
															"src": "14540:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14551:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14551:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14556:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14556:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14547:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14547:3:15"
																},
																"nativeSrc": "14547:12:15",
																"nodeType": "YulFunctionCall",
																"src": "14547:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14540:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14540:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14199:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14333:3:15",
														"nodeType": "YulTypedName",
														"src": "14333:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14341:3:15",
														"nodeType": "YulTypedName",
														"src": "14341:3:15",
														"type": ""
													}
												],
												"src": "14199:366:15"
											},
											{
												"body": {
													"nativeSrc": "14742:248:15",
													"nodeType": "YulBlock",
													"src": "14742:248:15",
													"statements": [
														{
															"nativeSrc": "14752:26:15",
															"nodeType": "YulAssignment",
															"src": "14752:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14764:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14764:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14775:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14775:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14760:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14760:3:15"
																},
																"nativeSrc": "14760:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14760:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14752:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14752:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14799:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14799:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14810:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14810:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14795:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14795:3:15"
																		},
																		"nativeSrc": "14795:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14795:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14818:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "14818:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14824:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14824:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14814:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14814:3:15"
																		},
																		"nativeSrc": "14814:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14814:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14788:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14788:6:15"
																},
																"nativeSrc": "14788:47:15",
																"nodeType": "YulFunctionCall",
																"src": "14788:47:15"
															},
															"nativeSrc": "14788:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "14788:47:15"
														},
														{
															"nativeSrc": "14844:139:15",
															"nodeType": "YulAssignment",
															"src": "14844:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14978:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "14978:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14852:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "14852:124:15"
																},
																"nativeSrc": "14852:131:15",
																"nodeType": "YulFunctionCall",
																"src": "14852:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14844:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14844:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14571:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14722:9:15",
														"nodeType": "YulTypedName",
														"src": "14722:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14737:4:15",
														"nodeType": "YulTypedName",
														"src": "14737:4:15",
														"type": ""
													}
												],
												"src": "14571:419:15"
											},
											{
												"body": {
													"nativeSrc": "15102:114:15",
													"nodeType": "YulBlock",
													"src": "15102:114:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15124:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15124:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15132:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15132:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15120:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15120:3:15"
																		},
																		"nativeSrc": "15120:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15120:14:15"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973204e46",
																		"kind": "string",
																		"nativeSrc": "15136:34:15",
																		"nodeType": "YulLiteral",
																		"src": "15136:34:15",
																		"type": "",
																		"value": "You are not the owner of this NF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15113:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15113:6:15"
																},
																"nativeSrc": "15113:58:15",
																"nodeType": "YulFunctionCall",
																"src": "15113:58:15"
															},
															"nativeSrc": "15113:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "15113:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15192:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15192:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15200:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15200:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15188:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15188:3:15"
																		},
																		"nativeSrc": "15188:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15188:15:15"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nativeSrc": "15205:3:15",
																		"nodeType": "YulLiteral",
																		"src": "15205:3:15",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15181:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15181:6:15"
																},
																"nativeSrc": "15181:28:15",
																"nodeType": "YulFunctionCall",
																"src": "15181:28:15"
															},
															"nativeSrc": "15181:28:15",
															"nodeType": "YulExpressionStatement",
															"src": "15181:28:15"
														}
													]
												},
												"name": "store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
												"nativeSrc": "14996:220:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15094:6:15",
														"nodeType": "YulTypedName",
														"src": "15094:6:15",
														"type": ""
													}
												],
												"src": "14996:220:15"
											},
											{
												"body": {
													"nativeSrc": "15368:220:15",
													"nodeType": "YulBlock",
													"src": "15368:220:15",
													"statements": [
														{
															"nativeSrc": "15378:74:15",
															"nodeType": "YulAssignment",
															"src": "15378:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15444:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15444:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15449:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15449:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15385:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "15385:58:15"
																},
																"nativeSrc": "15385:67:15",
																"nodeType": "YulFunctionCall",
																"src": "15385:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15378:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15378:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15550:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15550:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
																	"nativeSrc": "15461:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "15461:88:15"
																},
																"nativeSrc": "15461:93:15",
																"nodeType": "YulFunctionCall",
																"src": "15461:93:15"
															},
															"nativeSrc": "15461:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "15461:93:15"
														},
														{
															"nativeSrc": "15563:19:15",
															"nodeType": "YulAssignment",
															"src": "15563:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15574:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15574:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15579:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15579:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15570:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15570:3:15"
																},
																"nativeSrc": "15570:12:15",
																"nodeType": "YulFunctionCall",
																"src": "15570:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15563:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15563:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15222:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15356:3:15",
														"nodeType": "YulTypedName",
														"src": "15356:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15364:3:15",
														"nodeType": "YulTypedName",
														"src": "15364:3:15",
														"type": ""
													}
												],
												"src": "15222:366:15"
											},
											{
												"body": {
													"nativeSrc": "15765:248:15",
													"nodeType": "YulBlock",
													"src": "15765:248:15",
													"statements": [
														{
															"nativeSrc": "15775:26:15",
															"nodeType": "YulAssignment",
															"src": "15775:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15787:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15787:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15798:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15798:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15783:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15783:3:15"
																},
																"nativeSrc": "15783:18:15",
																"nodeType": "YulFunctionCall",
																"src": "15783:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15775:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15775:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15822:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15822:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15833:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15833:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15818:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15818:3:15"
																		},
																		"nativeSrc": "15818:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15818:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15841:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "15841:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15847:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15847:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15837:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15837:3:15"
																		},
																		"nativeSrc": "15837:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15837:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15811:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15811:6:15"
																},
																"nativeSrc": "15811:47:15",
																"nodeType": "YulFunctionCall",
																"src": "15811:47:15"
															},
															"nativeSrc": "15811:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "15811:47:15"
														},
														{
															"nativeSrc": "15867:139:15",
															"nodeType": "YulAssignment",
															"src": "15867:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16001:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "16001:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15875:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "15875:124:15"
																},
																"nativeSrc": "15875:131:15",
																"nodeType": "YulFunctionCall",
																"src": "15875:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15867:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15867:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15594:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15745:9:15",
														"nodeType": "YulTypedName",
														"src": "15745:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15760:4:15",
														"nodeType": "YulTypedName",
														"src": "15760:4:15",
														"type": ""
													}
												],
												"src": "15594:419:15"
											},
											{
												"body": {
													"nativeSrc": "16173:288:15",
													"nodeType": "YulBlock",
													"src": "16173:288:15",
													"statements": [
														{
															"nativeSrc": "16183:26:15",
															"nodeType": "YulAssignment",
															"src": "16183:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16195:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16195:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16206:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16206:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16191:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16191:3:15"
																},
																"nativeSrc": "16191:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16191:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16183:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16183:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16263:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16263:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16276:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16276:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16287:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16287:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16272:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16272:3:15"
																		},
																		"nativeSrc": "16272:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16272:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16219:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16219:43:15"
																},
																"nativeSrc": "16219:71:15",
																"nodeType": "YulFunctionCall",
																"src": "16219:71:15"
															},
															"nativeSrc": "16219:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "16219:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16344:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16344:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16357:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16357:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16368:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16368:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16353:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16353:3:15"
																		},
																		"nativeSrc": "16353:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16353:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16300:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16300:43:15"
																},
																"nativeSrc": "16300:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16300:72:15"
															},
															"nativeSrc": "16300:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16300:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16426:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16426:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16439:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16439:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16450:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16450:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16435:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16435:3:15"
																		},
																		"nativeSrc": "16435:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16435:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16382:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16382:43:15"
																},
																"nativeSrc": "16382:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16382:72:15"
															},
															"nativeSrc": "16382:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16382:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16019:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16129:9:15",
														"nodeType": "YulTypedName",
														"src": "16129:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16141:6:15",
														"nodeType": "YulTypedName",
														"src": "16141:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16149:6:15",
														"nodeType": "YulTypedName",
														"src": "16149:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16157:6:15",
														"nodeType": "YulTypedName",
														"src": "16157:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16168:4:15",
														"nodeType": "YulTypedName",
														"src": "16168:4:15",
														"type": ""
													}
												],
												"src": "16019:442:15"
											},
											{
												"body": {
													"nativeSrc": "16527:77:15",
													"nodeType": "YulBlock",
													"src": "16527:77:15",
													"statements": [
														{
															"nativeSrc": "16537:22:15",
															"nodeType": "YulAssignment",
															"src": "16537:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16552:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16552:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16546:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "16546:5:15"
																},
																"nativeSrc": "16546:13:15",
																"nodeType": "YulFunctionCall",
																"src": "16546:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16537:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "16537:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16592:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "16592:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "16568:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "16568:23:15"
																},
																"nativeSrc": "16568:30:15",
																"nodeType": "YulFunctionCall",
																"src": "16568:30:15"
															},
															"nativeSrc": "16568:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "16568:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "16467:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16505:6:15",
														"nodeType": "YulTypedName",
														"src": "16505:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16513:3:15",
														"nodeType": "YulTypedName",
														"src": "16513:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16521:5:15",
														"nodeType": "YulTypedName",
														"src": "16521:5:15",
														"type": ""
													}
												],
												"src": "16467:137:15"
											},
											{
												"body": {
													"nativeSrc": "16684:271:15",
													"nodeType": "YulBlock",
													"src": "16684:271:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "16730:83:15",
																"nodeType": "YulBlock",
																"src": "16730:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16732:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "16732:77:15"
																			},
																			"nativeSrc": "16732:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16732:79:15"
																		},
																		"nativeSrc": "16732:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16732:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16705:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16705:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16714:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16714:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16701:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16701:3:15"
																		},
																		"nativeSrc": "16701:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16701:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16726:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16726:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16697:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16697:3:15"
																},
																"nativeSrc": "16697:32:15",
																"nodeType": "YulFunctionCall",
																"src": "16697:32:15"
															},
															"nativeSrc": "16694:119:15",
															"nodeType": "YulIf",
															"src": "16694:119:15"
														},
														{
															"nativeSrc": "16823:125:15",
															"nodeType": "YulBlock",
															"src": "16823:125:15",
															"statements": [
																{
																	"nativeSrc": "16838:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16838:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16852:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16852:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16842:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16842:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16867:71:15",
																	"nodeType": "YulAssignment",
																	"src": "16867:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16910:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16910:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16921:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16921:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16906:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16906:3:15"
																				},
																				"nativeSrc": "16906:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16906:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16930:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16930:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "16877:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "16877:28:15"
																		},
																		"nativeSrc": "16877:61:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16877:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16867:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16867:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "16610:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16654:9:15",
														"nodeType": "YulTypedName",
														"src": "16654:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16665:7:15",
														"nodeType": "YulTypedName",
														"src": "16665:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16677:6:15",
														"nodeType": "YulTypedName",
														"src": "16677:6:15",
														"type": ""
													}
												],
												"src": "16610:345:15"
											},
											{
												"body": {
													"nativeSrc": "17067:72:15",
													"nodeType": "YulBlock",
													"src": "17067:72:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17089:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "17089:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17097:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17097:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17085:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17085:3:15"
																		},
																		"nativeSrc": "17085:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17085:14:15"
																	},
																	{
																		"hexValue": "546f6b656e20416d6f756e74207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "17101:30:15",
																		"nodeType": "YulLiteral",
																		"src": "17101:30:15",
																		"type": "",
																		"value": "Token Amount transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17078:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17078:6:15"
																},
																"nativeSrc": "17078:54:15",
																"nodeType": "YulFunctionCall",
																"src": "17078:54:15"
															},
															"nativeSrc": "17078:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "17078:54:15"
														}
													]
												},
												"name": "store_literal_in_memory_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd",
												"nativeSrc": "16961:178:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17059:6:15",
														"nodeType": "YulTypedName",
														"src": "17059:6:15",
														"type": ""
													}
												],
												"src": "16961:178:15"
											},
											{
												"body": {
													"nativeSrc": "17291:220:15",
													"nodeType": "YulBlock",
													"src": "17291:220:15",
													"statements": [
														{
															"nativeSrc": "17301:74:15",
															"nodeType": "YulAssignment",
															"src": "17301:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17367:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17367:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17372:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17372:2:15",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17308:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "17308:58:15"
																},
																"nativeSrc": "17308:67:15",
																"nodeType": "YulFunctionCall",
																"src": "17308:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17301:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17301:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17473:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17473:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd",
																	"nativeSrc": "17384:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "17384:88:15"
																},
																"nativeSrc": "17384:93:15",
																"nodeType": "YulFunctionCall",
																"src": "17384:93:15"
															},
															"nativeSrc": "17384:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "17384:93:15"
														},
														{
															"nativeSrc": "17486:19:15",
															"nodeType": "YulAssignment",
															"src": "17486:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17497:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "17497:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17502:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17502:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17493:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17493:3:15"
																},
																"nativeSrc": "17493:12:15",
																"nodeType": "YulFunctionCall",
																"src": "17493:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17486:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17486:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17145:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17279:3:15",
														"nodeType": "YulTypedName",
														"src": "17279:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17287:3:15",
														"nodeType": "YulTypedName",
														"src": "17287:3:15",
														"type": ""
													}
												],
												"src": "17145:366:15"
											},
											{
												"body": {
													"nativeSrc": "17688:248:15",
													"nodeType": "YulBlock",
													"src": "17688:248:15",
													"statements": [
														{
															"nativeSrc": "17698:26:15",
															"nodeType": "YulAssignment",
															"src": "17698:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17710:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "17710:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17721:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17721:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17706:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17706:3:15"
																},
																"nativeSrc": "17706:18:15",
																"nodeType": "YulFunctionCall",
																"src": "17706:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17698:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17698:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17745:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17745:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17756:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17756:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17741:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17741:3:15"
																		},
																		"nativeSrc": "17741:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17741:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17764:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "17764:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17770:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17770:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17760:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17760:3:15"
																		},
																		"nativeSrc": "17760:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17760:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17734:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17734:6:15"
																},
																"nativeSrc": "17734:47:15",
																"nodeType": "YulFunctionCall",
																"src": "17734:47:15"
															},
															"nativeSrc": "17734:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "17734:47:15"
														},
														{
															"nativeSrc": "17790:139:15",
															"nodeType": "YulAssignment",
															"src": "17790:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17924:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "17924:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17798:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "17798:124:15"
																},
																"nativeSrc": "17798:131:15",
																"nodeType": "YulFunctionCall",
																"src": "17798:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17790:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17790:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17517:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17668:9:15",
														"nodeType": "YulTypedName",
														"src": "17668:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17683:4:15",
														"nodeType": "YulTypedName",
														"src": "17683:4:15",
														"type": ""
													}
												],
												"src": "17517:419:15"
											},
											{
												"body": {
													"nativeSrc": "17984:52:15",
													"nodeType": "YulBlock",
													"src": "17984:52:15",
													"statements": [
														{
															"nativeSrc": "17994:35:15",
															"nodeType": "YulAssignment",
															"src": "17994:35:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18019:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18019:2:15",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18023:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "18023:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "18015:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18015:3:15"
																},
																"nativeSrc": "18015:14:15",
																"nodeType": "YulFunctionCall",
																"src": "18015:14:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17994:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "17994:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "17942:94:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17965:5:15",
														"nodeType": "YulTypedName",
														"src": "17965:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17975:8:15",
														"nodeType": "YulTypedName",
														"src": "17975:8:15",
														"type": ""
													}
												],
												"src": "17942:94:15"
											},
											{
												"body": {
													"nativeSrc": "18089:47:15",
													"nodeType": "YulBlock",
													"src": "18089:47:15",
													"statements": [
														{
															"nativeSrc": "18099:31:15",
															"nodeType": "YulAssignment",
															"src": "18099:31:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18124:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "18124:5:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "18110:13:15",
																	"nodeType": "YulIdentifier",
																	"src": "18110:13:15"
																},
																"nativeSrc": "18110:20:15",
																"nodeType": "YulFunctionCall",
																"src": "18110:20:15"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "18099:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "18099:7:15"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "18042:94:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18071:5:15",
														"nodeType": "YulTypedName",
														"src": "18071:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "18081:7:15",
														"nodeType": "YulTypedName",
														"src": "18081:7:15",
														"type": ""
													}
												],
												"src": "18042:94:15"
											},
											{
												"body": {
													"nativeSrc": "18189:53:15",
													"nodeType": "YulBlock",
													"src": "18189:53:15",
													"statements": [
														{
															"nativeSrc": "18199:37:15",
															"nodeType": "YulAssignment",
															"src": "18199:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18230:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "18230:5:15"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "18210:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "18210:19:15"
																},
																"nativeSrc": "18210:26:15",
																"nodeType": "YulFunctionCall",
																"src": "18210:26:15"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "18199:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "18199:7:15"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "18142:100:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18171:5:15",
														"nodeType": "YulTypedName",
														"src": "18171:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "18181:7:15",
														"nodeType": "YulTypedName",
														"src": "18181:7:15",
														"type": ""
													}
												],
												"src": "18142:100:15"
											},
											{
												"body": {
													"nativeSrc": "18331:74:15",
													"nodeType": "YulBlock",
													"src": "18331:74:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18348:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18348:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18391:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "18391:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "18373:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "18373:17:15"
																				},
																				"nativeSrc": "18373:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18373:24:15"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "18353:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "18353:19:15"
																		},
																		"nativeSrc": "18353:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18353:45:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18341:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18341:6:15"
																},
																"nativeSrc": "18341:58:15",
																"nodeType": "YulFunctionCall",
																"src": "18341:58:15"
															},
															"nativeSrc": "18341:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "18341:58:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "18248:157:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18319:5:15",
														"nodeType": "YulTypedName",
														"src": "18319:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18326:3:15",
														"nodeType": "YulTypedName",
														"src": "18326:3:15",
														"type": ""
													}
												],
												"src": "18248:157:15"
											},
											{
												"body": {
													"nativeSrc": "18458:32:15",
													"nodeType": "YulBlock",
													"src": "18458:32:15",
													"statements": [
														{
															"nativeSrc": "18468:16:15",
															"nodeType": "YulAssignment",
															"src": "18468:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "18479:5:15",
																"nodeType": "YulIdentifier",
																"src": "18479:5:15"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "18468:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "18468:7:15"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "18411:79:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18440:5:15",
														"nodeType": "YulTypedName",
														"src": "18440:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "18450:7:15",
														"nodeType": "YulTypedName",
														"src": "18450:7:15",
														"type": ""
													}
												],
												"src": "18411:79:15"
											},
											{
												"body": {
													"nativeSrc": "18579:74:15",
													"nodeType": "YulBlock",
													"src": "18579:74:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18596:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18596:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18639:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "18639:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "18621:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "18621:17:15"
																				},
																				"nativeSrc": "18621:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18621:24:15"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "18601:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "18601:19:15"
																		},
																		"nativeSrc": "18601:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18601:45:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18589:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18589:6:15"
																},
																"nativeSrc": "18589:58:15",
																"nodeType": "YulFunctionCall",
																"src": "18589:58:15"
															},
															"nativeSrc": "18589:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "18589:58:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "18496:157:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18567:5:15",
														"nodeType": "YulTypedName",
														"src": "18567:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18574:3:15",
														"nodeType": "YulTypedName",
														"src": "18574:3:15",
														"type": ""
													}
												],
												"src": "18496:157:15"
											},
											{
												"body": {
													"nativeSrc": "18887:592:15",
													"nodeType": "YulBlock",
													"src": "18887:592:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18960:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "18960:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18969:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18969:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "18898:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "18898:61:15"
																},
																"nativeSrc": "18898:75:15",
																"nodeType": "YulFunctionCall",
																"src": "18898:75:15"
															},
															"nativeSrc": "18898:75:15",
															"nodeType": "YulExpressionStatement",
															"src": "18898:75:15"
														},
														{
															"nativeSrc": "18982:19:15",
															"nodeType": "YulAssignment",
															"src": "18982:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18993:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "18993:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18998:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18998:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18989:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18989:3:15"
																},
																"nativeSrc": "18989:12:15",
																"nodeType": "YulFunctionCall",
																"src": "18989:12:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18982:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18982:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19073:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19073:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19082:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19082:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "19011:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "19011:61:15"
																},
																"nativeSrc": "19011:75:15",
																"nodeType": "YulFunctionCall",
																"src": "19011:75:15"
															},
															"nativeSrc": "19011:75:15",
															"nodeType": "YulExpressionStatement",
															"src": "19011:75:15"
														},
														{
															"nativeSrc": "19095:19:15",
															"nodeType": "YulAssignment",
															"src": "19095:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19106:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19106:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19111:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19111:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19102:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19102:3:15"
																},
																"nativeSrc": "19102:12:15",
																"nodeType": "YulFunctionCall",
																"src": "19102:12:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19095:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19095:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19186:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19186:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19195:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19195:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "19124:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "19124:61:15"
																},
																"nativeSrc": "19124:75:15",
																"nodeType": "YulFunctionCall",
																"src": "19124:75:15"
															},
															"nativeSrc": "19124:75:15",
															"nodeType": "YulExpressionStatement",
															"src": "19124:75:15"
														},
														{
															"nativeSrc": "19208:19:15",
															"nodeType": "YulAssignment",
															"src": "19208:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19219:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19219:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19224:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19224:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19215:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19215:3:15"
																},
																"nativeSrc": "19215:12:15",
																"nodeType": "YulFunctionCall",
																"src": "19215:12:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19208:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19208:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19299:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19299:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19308:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19308:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "19237:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "19237:61:15"
																},
																"nativeSrc": "19237:75:15",
																"nodeType": "YulFunctionCall",
																"src": "19237:75:15"
															},
															"nativeSrc": "19237:75:15",
															"nodeType": "YulExpressionStatement",
															"src": "19237:75:15"
														},
														{
															"nativeSrc": "19321:19:15",
															"nodeType": "YulAssignment",
															"src": "19321:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19332:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19332:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19337:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19337:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19328:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19328:3:15"
																},
																"nativeSrc": "19328:12:15",
																"nodeType": "YulFunctionCall",
																"src": "19328:12:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19321:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19321:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "19412:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19412:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19421:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19421:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "19350:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "19350:61:15"
																},
																"nativeSrc": "19350:75:15",
																"nodeType": "YulFunctionCall",
																"src": "19350:75:15"
															},
															"nativeSrc": "19350:75:15",
															"nodeType": "YulExpressionStatement",
															"src": "19350:75:15"
														},
														{
															"nativeSrc": "19434:19:15",
															"nodeType": "YulAssignment",
															"src": "19434:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19445:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19445:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19450:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19450:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19441:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19441:3:15"
																},
																"nativeSrc": "19441:12:15",
																"nodeType": "YulFunctionCall",
																"src": "19441:12:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19434:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19434:3:15"
																}
															]
														},
														{
															"nativeSrc": "19463:10:15",
															"nodeType": "YulAssignment",
															"src": "19463:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "19470:3:15",
																"nodeType": "YulIdentifier",
																"src": "19470:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19463:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19463:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18659:820:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18834:3:15",
														"nodeType": "YulTypedName",
														"src": "18834:3:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "18840:6:15",
														"nodeType": "YulTypedName",
														"src": "18840:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18848:6:15",
														"nodeType": "YulTypedName",
														"src": "18848:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18856:6:15",
														"nodeType": "YulTypedName",
														"src": "18856:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18864:6:15",
														"nodeType": "YulTypedName",
														"src": "18864:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18872:6:15",
														"nodeType": "YulTypedName",
														"src": "18872:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18883:3:15",
														"nodeType": "YulTypedName",
														"src": "18883:3:15",
														"type": ""
													}
												],
												"src": "18659:820:15"
											},
											{
												"body": {
													"nativeSrc": "19639:288:15",
													"nodeType": "YulBlock",
													"src": "19639:288:15",
													"statements": [
														{
															"nativeSrc": "19649:26:15",
															"nodeType": "YulAssignment",
															"src": "19649:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19661:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19661:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19672:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19672:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19657:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19657:3:15"
																},
																"nativeSrc": "19657:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19657:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19649:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19649:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19729:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19729:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19742:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19742:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19753:1:15",
																				"nodeType": "YulLiteral",
																				"src": "19753:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19738:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19738:3:15"
																		},
																		"nativeSrc": "19738:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19738:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19685:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "19685:43:15"
																},
																"nativeSrc": "19685:71:15",
																"nodeType": "YulFunctionCall",
																"src": "19685:71:15"
															},
															"nativeSrc": "19685:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "19685:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19810:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19810:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19823:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19823:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19834:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19834:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19819:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19819:3:15"
																		},
																		"nativeSrc": "19819:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19819:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19766:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "19766:43:15"
																},
																"nativeSrc": "19766:72:15",
																"nodeType": "YulFunctionCall",
																"src": "19766:72:15"
															},
															"nativeSrc": "19766:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "19766:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19892:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19892:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19905:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "19905:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19916:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19916:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19901:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19901:3:15"
																		},
																		"nativeSrc": "19901:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19901:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "19848:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "19848:43:15"
																},
																"nativeSrc": "19848:72:15",
																"nodeType": "YulFunctionCall",
																"src": "19848:72:15"
															},
															"nativeSrc": "19848:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "19848:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_bytes32__fromStack_reversed",
												"nativeSrc": "19485:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19595:9:15",
														"nodeType": "YulTypedName",
														"src": "19595:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19607:6:15",
														"nodeType": "YulTypedName",
														"src": "19607:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19615:6:15",
														"nodeType": "YulTypedName",
														"src": "19615:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19623:6:15",
														"nodeType": "YulTypedName",
														"src": "19623:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19634:4:15",
														"nodeType": "YulTypedName",
														"src": "19634:4:15",
														"type": ""
													}
												],
												"src": "19485:442:15"
											},
											{
												"body": {
													"nativeSrc": "19986:32:15",
													"nodeType": "YulBlock",
													"src": "19986:32:15",
													"statements": [
														{
															"nativeSrc": "19996:16:15",
															"nodeType": "YulAssignment",
															"src": "19996:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "20007:5:15",
																"nodeType": "YulIdentifier",
																"src": "20007:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "19996:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "19996:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "19933:85:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19968:5:15",
														"nodeType": "YulTypedName",
														"src": "19968:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "19978:7:15",
														"nodeType": "YulTypedName",
														"src": "19978:7:15",
														"type": ""
													}
												],
												"src": "19933:85:15"
											},
											{
												"body": {
													"nativeSrc": "20092:90:15",
													"nodeType": "YulBlock",
													"src": "20092:90:15",
													"statements": [
														{
															"nativeSrc": "20102:74:15",
															"nodeType": "YulAssignment",
															"src": "20102:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20168:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "20168:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "20142:25:15",
																					"nodeType": "YulIdentifier",
																					"src": "20142:25:15"
																				},
																				"nativeSrc": "20142:32:15",
																				"nodeType": "YulFunctionCall",
																				"src": "20142:32:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "20133:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "20133:8:15"
																		},
																		"nativeSrc": "20133:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20133:42:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20115:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "20115:17:15"
																},
																"nativeSrc": "20115:61:15",
																"nodeType": "YulFunctionCall",
																"src": "20115:61:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "20102:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "20102:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "20024:158:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20072:5:15",
														"nodeType": "YulTypedName",
														"src": "20072:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "20082:9:15",
														"nodeType": "YulTypedName",
														"src": "20082:9:15",
														"type": ""
													}
												],
												"src": "20024:158:15"
											},
											{
												"body": {
													"nativeSrc": "20261:74:15",
													"nodeType": "YulBlock",
													"src": "20261:74:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20278:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20278:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20322:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "20322:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "20283:38:15",
																			"nodeType": "YulIdentifier",
																			"src": "20283:38:15"
																		},
																		"nativeSrc": "20283:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20283:45:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20271:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20271:6:15"
																},
																"nativeSrc": "20271:58:15",
																"nodeType": "YulFunctionCall",
																"src": "20271:58:15"
															},
															"nativeSrc": "20271:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "20271:58:15"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "20188:147:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20249:5:15",
														"nodeType": "YulTypedName",
														"src": "20249:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20256:3:15",
														"nodeType": "YulTypedName",
														"src": "20256:3:15",
														"type": ""
													}
												],
												"src": "20188:147:15"
											},
											{
												"body": {
													"nativeSrc": "20503:296:15",
													"nodeType": "YulBlock",
													"src": "20503:296:15",
													"statements": [
														{
															"nativeSrc": "20513:26:15",
															"nodeType": "YulAssignment",
															"src": "20513:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20525:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20525:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20536:2:15",
																		"nodeType": "YulLiteral",
																		"src": "20536:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20521:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20521:3:15"
																},
																"nativeSrc": "20521:18:15",
																"nodeType": "YulFunctionCall",
																"src": "20521:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20513:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "20513:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20593:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20593:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20606:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20606:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20617:1:15",
																				"nodeType": "YulLiteral",
																				"src": "20617:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20602:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20602:3:15"
																		},
																		"nativeSrc": "20602:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20602:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20549:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "20549:43:15"
																},
																"nativeSrc": "20549:71:15",
																"nodeType": "YulFunctionCall",
																"src": "20549:71:15"
															},
															"nativeSrc": "20549:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "20549:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20682:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20682:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20695:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20695:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20706:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20706:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20691:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20691:3:15"
																		},
																		"nativeSrc": "20691:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20691:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "20630:51:15",
																	"nodeType": "YulIdentifier",
																	"src": "20630:51:15"
																},
																"nativeSrc": "20630:80:15",
																"nodeType": "YulFunctionCall",
																"src": "20630:80:15"
															},
															"nativeSrc": "20630:80:15",
															"nodeType": "YulExpressionStatement",
															"src": "20630:80:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20764:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20764:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20777:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20777:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20788:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20788:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20773:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20773:3:15"
																		},
																		"nativeSrc": "20773:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20773:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "20720:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "20720:43:15"
																},
																"nativeSrc": "20720:72:15",
																"nodeType": "YulFunctionCall",
																"src": "20720:72:15"
															},
															"nativeSrc": "20720:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "20720:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_bytes32__to_t_uint256_t_uint256_t_bytes32__fromStack_reversed",
												"nativeSrc": "20341:458:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20459:9:15",
														"nodeType": "YulTypedName",
														"src": "20459:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20471:6:15",
														"nodeType": "YulTypedName",
														"src": "20471:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20479:6:15",
														"nodeType": "YulTypedName",
														"src": "20479:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20487:6:15",
														"nodeType": "YulTypedName",
														"src": "20487:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20498:4:15",
														"nodeType": "YulTypedName",
														"src": "20498:4:15",
														"type": ""
													}
												],
												"src": "20341:458:15"
											},
											{
												"body": {
													"nativeSrc": "20919:34:15",
													"nodeType": "YulBlock",
													"src": "20919:34:15",
													"statements": [
														{
															"nativeSrc": "20929:18:15",
															"nodeType": "YulAssignment",
															"src": "20929:18:15",
															"value": {
																"name": "pos",
																"nativeSrc": "20944:3:15",
																"nodeType": "YulIdentifier",
																"src": "20944:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20929:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "20929:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20805:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20891:3:15",
														"nodeType": "YulTypedName",
														"src": "20891:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20896:6:15",
														"nodeType": "YulTypedName",
														"src": "20896:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20907:11:15",
														"nodeType": "YulTypedName",
														"src": "20907:11:15",
														"type": ""
													}
												],
												"src": "20805:148:15"
											},
											{
												"body": {
													"nativeSrc": "21069:280:15",
													"nodeType": "YulBlock",
													"src": "21069:280:15",
													"statements": [
														{
															"nativeSrc": "21079:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "21079:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21126:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "21126:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "21093:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "21093:32:15"
																},
																"nativeSrc": "21093:39:15",
																"nodeType": "YulFunctionCall",
																"src": "21093:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21083:6:15",
																	"nodeType": "YulTypedName",
																	"src": "21083:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21141:96:15",
															"nodeType": "YulAssignment",
															"src": "21141:96:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21225:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21225:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21230:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21230:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21148:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "21148:76:15"
																},
																"nativeSrc": "21148:89:15",
																"nodeType": "YulFunctionCall",
																"src": "21148:89:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21141:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21141:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21285:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "21285:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21292:4:15",
																				"nodeType": "YulLiteral",
																				"src": "21292:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21281:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21281:3:15"
																		},
																		"nativeSrc": "21281:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21281:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21299:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21299:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21304:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21304:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21246:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "21246:34:15"
																},
																"nativeSrc": "21246:65:15",
																"nodeType": "YulFunctionCall",
																"src": "21246:65:15"
															},
															"nativeSrc": "21246:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "21246:65:15"
														},
														{
															"nativeSrc": "21320:23:15",
															"nodeType": "YulAssignment",
															"src": "21320:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21331:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21331:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21336:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21336:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21327:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21327:3:15"
																},
																"nativeSrc": "21327:16:15",
																"nodeType": "YulFunctionCall",
																"src": "21327:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21320:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21320:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20959:390:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21050:5:15",
														"nodeType": "YulTypedName",
														"src": "21050:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21057:3:15",
														"nodeType": "YulTypedName",
														"src": "21057:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21065:3:15",
														"nodeType": "YulTypedName",
														"src": "21065:3:15",
														"type": ""
													}
												],
												"src": "20959:390:15"
											},
											{
												"body": {
													"nativeSrc": "21539:251:15",
													"nodeType": "YulBlock",
													"src": "21539:251:15",
													"statements": [
														{
															"nativeSrc": "21550:102:15",
															"nodeType": "YulAssignment",
															"src": "21550:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21639:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21639:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21648:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21648:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21557:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "21557:81:15"
																},
																"nativeSrc": "21557:95:15",
																"nodeType": "YulFunctionCall",
																"src": "21557:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21550:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21550:3:15"
																}
															]
														},
														{
															"nativeSrc": "21662:102:15",
															"nodeType": "YulAssignment",
															"src": "21662:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21751:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21751:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21760:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21760:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21669:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "21669:81:15"
																},
																"nativeSrc": "21669:95:15",
																"nodeType": "YulFunctionCall",
																"src": "21669:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21662:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21662:3:15"
																}
															]
														},
														{
															"nativeSrc": "21774:10:15",
															"nodeType": "YulAssignment",
															"src": "21774:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "21781:3:15",
																"nodeType": "YulIdentifier",
																"src": "21781:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21774:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21774:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21355:435:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21510:3:15",
														"nodeType": "YulTypedName",
														"src": "21510:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21516:6:15",
														"nodeType": "YulTypedName",
														"src": "21516:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21524:6:15",
														"nodeType": "YulTypedName",
														"src": "21524:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21535:3:15",
														"nodeType": "YulTypedName",
														"src": "21535:3:15",
														"type": ""
													}
												],
												"src": "21355:435:15"
											},
											{
												"body": {
													"nativeSrc": "21854:40:15",
													"nodeType": "YulBlock",
													"src": "21854:40:15",
													"statements": [
														{
															"nativeSrc": "21865:22:15",
															"nodeType": "YulAssignment",
															"src": "21865:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21881:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "21881:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21875:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "21875:5:15"
																},
																"nativeSrc": "21875:12:15",
																"nodeType": "YulFunctionCall",
																"src": "21875:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21865:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21865:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "21796:98:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21837:5:15",
														"nodeType": "YulTypedName",
														"src": "21837:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21847:6:15",
														"nodeType": "YulTypedName",
														"src": "21847:6:15",
														"type": ""
													}
												],
												"src": "21796:98:15"
											},
											{
												"body": {
													"nativeSrc": "21995:73:15",
													"nodeType": "YulBlock",
													"src": "21995:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22012:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22012:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22017:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22017:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22005:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22005:6:15"
																},
																"nativeSrc": "22005:19:15",
																"nodeType": "YulFunctionCall",
																"src": "22005:19:15"
															},
															"nativeSrc": "22005:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "22005:19:15"
														},
														{
															"nativeSrc": "22033:29:15",
															"nodeType": "YulAssignment",
															"src": "22033:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22052:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22052:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22057:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22057:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22048:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22048:3:15"
																},
																"nativeSrc": "22048:14:15",
																"nodeType": "YulFunctionCall",
																"src": "22048:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "22033:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "22033:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "21900:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21967:3:15",
														"nodeType": "YulTypedName",
														"src": "21967:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21972:6:15",
														"nodeType": "YulTypedName",
														"src": "21972:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "21983:11:15",
														"nodeType": "YulTypedName",
														"src": "21983:11:15",
														"type": ""
													}
												],
												"src": "21900:168:15"
											},
											{
												"body": {
													"nativeSrc": "22164:283:15",
													"nodeType": "YulBlock",
													"src": "22164:283:15",
													"statements": [
														{
															"nativeSrc": "22174:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "22174:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22220:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "22220:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "22188:31:15",
																	"nodeType": "YulIdentifier",
																	"src": "22188:31:15"
																},
																"nativeSrc": "22188:38:15",
																"nodeType": "YulFunctionCall",
																"src": "22188:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "22178:6:15",
																	"nodeType": "YulTypedName",
																	"src": "22178:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22235:77:15",
															"nodeType": "YulAssignment",
															"src": "22235:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22300:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22300:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22305:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22305:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "22242:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "22242:57:15"
																},
																"nativeSrc": "22242:70:15",
																"nodeType": "YulFunctionCall",
																"src": "22242:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22235:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22235:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22360:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "22360:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22367:4:15",
																				"nodeType": "YulLiteral",
																				"src": "22367:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22356:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22356:3:15"
																		},
																		"nativeSrc": "22356:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22356:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22374:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22374:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22379:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22379:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "22321:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "22321:34:15"
																},
																"nativeSrc": "22321:65:15",
																"nodeType": "YulFunctionCall",
																"src": "22321:65:15"
															},
															"nativeSrc": "22321:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "22321:65:15"
														},
														{
															"nativeSrc": "22395:46:15",
															"nodeType": "YulAssignment",
															"src": "22395:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22406:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22406:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "22433:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "22433:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "22411:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "22411:21:15"
																		},
																		"nativeSrc": "22411:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22411:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22402:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22402:3:15"
																},
																"nativeSrc": "22402:39:15",
																"nodeType": "YulFunctionCall",
																"src": "22402:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22395:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22395:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "22074:373:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22145:5:15",
														"nodeType": "YulTypedName",
														"src": "22145:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "22152:3:15",
														"nodeType": "YulTypedName",
														"src": "22152:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22160:3:15",
														"nodeType": "YulTypedName",
														"src": "22160:3:15",
														"type": ""
													}
												],
												"src": "22074:373:15"
											},
											{
												"body": {
													"nativeSrc": "22653:440:15",
													"nodeType": "YulBlock",
													"src": "22653:440:15",
													"statements": [
														{
															"nativeSrc": "22663:27:15",
															"nodeType": "YulAssignment",
															"src": "22663:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22675:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22675:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22686:3:15",
																		"nodeType": "YulLiteral",
																		"src": "22686:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22671:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22671:3:15"
																},
																"nativeSrc": "22671:19:15",
																"nodeType": "YulFunctionCall",
																"src": "22671:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22663:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22663:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22744:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22744:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22757:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22757:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22768:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22768:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22753:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22753:3:15"
																		},
																		"nativeSrc": "22753:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22753:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22700:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22700:43:15"
																},
																"nativeSrc": "22700:71:15",
																"nodeType": "YulFunctionCall",
																"src": "22700:71:15"
															},
															"nativeSrc": "22700:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "22700:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22825:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22825:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22838:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22838:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22849:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22849:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22834:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22834:3:15"
																		},
																		"nativeSrc": "22834:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22834:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22781:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22781:43:15"
																},
																"nativeSrc": "22781:72:15",
																"nodeType": "YulFunctionCall",
																"src": "22781:72:15"
															},
															"nativeSrc": "22781:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "22781:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22907:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22907:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22920:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22920:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22931:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22931:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22916:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22916:3:15"
																		},
																		"nativeSrc": "22916:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22916:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22863:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22863:43:15"
																},
																"nativeSrc": "22863:72:15",
																"nodeType": "YulFunctionCall",
																"src": "22863:72:15"
															},
															"nativeSrc": "22863:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "22863:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22956:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22956:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22967:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22967:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22952:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22952:3:15"
																		},
																		"nativeSrc": "22952:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22952:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22976:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "22976:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22982:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22982:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22972:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22972:3:15"
																		},
																		"nativeSrc": "22972:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22972:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22945:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22945:6:15"
																},
																"nativeSrc": "22945:48:15",
																"nodeType": "YulFunctionCall",
																"src": "22945:48:15"
															},
															"nativeSrc": "22945:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "22945:48:15"
														},
														{
															"nativeSrc": "23002:84:15",
															"nodeType": "YulAssignment",
															"src": "23002:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "23072:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "23072:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23081:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "23081:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "23010:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "23010:61:15"
																},
																"nativeSrc": "23010:76:15",
																"nodeType": "YulFunctionCall",
																"src": "23010:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23002:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23002:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "22453:640:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22601:9:15",
														"nodeType": "YulTypedName",
														"src": "22601:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "22613:6:15",
														"nodeType": "YulTypedName",
														"src": "22613:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22621:6:15",
														"nodeType": "YulTypedName",
														"src": "22621:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22629:6:15",
														"nodeType": "YulTypedName",
														"src": "22629:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22637:6:15",
														"nodeType": "YulTypedName",
														"src": "22637:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22648:4:15",
														"nodeType": "YulTypedName",
														"src": "22648:4:15",
														"type": ""
													}
												],
												"src": "22453:640:15"
											},
											{
												"body": {
													"nativeSrc": "23161:79:15",
													"nodeType": "YulBlock",
													"src": "23161:79:15",
													"statements": [
														{
															"nativeSrc": "23171:22:15",
															"nodeType": "YulAssignment",
															"src": "23171:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "23186:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "23186:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23180:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "23180:5:15"
																},
																"nativeSrc": "23180:13:15",
																"nodeType": "YulFunctionCall",
																"src": "23180:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23171:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "23171:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23228:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "23228:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "23202:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "23202:25:15"
																},
																"nativeSrc": "23202:32:15",
																"nodeType": "YulFunctionCall",
																"src": "23202:32:15"
															},
															"nativeSrc": "23202:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "23202:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "23099:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23139:6:15",
														"nodeType": "YulTypedName",
														"src": "23139:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23147:3:15",
														"nodeType": "YulTypedName",
														"src": "23147:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "23155:5:15",
														"nodeType": "YulTypedName",
														"src": "23155:5:15",
														"type": ""
													}
												],
												"src": "23099:141:15"
											},
											{
												"body": {
													"nativeSrc": "23322:273:15",
													"nodeType": "YulBlock",
													"src": "23322:273:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "23368:83:15",
																"nodeType": "YulBlock",
																"src": "23368:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "23370:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "23370:77:15"
																			},
																			"nativeSrc": "23370:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "23370:79:15"
																		},
																		"nativeSrc": "23370:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "23370:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23343:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "23343:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23352:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23352:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23339:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23339:3:15"
																		},
																		"nativeSrc": "23339:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23339:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23364:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23364:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "23335:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23335:3:15"
																},
																"nativeSrc": "23335:32:15",
																"nodeType": "YulFunctionCall",
																"src": "23335:32:15"
															},
															"nativeSrc": "23332:119:15",
															"nodeType": "YulIf",
															"src": "23332:119:15"
														},
														{
															"nativeSrc": "23461:127:15",
															"nodeType": "YulBlock",
															"src": "23461:127:15",
															"statements": [
																{
																	"nativeSrc": "23476:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "23476:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23490:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23490:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "23480:6:15",
																			"nodeType": "YulTypedName",
																			"src": "23480:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "23505:73:15",
																	"nodeType": "YulAssignment",
																	"src": "23505:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "23550:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "23550:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "23561:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "23561:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23546:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "23546:3:15"
																				},
																				"nativeSrc": "23546:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "23546:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23570:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "23570:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "23515:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "23515:30:15"
																		},
																		"nativeSrc": "23515:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23515:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "23505:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "23505:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "23246:349:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23292:9:15",
														"nodeType": "YulTypedName",
														"src": "23292:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "23303:7:15",
														"nodeType": "YulTypedName",
														"src": "23303:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "23315:6:15",
														"nodeType": "YulTypedName",
														"src": "23315:6:15",
														"type": ""
													}
												],
												"src": "23246:349:15"
											},
											{
												"body": {
													"nativeSrc": "23629:152:15",
													"nodeType": "YulBlock",
													"src": "23629:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23646:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23646:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23649:77:15",
																		"nodeType": "YulLiteral",
																		"src": "23649:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23639:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23639:6:15"
																},
																"nativeSrc": "23639:88:15",
																"nodeType": "YulFunctionCall",
																"src": "23639:88:15"
															},
															"nativeSrc": "23639:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "23639:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23743:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23743:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23746:4:15",
																		"nodeType": "YulLiteral",
																		"src": "23746:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23736:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23736:6:15"
																},
																"nativeSrc": "23736:15:15",
																"nodeType": "YulFunctionCall",
																"src": "23736:15:15"
															},
															"nativeSrc": "23736:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "23736:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23767:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23767:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23770:4:15",
																		"nodeType": "YulLiteral",
																		"src": "23770:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23760:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23760:6:15"
																},
																"nativeSrc": "23760:15:15",
																"nodeType": "YulFunctionCall",
																"src": "23760:15:15"
															},
															"nativeSrc": "23760:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "23760:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "23601:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "23601:180:15"
											},
											{
												"body": {
													"nativeSrc": "23913:206:15",
													"nodeType": "YulBlock",
													"src": "23913:206:15",
													"statements": [
														{
															"nativeSrc": "23923:26:15",
															"nodeType": "YulAssignment",
															"src": "23923:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23935:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23935:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23946:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23946:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23931:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23931:3:15"
																},
																"nativeSrc": "23931:18:15",
																"nodeType": "YulFunctionCall",
																"src": "23931:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23923:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23923:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24003:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24003:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24016:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24016:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24027:1:15",
																				"nodeType": "YulLiteral",
																				"src": "24027:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24012:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24012:3:15"
																		},
																		"nativeSrc": "24012:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24012:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23959:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "23959:43:15"
																},
																"nativeSrc": "23959:71:15",
																"nodeType": "YulFunctionCall",
																"src": "23959:71:15"
															},
															"nativeSrc": "23959:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "23959:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24084:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24084:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24097:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "24097:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24108:2:15",
																				"nodeType": "YulLiteral",
																				"src": "24108:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24093:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24093:3:15"
																		},
																		"nativeSrc": "24093:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24093:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24040:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "24040:43:15"
																},
																"nativeSrc": "24040:72:15",
																"nodeType": "YulFunctionCall",
																"src": "24040:72:15"
															},
															"nativeSrc": "24040:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "24040:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23787:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23877:9:15",
														"nodeType": "YulTypedName",
														"src": "23877:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23889:6:15",
														"nodeType": "YulTypedName",
														"src": "23889:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23897:6:15",
														"nodeType": "YulTypedName",
														"src": "23897:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23908:4:15",
														"nodeType": "YulTypedName",
														"src": "23908:4:15",
														"type": ""
													}
												],
												"src": "23787:332:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$362_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$362_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$362_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$362__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$362_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT with this ID already exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner of this NF\")\n\n        mstore(add(memPtr, 32), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token Amount transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value4, value3, value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value4,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_bytes32__to_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061013f575f3560e01c8063863b3894116100b5578063a22cb4651161006e578063a22cb4651461044d578063b88d4fde14610475578063b8fcf9371461049d578063c87b56dd146104c7578063e985e9c514610503578063f2fde38b1461053f5761013f565b8063863b38941461033b5780638da5cb5b146103655780638f3481c01461038f57806394407465146103bf57806394ab67fe146103fb57806395d89b41146104235761013f565b8063374189721161010757806337418972146102355780633c168eab1461025d57806342842e0e146102855780636352211e146102ad57806370a08231146102e9578063715018a6146103255761013f565b806301ffc9a71461014357806306fdde031461017f578063081812fc146101a9578063095ea7b3146101e557806323b872dd1461020d575b5f80fd5b34801561014e575f80fd5b5061016960048036038101906101649190611fe9565b610567565b604051610176919061202e565b60405180910390f35b34801561018a575f80fd5b50610193610648565b6040516101a091906120d1565b60405180910390f35b3480156101b4575f80fd5b506101cf60048036038101906101ca9190612124565b6106d7565b6040516101dc919061218e565b60405180910390f35b3480156101f0575f80fd5b5061020b600480360381019061020691906121d1565b6106f2565b005b348015610218575f80fd5b50610233600480360381019061022e919061220f565b610708565b005b348015610240575f80fd5b5061025b60048036038101906102569190612292565b610807565b005b348015610268575f80fd5b50610283600480360381019061027e91906121d1565b61083b565b005b348015610290575f80fd5b506102ab60048036038101906102a6919061220f565b6108d8565b005b3480156102b8575f80fd5b506102d360048036038101906102ce9190612124565b6108f7565b6040516102e0919061218e565b60405180910390f35b3480156102f4575f80fd5b5061030f600480360381019061030a91906122bd565b610908565b60405161031c91906122f7565b60405180910390f35b348015610330575f80fd5b506103396109be565b005b348015610346575f80fd5b5061034f6109d1565b60405161035c919061218e565b60405180910390f35b348015610370575f80fd5b506103796109f6565b604051610386919061218e565b60405180910390f35b6103a960048036038101906103a49190612310565b610a1e565b6040516103b6919061236f565b60405180910390f35b3480156103ca575f80fd5b506103e560048036038101906103e09190612292565b610c50565b6040516103f2919061202e565b60405180910390f35b348015610406575f80fd5b50610421600480360381019061041c91906121d1565b610c76565b005b34801561042e575f80fd5b50610437610d6b565b60405161044491906120d1565b60405180910390f35b348015610458575f80fd5b50610473600480360381019061046e91906123b2565b610dfb565b005b348015610480575f80fd5b5061049b6004803603810190610496919061251c565b610e11565b005b3480156104a8575f80fd5b506104b1610e2e565b6040516104be91906125f7565b60405180910390f35b3480156104d2575f80fd5b506104ed60048036038101906104e89190612124565b610e53565b6040516104fa91906120d1565b60405180910390f35b34801561050e575f80fd5b5061052960048036038101906105249190612610565b610eb9565b604051610536919061202e565b60405180910390f35b34801561054a575f80fd5b50610565600480360381019061056091906122bd565b610f47565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061063157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610641575061064082610fcb565b5b9050919050565b60605f80546106569061267b565b80601f01602080910402602001604051908101604052809291908181526020018280546106829061267b565b80156106cd5780601f106106a4576101008083540402835291602001916106cd565b820191905f5260205f20905b8154815290600101906020018083116106b057829003601f168201915b5050505050905090565b5f6106e182611034565b506106eb826110ba565b9050919050565b61070482826106ff6110f3565b6110fa565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610778575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161076f919061218e565b60405180910390fd5b5f61078b83836107866110f3565b61110c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610801578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107f8939291906126ab565b60405180910390fd5b50505050565b61080f611317565b6001600b5f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610843611317565b600a5f8281526020019081526020015f205f9054906101000a900460ff16156108a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108989061272a565b60405180910390fd5b6108ab828261139e565b6001600a5f8381526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b6108f283838360405180602001604052805f815250610e11565b505050565b5f61090182611034565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610979575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610970919061218e565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109c6611317565b6109cf5f611491565b565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f80610a29846108f7565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a90906127b8565b60405180910390fd5b610aa4818686611554565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8683866040518463ffffffff1660e01b8152600401610b02939291906127d6565b6020604051808303815f875af1158015610b1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b42919061281f565b610b81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7890612894565b60405180910390fd5b5f3386868643604051602001610b9b959493929190612917565b6040516020818303038152906040528051906020012090505f600b5f8381526020019081526020015f205f6101000a81548160ff0219169083151502179055508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f9f9ac6bca37e427696541548195017f8d7569c1bdff1ba5b97d815bfb9c11f8c878785604051610c3c93929190612975565b60405180910390a380925050509392505050565b5f600b5f8381526020019081526020015f205f9054906101000a900460ff169050919050565b5f610c80826108f7565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce7906127b8565b60405180910390fd5b610cfb818484611554565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f9f9ac6bca37e427696541548195017f8d7569c1bdff1ba5b97d815bfb9c11f8c845f805f1b604051610d5e939291906129e3565b60405180910390a3505050565b606060018054610d7a9061267b565b80601f0160208091040260200160405190810160405280929190818152602001828054610da69061267b565b8015610df15780601f10610dc857610100808354040283529160200191610df1565b820191905f5260205f20905b815481529060010190602001808311610dd457829003601f168201915b5050505050905090565b610e0d610e066110f3565b83836116bc565b5050565b610e1c848484610708565b610e2884848484611825565b50505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060610e5e82611034565b505f610e686119d7565b90505f815111610e865760405180602001604052805f815250610eb1565b80610e90846119ed565b604051602001610ea1929190612a52565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610f4f611317565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fbf575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fb6919061218e565b60405180910390fd5b610fc881611491565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061103f83611ab7565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110b157826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016110a891906122f7565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6111078383836001611af0565b505050565b5f8061111784611ab7565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461115857611157818486611caf565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146111e3576111975f855f80611af0565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461126257600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61131f6110f3565b73ffffffffffffffffffffffffffffffffffffffff1661133d6109f6565b73ffffffffffffffffffffffffffffffffffffffff161461139c576113606110f3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611393919061218e565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361140e575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611405919061218e565b60405180910390fd5b5f61141a83835f61110c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461148c575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611483919061218e565b60405180910390fd5b505050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115c4575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115bb919061218e565b60405180910390fd5b5f6115d083835f61110c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361164257816040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161163991906122f7565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116b6578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016116ad939291906126ab565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361172c57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611723919061218e565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611818919061202e565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156119d1578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026118686110f3565b8685856040518563ffffffff1660e01b815260040161188a9493929190612ac7565b6020604051808303815f875af19250505080156118c557506040513d601f19601f820116820180604052508101906118c29190612b25565b60015b611946573d805f81146118f3576040519150601f19603f3d011682016040523d82523d5f602084013e6118f8565b606091505b505f81510361193e57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611935919061218e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146119cf57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119c6919061218e565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f60016119fb84611d72565b0190505f8167ffffffffffffffff811115611a1957611a186123f8565b5b6040519080825280601f01601f191660200182016040528015611a4b5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611aac578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611aa157611aa0612b50565b5b0494505f8503611a58575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611b2857505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611c5a575f611b3784611034565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611ba157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611bb45750611bb28184610eb9565b155b15611bf657826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611bed919061218e565b60405180910390fd5b8115611c5857838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611cba838383611ec3565b611d6d575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d2e57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611d2591906122f7565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611d64929190612b7d565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611dce577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611dc457611dc3612b50565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611e0b576d04ee2d6d415b85acef81000000008381611e0157611e00612b50565b5b0492506020810190505b662386f26fc100008310611e3a57662386f26fc100008381611e3057611e2f612b50565b5b0492506010810190505b6305f5e1008310611e63576305f5e1008381611e5957611e58612b50565b5b0492506008810190505b6127108310611e88576127108381611e7e57611e7d612b50565b5b0492506004810190505b60648310611eab5760648381611ea157611ea0612b50565b5b0492506002810190505b600a8310611eba576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611f7a57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611f3b5750611f3a8484610eb9565b5b80611f7957508273ffffffffffffffffffffffffffffffffffffffff16611f61836110ba565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611fc881611f94565b8114611fd2575f80fd5b50565b5f81359050611fe381611fbf565b92915050565b5f60208284031215611ffe57611ffd611f8c565b5b5f61200b84828501611fd5565b91505092915050565b5f8115159050919050565b61202881612014565b82525050565b5f6020820190506120415f83018461201f565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561207e578082015181840152602081019050612063565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6120a382612047565b6120ad8185612051565b93506120bd818560208601612061565b6120c681612089565b840191505092915050565b5f6020820190508181035f8301526120e98184612099565b905092915050565b5f819050919050565b612103816120f1565b811461210d575f80fd5b50565b5f8135905061211e816120fa565b92915050565b5f6020828403121561213957612138611f8c565b5b5f61214684828501612110565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6121788261214f565b9050919050565b6121888161216e565b82525050565b5f6020820190506121a15f83018461217f565b92915050565b6121b08161216e565b81146121ba575f80fd5b50565b5f813590506121cb816121a7565b92915050565b5f80604083850312156121e7576121e6611f8c565b5b5f6121f4858286016121bd565b925050602061220585828601612110565b9150509250929050565b5f805f6060848603121561222657612225611f8c565b5b5f612233868287016121bd565b9350506020612244868287016121bd565b925050604061225586828701612110565b9150509250925092565b5f819050919050565b6122718161225f565b811461227b575f80fd5b50565b5f8135905061228c81612268565b92915050565b5f602082840312156122a7576122a6611f8c565b5b5f6122b48482850161227e565b91505092915050565b5f602082840312156122d2576122d1611f8c565b5b5f6122df848285016121bd565b91505092915050565b6122f1816120f1565b82525050565b5f60208201905061230a5f8301846122e8565b92915050565b5f805f6060848603121561232757612326611f8c565b5b5f612334868287016121bd565b935050602061234586828701612110565b925050604061235686828701612110565b9150509250925092565b6123698161225f565b82525050565b5f6020820190506123825f830184612360565b92915050565b61239181612014565b811461239b575f80fd5b50565b5f813590506123ac81612388565b92915050565b5f80604083850312156123c8576123c7611f8c565b5b5f6123d5858286016121bd565b92505060206123e68582860161239e565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61242e82612089565b810181811067ffffffffffffffff8211171561244d5761244c6123f8565b5b80604052505050565b5f61245f611f83565b905061246b8282612425565b919050565b5f67ffffffffffffffff82111561248a576124896123f8565b5b61249382612089565b9050602081019050919050565b828183375f83830152505050565b5f6124c06124bb84612470565b612456565b9050828152602081018484840111156124dc576124db6123f4565b5b6124e78482856124a0565b509392505050565b5f82601f830112612503576125026123f0565b5b81356125138482602086016124ae565b91505092915050565b5f805f806080858703121561253457612533611f8c565b5b5f612541878288016121bd565b9450506020612552878288016121bd565b935050604061256387828801612110565b925050606085013567ffffffffffffffff81111561258457612583611f90565b5b612590878288016124ef565b91505092959194509250565b5f819050919050565b5f6125bf6125ba6125b58461214f565b61259c565b61214f565b9050919050565b5f6125d0826125a5565b9050919050565b5f6125e1826125c6565b9050919050565b6125f1816125d7565b82525050565b5f60208201905061260a5f8301846125e8565b92915050565b5f806040838503121561262657612625611f8c565b5b5f612633858286016121bd565b9250506020612644858286016121bd565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061269257607f821691505b6020821081036126a5576126a461264e565b5b50919050565b5f6060820190506126be5f83018661217f565b6126cb60208301856122e8565b6126d8604083018461217f565b949350505050565b7f4e46542077697468207468697320494420616c726561647920657869737473005f82015250565b5f612714601f83612051565b915061271f826126e0565b602082019050919050565b5f6020820190508181035f83015261274181612708565b9050919050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686973204e465f8201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6127a2602183612051565b91506127ad82612748565b604082019050919050565b5f6020820190508181035f8301526127cf81612796565b9050919050565b5f6060820190506127e95f83018661217f565b6127f6602083018561217f565b61280360408301846122e8565b949350505050565b5f8151905061281981612388565b92915050565b5f6020828403121561283457612833611f8c565b5b5f6128418482850161280b565b91505092915050565b7f546f6b656e20416d6f756e74207472616e73666572206661696c6564000000005f82015250565b5f61287e601c83612051565b91506128898261284a565b602082019050919050565b5f6020820190508181035f8301526128ab81612872565b9050919050565b5f8160601b9050919050565b5f6128c8826128b2565b9050919050565b5f6128d9826128be565b9050919050565b6128f16128ec8261216e565b6128cf565b82525050565b5f819050919050565b61291161290c826120f1565b6128f7565b82525050565b5f61292282886128e0565b60148201915061293282876128e0565b6014820191506129428286612900565b6020820191506129528285612900565b6020820191506129628284612900565b6020820191508190509695505050505050565b5f6060820190506129885f8301866122e8565b61299560208301856122e8565b6129a26040830184612360565b949350505050565b5f819050919050565b5f6129cd6129c86129c3846129aa565b61259c565b6120f1565b9050919050565b6129dd816129b3565b82525050565b5f6060820190506129f65f8301866122e8565b612a0360208301856129d4565b612a106040830184612360565b949350505050565b5f81905092915050565b5f612a2c82612047565b612a368185612a18565b9350612a46818560208601612061565b80840191505092915050565b5f612a5d8285612a22565b9150612a698284612a22565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f612a9982612a75565b612aa38185612a7f565b9350612ab3818560208601612061565b612abc81612089565b840191505092915050565b5f608082019050612ada5f83018761217f565b612ae7602083018661217f565b612af460408301856122e8565b8181036060830152612b068184612a8f565b905095945050505050565b5f81519050612b1f81611fbf565b92915050565b5f60208284031215612b3a57612b39611f8c565b5b5f612b4784828501612b11565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050612b905f83018561217f565b612b9d60208301846122e8565b939250505056fea26469706673582212203214b1311ee203f100044891666930a905352eda97e01f39fd84b5c43873793264736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x863B3894 GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x53F JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x863B3894 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x8F3481C0 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x94407465 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x94AB67FE EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x423 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x37418972 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x37418972 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x3C168EAB EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x325 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1FE9 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x220F JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x9BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x379 PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x2310 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x236F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x2292 JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x437 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x458 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x23B2 JUMP JUMPDEST PUSH2 0xDFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x251C JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH2 0xE2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x565 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0xF47 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x631 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x641 JUMPI POP PUSH2 0x640 DUP3 PUSH2 0xFCB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x656 SWAP1 PUSH2 0x267B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x682 SWAP1 PUSH2 0x267B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x6E1 DUP3 PUSH2 0x1034 JUMP JUMPDEST POP PUSH2 0x6EB DUP3 PUSH2 0x10BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x704 DUP3 DUP3 PUSH2 0x6FF PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x10FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x778 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x78B DUP4 DUP4 PUSH2 0x786 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x110C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x801 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x80F PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x843 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP1 PUSH2 0x272A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AB DUP3 DUP3 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x8F2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE11 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x901 DUP3 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x979 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x970 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x9CF PUSH0 PUSH2 0x1491 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA29 DUP5 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA90 SWAP1 PUSH2 0x27B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA4 DUP2 DUP7 DUP7 PUSH2 0x1554 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP4 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x281F JUMP JUMPDEST PUSH2 0xB81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP1 PUSH2 0x2894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER DUP7 DUP7 DUP7 NUMBER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB9B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9F9AC6BCA37E427696541548195017F8D7569C1BDFF1BA5B97D815BFB9C11F8C DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC3C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC80 DUP3 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE7 SWAP1 PUSH2 0x27B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFB DUP2 DUP5 DUP5 PUSH2 0x1554 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9F9AC6BCA37E427696541548195017F8D7569C1BDFF1BA5B97D815BFB9C11F8C DUP5 PUSH0 DUP1 PUSH0 SHL PUSH1 0x40 MLOAD PUSH2 0xD5E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xD7A SWAP1 PUSH2 0x267B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDA6 SWAP1 PUSH2 0x267B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDF1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDC8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDF1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDD4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE0D PUSH2 0xE06 PUSH2 0x10F3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x16BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE1C DUP5 DUP5 DUP5 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xE28 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1825 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE5E DUP3 PUSH2 0x1034 JUMP JUMPDEST POP PUSH0 PUSH2 0xE68 PUSH2 0x19D7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xEB1 JUMP JUMPDEST DUP1 PUSH2 0xE90 DUP5 PUSH2 0x19ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEA1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF4F PUSH2 0x1317 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC8 DUP2 PUSH2 0x1491 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x103F DUP4 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A8 SWAP2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1107 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1AF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1117 DUP5 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1158 JUMPI PUSH2 0x1157 DUP2 DUP5 DUP7 PUSH2 0x1CAF JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11E3 JUMPI PUSH2 0x1197 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1262 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x131F PUSH2 0x10F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x133D PUSH2 0x9F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x139C JUMPI PUSH2 0x1360 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1393 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1405 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x141A DUP4 DUP4 PUSH0 PUSH2 0x110C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15C4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BB SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x15D0 DUP4 DUP4 PUSH0 PUSH2 0x110C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1642 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1639 SWAP2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16B6 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x172C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1723 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1818 SWAP2 SWAP1 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x19D1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1868 PUSH2 0x10F3 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18C5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18C2 SWAP2 SWAP1 PUSH2 0x2B25 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1946 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x18F3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x193E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1935 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x19CF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C6 SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x19FB DUP5 PUSH2 0x1D72 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x23F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A4B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1AAC JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1AA1 JUMPI PUSH2 0x1AA0 PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1A58 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1B28 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1C5A JUMPI PUSH0 PUSH2 0x1B37 DUP5 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BA1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BB4 JUMPI POP PUSH2 0x1BB2 DUP2 DUP5 PUSH2 0xEB9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1BF6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BED SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1C58 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CBA DUP4 DUP4 DUP4 PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x1D6D JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D2E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D25 SWAP2 SWAP1 PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D64 SWAP3 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1DCE JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1DC4 JUMPI PUSH2 0x1DC3 PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1E0B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1E01 JUMPI PUSH2 0x1E00 PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1E3A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1E30 JUMPI PUSH2 0x1E2F PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1E63 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1E59 JUMPI PUSH2 0x1E58 PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1E88 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1EAB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1EA1 JUMPI PUSH2 0x1EA0 PUSH2 0x2B50 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1EBA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F7A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1F3B JUMPI POP PUSH2 0x1F3A DUP5 DUP5 PUSH2 0xEB9 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1F79 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F61 DUP4 PUSH2 0x10BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC8 DUP2 PUSH2 0x1F94 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FE3 DUP2 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FFE JUMPI PUSH2 0x1FFD PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x200B DUP5 DUP3 DUP6 ADD PUSH2 0x1FD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2028 DUP2 PUSH2 0x2014 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2041 PUSH0 DUP4 ADD DUP5 PUSH2 0x201F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x207E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2063 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20A3 DUP3 PUSH2 0x2047 JUMP JUMPDEST PUSH2 0x20AD DUP2 DUP6 PUSH2 0x2051 JUMP JUMPDEST SWAP4 POP PUSH2 0x20BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x20C6 DUP2 PUSH2 0x2089 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20E9 DUP2 DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2103 DUP2 PUSH2 0x20F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x210D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x211E DUP2 PUSH2 0x20FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2139 JUMPI PUSH2 0x2138 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2146 DUP5 DUP3 DUP6 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2178 DUP3 PUSH2 0x214F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2188 DUP2 PUSH2 0x216E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x217F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21B0 DUP2 PUSH2 0x216E JUMP JUMPDEST DUP2 EQ PUSH2 0x21BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21CB DUP2 PUSH2 0x21A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21E7 JUMPI PUSH2 0x21E6 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21F4 DUP6 DUP3 DUP7 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2205 DUP6 DUP3 DUP7 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2226 JUMPI PUSH2 0x2225 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2233 DUP7 DUP3 DUP8 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2244 DUP7 DUP3 DUP8 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2255 DUP7 DUP3 DUP8 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2271 DUP2 PUSH2 0x225F JUMP JUMPDEST DUP2 EQ PUSH2 0x227B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228C DUP2 PUSH2 0x2268 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A7 JUMPI PUSH2 0x22A6 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22B4 DUP5 DUP3 DUP6 ADD PUSH2 0x227E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D2 JUMPI PUSH2 0x22D1 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22DF DUP5 DUP3 DUP6 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F1 DUP2 PUSH2 0x20F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x230A PUSH0 DUP4 ADD DUP5 PUSH2 0x22E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2327 JUMPI PUSH2 0x2326 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2334 DUP7 DUP3 DUP8 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2345 DUP7 DUP3 DUP8 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2356 DUP7 DUP3 DUP8 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2369 DUP2 PUSH2 0x225F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2382 PUSH0 DUP4 ADD DUP5 PUSH2 0x2360 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2391 DUP2 PUSH2 0x2014 JUMP JUMPDEST DUP2 EQ PUSH2 0x239B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AC DUP2 PUSH2 0x2388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23C8 JUMPI PUSH2 0x23C7 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D5 DUP6 DUP3 DUP7 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23E6 DUP6 DUP3 DUP7 ADD PUSH2 0x239E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x242E DUP3 PUSH2 0x2089 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x244D JUMPI PUSH2 0x244C PUSH2 0x23F8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x245F PUSH2 0x1F83 JUMP JUMPDEST SWAP1 POP PUSH2 0x246B DUP3 DUP3 PUSH2 0x2425 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x248A JUMPI PUSH2 0x2489 PUSH2 0x23F8 JUMP JUMPDEST JUMPDEST PUSH2 0x2493 DUP3 PUSH2 0x2089 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24C0 PUSH2 0x24BB DUP5 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x2456 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x24DC JUMPI PUSH2 0x24DB PUSH2 0x23F4 JUMP JUMPDEST JUMPDEST PUSH2 0x24E7 DUP5 DUP3 DUP6 PUSH2 0x24A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2503 JUMPI PUSH2 0x2502 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2513 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2534 JUMPI PUSH2 0x2533 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2541 DUP8 DUP3 DUP9 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2552 DUP8 DUP3 DUP9 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2563 DUP8 DUP3 DUP9 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2584 JUMPI PUSH2 0x2583 PUSH2 0x1F90 JUMP JUMPDEST JUMPDEST PUSH2 0x2590 DUP8 DUP3 DUP9 ADD PUSH2 0x24EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25BF PUSH2 0x25BA PUSH2 0x25B5 DUP5 PUSH2 0x214F JUMP JUMPDEST PUSH2 0x259C JUMP JUMPDEST PUSH2 0x214F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25D0 DUP3 PUSH2 0x25A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25E1 DUP3 PUSH2 0x25C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F1 DUP2 PUSH2 0x25D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x260A PUSH0 DUP4 ADD DUP5 PUSH2 0x25E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2626 JUMPI PUSH2 0x2625 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2633 DUP6 DUP3 DUP7 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2644 DUP6 DUP3 DUP7 ADD PUSH2 0x21BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2692 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x26A5 JUMPI PUSH2 0x26A4 PUSH2 0x264E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26BE PUSH0 DUP4 ADD DUP7 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x26CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x26D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x217F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E46542077697468207468697320494420616C72656164792065786973747300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2714 PUSH1 0x1F DUP4 PUSH2 0x2051 JUMP JUMPDEST SWAP2 POP PUSH2 0x271F DUP3 PUSH2 0x26E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2741 DUP2 PUSH2 0x2708 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973204E46 PUSH0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27A2 PUSH1 0x21 DUP4 PUSH2 0x2051 JUMP JUMPDEST SWAP2 POP PUSH2 0x27AD DUP3 PUSH2 0x2748 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27CF DUP2 PUSH2 0x2796 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27E9 PUSH0 DUP4 ADD DUP7 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x27F6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x2803 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22E8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2819 DUP2 PUSH2 0x2388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2834 JUMPI PUSH2 0x2833 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2841 DUP5 DUP3 DUP6 ADD PUSH2 0x280B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20416D6F756E74207472616E73666572206661696C656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x287E PUSH1 0x1C DUP4 PUSH2 0x2051 JUMP JUMPDEST SWAP2 POP PUSH2 0x2889 DUP3 PUSH2 0x284A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28AB DUP2 PUSH2 0x2872 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28C8 DUP3 PUSH2 0x28B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28D9 DUP3 PUSH2 0x28BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F1 PUSH2 0x28EC DUP3 PUSH2 0x216E JUMP JUMPDEST PUSH2 0x28CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2911 PUSH2 0x290C DUP3 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0x28F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2922 DUP3 DUP9 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x2932 DUP3 DUP8 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x2942 DUP3 DUP7 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2952 DUP3 DUP6 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2962 DUP3 DUP5 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2988 PUSH0 DUP4 ADD DUP7 PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x2995 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x29A2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2360 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29CD PUSH2 0x29C8 PUSH2 0x29C3 DUP5 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x259C JUMP JUMPDEST PUSH2 0x20F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29DD DUP2 PUSH2 0x29B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29F6 PUSH0 DUP4 ADD DUP7 PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x2A03 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x29D4 JUMP JUMPDEST PUSH2 0x2A10 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2360 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A2C DUP3 PUSH2 0x2047 JUMP JUMPDEST PUSH2 0x2A36 DUP2 DUP6 PUSH2 0x2A18 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2061 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A5D DUP3 DUP6 PUSH2 0x2A22 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A69 DUP3 DUP5 PUSH2 0x2A22 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A99 DUP3 PUSH2 0x2A75 JUMP JUMPDEST PUSH2 0x2AA3 DUP2 DUP6 PUSH2 0x2A7F JUMP JUMPDEST SWAP4 POP PUSH2 0x2AB3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x2ABC DUP2 PUSH2 0x2089 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2ADA PUSH0 DUP4 ADD DUP8 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x2AE7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x2AF4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22E8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2B06 DUP2 DUP5 PUSH2 0x2A8F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B1F DUP2 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B3A JUMPI PUSH2 0x2B39 PUSH2 0x1F8C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B47 DUP5 DUP3 DUP6 ADD PUSH2 0x2B11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B90 PUSH0 DUP4 ADD DUP6 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x2B9D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN EQ 0xB1 BALANCE 0x1E 0xE2 SUB CALL STOP DIV BASEFEE SWAP2 PUSH7 0x6930A905352EDA SWAP8 0xE0 0x1F CODECOPY REVERT DUP5 0xB5 0xC4 CODESIZE PUSH20 0x793264736F6C6343000815003300000000000000 ",
							"sourceMap": "288:3286:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3448:123:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1208:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;501:26:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2009:1035:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3140:211;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1549:353;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2518:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;430:21:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2677:255:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1561:300:3;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;3448:123:14:-;1531:13:0;:11;:13::i;:::-;3559:4:14::1;3526:22;:30;3549:6;3526:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;3448:123:::0;:::o;1208:214::-;1531:13:0;:11;:13::i;:::-;1291:10:14::1;:19;1302:7;1291:19;;;;;;;;;;;;;;;;;;;;;1290:20;1282:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:18;1365:2;1369:7;1359:5;:18::i;:::-;1410:4;1388:10;:19;1399:7;1388:19;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1208:214:::0;;:::o;4787:132:3:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;501:26:14:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2009:1035:14:-;2113:7;2208:13;2224:16;2232:7;2224;:16::i;:::-;2208:32;;2268:10;2259:19;;:5;:19;;;2251:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2375:29;2385:5;2392:2;2396:7;2375:9;:29::i;:::-;2500:7;;;;;;;;;;;:20;;;2521:2;2525:5;2532:11;2500:44;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2492:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2639:14;2683:10;2695:2;2699:7;2708:11;2721:12;2666:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2656:79;;;;;;2639:96;;2834:5;2801:22;:30;2824:6;2801:30;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2943:2;2921:55;;2936:5;2921:55;;;2947:7;2956:11;2969:6;2921:55;;;;;;;;:::i;:::-;;;;;;;;2996:6;2989:13;;;;2009:1035;;;;;:::o;3140:211::-;3207:4;3313:22;:30;3336:6;3313:30;;;;;;;;;;;;;;;;;;;;;3306:37;;3140:211;;;:::o;1549:353::-;1617:13;1633:16;1641:7;1633;:16::i;:::-;1617:32;;1677:10;1668:19;;:5;:19;;;1660:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1736:29;1746:5;1753:2;1757:7;1736:9;:29::i;:::-;1867:2;1845:49;;1860:5;1845:49;;;1871:7;1880:1;1891;1883:10;;1845:49;;;;;;;;:::i;:::-;;;;;;;;1606:296;1549:353;;:::o;2518:93:3:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;430:21:14:-;;;;;;;;;;;;;:::o;2677:255:3:-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;3928:153::-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:3:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;14418:120:3:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;9955:327:3:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;12013:460:3:-;12112:1;12098:16;;:2;:16;;;12094:87;;12167:1;12137:33;;;;;;;;;;;:::i;:::-;;;;;;;;12094:87;12190:21;12214:32;12222:2;12226:7;12243:1;12214:7;:32::i;:::-;12190:56;;12285:1;12260:27;;:13;:27;;;12256:211;;12333:7;12310:31;;;;;;;;;;;:::i;:::-;;;;;;;;12256:211;12379:4;12362:21;;:13;:21;;;12358:109;;12427:4;12433:7;12442:13;12406:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;12358:109;12084:389;12013:460;;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:9:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:3:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;12214:916:12:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:3:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:77::-;5552:7;5581:5;5570:16;;5515:77;;;:::o;5598:122::-;5671:24;5689:5;5671:24;:::i;:::-;5664:5;5661:35;5651:63;;5710:1;5707;5700:12;5651:63;5598:122;:::o;5726:139::-;5772:5;5810:6;5797:20;5788:29;;5826:33;5853:5;5826:33;:::i;:::-;5726:139;;;;:::o;5871:329::-;5930:6;5979:2;5967:9;5958:7;5954:23;5950:32;5947:119;;;5985:79;;:::i;:::-;5947:119;6105:1;6130:53;6175:7;6166:6;6155:9;6151:22;6130:53;:::i;:::-;6120:63;;6076:117;5871:329;;;;:::o;6206:::-;6265:6;6314:2;6302:9;6293:7;6289:23;6285:32;6282:119;;;6320:79;;:::i;:::-;6282:119;6440:1;6465:53;6510:7;6501:6;6490:9;6486:22;6465:53;:::i;:::-;6455:63;;6411:117;6206:329;;;;:::o;6541:118::-;6628:24;6646:5;6628:24;:::i;:::-;6623:3;6616:37;6541:118;;:::o;6665:222::-;6758:4;6796:2;6785:9;6781:18;6773:26;;6809:71;6877:1;6866:9;6862:17;6853:6;6809:71;:::i;:::-;6665:222;;;;:::o;6893:619::-;6970:6;6978;6986;7035:2;7023:9;7014:7;7010:23;7006:32;7003:119;;;7041:79;;:::i;:::-;7003:119;7161:1;7186:53;7231:7;7222:6;7211:9;7207:22;7186:53;:::i;:::-;7176:63;;7132:117;7288:2;7314:53;7359:7;7350:6;7339:9;7335:22;7314:53;:::i;:::-;7304:63;;7259:118;7416:2;7442:53;7487:7;7478:6;7467:9;7463:22;7442:53;:::i;:::-;7432:63;;7387:118;6893:619;;;;;:::o;7518:118::-;7605:24;7623:5;7605:24;:::i;:::-;7600:3;7593:37;7518:118;;:::o;7642:222::-;7735:4;7773:2;7762:9;7758:18;7750:26;;7786:71;7854:1;7843:9;7839:17;7830:6;7786:71;:::i;:::-;7642:222;;;;:::o;7870:116::-;7940:21;7955:5;7940:21;:::i;:::-;7933:5;7930:32;7920:60;;7976:1;7973;7966:12;7920:60;7870:116;:::o;7992:133::-;8035:5;8073:6;8060:20;8051:29;;8089:30;8113:5;8089:30;:::i;:::-;7992:133;;;;:::o;8131:468::-;8196:6;8204;8253:2;8241:9;8232:7;8228:23;8224:32;8221:119;;;8259:79;;:::i;:::-;8221:119;8379:1;8404:53;8449:7;8440:6;8429:9;8425:22;8404:53;:::i;:::-;8394:63;;8350:117;8506:2;8532:50;8574:7;8565:6;8554:9;8550:22;8532:50;:::i;:::-;8522:60;;8477:115;8131:468;;;;;:::o;8605:117::-;8714:1;8711;8704:12;8728:117;8837:1;8834;8827:12;8851:180;8899:77;8896:1;8889:88;8996:4;8993:1;8986:15;9020:4;9017:1;9010:15;9037:281;9120:27;9142:4;9120:27;:::i;:::-;9112:6;9108:40;9250:6;9238:10;9235:22;9214:18;9202:10;9199:34;9196:62;9193:88;;;9261:18;;:::i;:::-;9193:88;9301:10;9297:2;9290:22;9080:238;9037:281;;:::o;9324:129::-;9358:6;9385:20;;:::i;:::-;9375:30;;9414:33;9442:4;9434:6;9414:33;:::i;:::-;9324:129;;;:::o;9459:307::-;9520:4;9610:18;9602:6;9599:30;9596:56;;;9632:18;;:::i;:::-;9596:56;9670:29;9692:6;9670:29;:::i;:::-;9662:37;;9754:4;9748;9744:15;9736:23;;9459:307;;;:::o;9772:146::-;9869:6;9864:3;9859;9846:30;9910:1;9901:6;9896:3;9892:16;9885:27;9772:146;;;:::o;9924:423::-;10001:5;10026:65;10042:48;10083:6;10042:48;:::i;:::-;10026:65;:::i;:::-;10017:74;;10114:6;10107:5;10100:21;10152:4;10145:5;10141:16;10190:3;10181:6;10176:3;10172:16;10169:25;10166:112;;;10197:79;;:::i;:::-;10166:112;10287:54;10334:6;10329:3;10324;10287:54;:::i;:::-;10007:340;9924:423;;;;;:::o;10366:338::-;10421:5;10470:3;10463:4;10455:6;10451:17;10447:27;10437:122;;10478:79;;:::i;:::-;10437:122;10595:6;10582:20;10620:78;10694:3;10686:6;10679:4;10671:6;10667:17;10620:78;:::i;:::-;10611:87;;10427:277;10366:338;;;;:::o;10710:943::-;10805:6;10813;10821;10829;10878:3;10866:9;10857:7;10853:23;10849:33;10846:120;;;10885:79;;:::i;:::-;10846:120;11005:1;11030:53;11075:7;11066:6;11055:9;11051:22;11030:53;:::i;:::-;11020:63;;10976:117;11132:2;11158:53;11203:7;11194:6;11183:9;11179:22;11158:53;:::i;:::-;11148:63;;11103:118;11260:2;11286:53;11331:7;11322:6;11311:9;11307:22;11286:53;:::i;:::-;11276:63;;11231:118;11416:2;11405:9;11401:18;11388:32;11447:18;11439:6;11436:30;11433:117;;;11469:79;;:::i;:::-;11433:117;11574:62;11628:7;11619:6;11608:9;11604:22;11574:62;:::i;:::-;11564:72;;11359:287;10710:943;;;;;;;:::o;11659:60::-;11687:3;11708:5;11701:12;;11659:60;;;:::o;11725:142::-;11775:9;11808:53;11826:34;11835:24;11853:5;11835:24;:::i;:::-;11826:34;:::i;:::-;11808:53;:::i;:::-;11795:66;;11725:142;;;:::o;11873:126::-;11923:9;11956:37;11987:5;11956:37;:::i;:::-;11943:50;;11873:126;;;:::o;12005:140::-;12069:9;12102:37;12133:5;12102:37;:::i;:::-;12089:50;;12005:140;;;:::o;12151:159::-;12252:51;12297:5;12252:51;:::i;:::-;12247:3;12240:64;12151:159;;:::o;12316:250::-;12423:4;12461:2;12450:9;12446:18;12438:26;;12474:85;12556:1;12545:9;12541:17;12532:6;12474:85;:::i;:::-;12316:250;;;;:::o;12572:474::-;12640:6;12648;12697:2;12685:9;12676:7;12672:23;12668:32;12665:119;;;12703:79;;:::i;:::-;12665:119;12823:1;12848:53;12893:7;12884:6;12873:9;12869:22;12848:53;:::i;:::-;12838:63;;12794:117;12950:2;12976:53;13021:7;13012:6;13001:9;12997:22;12976:53;:::i;:::-;12966:63;;12921:118;12572:474;;;;;:::o;13052:180::-;13100:77;13097:1;13090:88;13197:4;13194:1;13187:15;13221:4;13218:1;13211:15;13238:320;13282:6;13319:1;13313:4;13309:12;13299:22;;13366:1;13360:4;13356:12;13387:18;13377:81;;13443:4;13435:6;13431:17;13421:27;;13377:81;13505:2;13497:6;13494:14;13474:18;13471:38;13468:84;;13524:18;;:::i;:::-;13468:84;13289:269;13238:320;;;:::o;13564:442::-;13713:4;13751:2;13740:9;13736:18;13728:26;;13764:71;13832:1;13821:9;13817:17;13808:6;13764:71;:::i;:::-;13845:72;13913:2;13902:9;13898:18;13889:6;13845:72;:::i;:::-;13927;13995:2;13984:9;13980:18;13971:6;13927:72;:::i;:::-;13564:442;;;;;;:::o;14012:181::-;14152:33;14148:1;14140:6;14136:14;14129:57;14012:181;:::o;14199:366::-;14341:3;14362:67;14426:2;14421:3;14362:67;:::i;:::-;14355:74;;14438:93;14527:3;14438:93;:::i;:::-;14556:2;14551:3;14547:12;14540:19;;14199:366;;;:::o;14571:419::-;14737:4;14775:2;14764:9;14760:18;14752:26;;14824:9;14818:4;14814:20;14810:1;14799:9;14795:17;14788:47;14852:131;14978:4;14852:131;:::i;:::-;14844:139;;14571:419;;;:::o;14996:220::-;15136:34;15132:1;15124:6;15120:14;15113:58;15205:3;15200:2;15192:6;15188:15;15181:28;14996:220;:::o;15222:366::-;15364:3;15385:67;15449:2;15444:3;15385:67;:::i;:::-;15378:74;;15461:93;15550:3;15461:93;:::i;:::-;15579:2;15574:3;15570:12;15563:19;;15222:366;;;:::o;15594:419::-;15760:4;15798:2;15787:9;15783:18;15775:26;;15847:9;15841:4;15837:20;15833:1;15822:9;15818:17;15811:47;15875:131;16001:4;15875:131;:::i;:::-;15867:139;;15594:419;;;:::o;16019:442::-;16168:4;16206:2;16195:9;16191:18;16183:26;;16219:71;16287:1;16276:9;16272:17;16263:6;16219:71;:::i;:::-;16300:72;16368:2;16357:9;16353:18;16344:6;16300:72;:::i;:::-;16382;16450:2;16439:9;16435:18;16426:6;16382:72;:::i;:::-;16019:442;;;;;;:::o;16467:137::-;16521:5;16552:6;16546:13;16537:22;;16568:30;16592:5;16568:30;:::i;:::-;16467:137;;;;:::o;16610:345::-;16677:6;16726:2;16714:9;16705:7;16701:23;16697:32;16694:119;;;16732:79;;:::i;:::-;16694:119;16852:1;16877:61;16930:7;16921:6;16910:9;16906:22;16877:61;:::i;:::-;16867:71;;16823:125;16610:345;;;;:::o;16961:178::-;17101:30;17097:1;17089:6;17085:14;17078:54;16961:178;:::o;17145:366::-;17287:3;17308:67;17372:2;17367:3;17308:67;:::i;:::-;17301:74;;17384:93;17473:3;17384:93;:::i;:::-;17502:2;17497:3;17493:12;17486:19;;17145:366;;;:::o;17517:419::-;17683:4;17721:2;17710:9;17706:18;17698:26;;17770:9;17764:4;17760:20;17756:1;17745:9;17741:17;17734:47;17798:131;17924:4;17798:131;:::i;:::-;17790:139;;17517:419;;;:::o;17942:94::-;17975:8;18023:5;18019:2;18015:14;17994:35;;17942:94;;;:::o;18042:::-;18081:7;18110:20;18124:5;18110:20;:::i;:::-;18099:31;;18042:94;;;:::o;18142:100::-;18181:7;18210:26;18230:5;18210:26;:::i;:::-;18199:37;;18142:100;;;:::o;18248:157::-;18353:45;18373:24;18391:5;18373:24;:::i;:::-;18353:45;:::i;:::-;18348:3;18341:58;18248:157;;:::o;18411:79::-;18450:7;18479:5;18468:16;;18411:79;;;:::o;18496:157::-;18601:45;18621:24;18639:5;18621:24;:::i;:::-;18601:45;:::i;:::-;18596:3;18589:58;18496:157;;:::o;18659:820::-;18883:3;18898:75;18969:3;18960:6;18898:75;:::i;:::-;18998:2;18993:3;18989:12;18982:19;;19011:75;19082:3;19073:6;19011:75;:::i;:::-;19111:2;19106:3;19102:12;19095:19;;19124:75;19195:3;19186:6;19124:75;:::i;:::-;19224:2;19219:3;19215:12;19208:19;;19237:75;19308:3;19299:6;19237:75;:::i;:::-;19337:2;19332:3;19328:12;19321:19;;19350:75;19421:3;19412:6;19350:75;:::i;:::-;19450:2;19445:3;19441:12;19434:19;;19470:3;19463:10;;18659:820;;;;;;;;:::o;19485:442::-;19634:4;19672:2;19661:9;19657:18;19649:26;;19685:71;19753:1;19742:9;19738:17;19729:6;19685:71;:::i;:::-;19766:72;19834:2;19823:9;19819:18;19810:6;19766:72;:::i;:::-;19848;19916:2;19905:9;19901:18;19892:6;19848:72;:::i;:::-;19485:442;;;;;;:::o;19933:85::-;19978:7;20007:5;19996:16;;19933:85;;;:::o;20024:158::-;20082:9;20115:61;20133:42;20142:32;20168:5;20142:32;:::i;:::-;20133:42;:::i;:::-;20115:61;:::i;:::-;20102:74;;20024:158;;;:::o;20188:147::-;20283:45;20322:5;20283:45;:::i;:::-;20278:3;20271:58;20188:147;;:::o;20341:458::-;20498:4;20536:2;20525:9;20521:18;20513:26;;20549:71;20617:1;20606:9;20602:17;20593:6;20549:71;:::i;:::-;20630:80;20706:2;20695:9;20691:18;20682:6;20630:80;:::i;:::-;20720:72;20788:2;20777:9;20773:18;20764:6;20720:72;:::i;:::-;20341:458;;;;;;:::o;20805:148::-;20907:11;20944:3;20929:18;;20805:148;;;;:::o;20959:390::-;21065:3;21093:39;21126:5;21093:39;:::i;:::-;21148:89;21230:6;21225:3;21148:89;:::i;:::-;21141:96;;21246:65;21304:6;21299:3;21292:4;21285:5;21281:16;21246:65;:::i;:::-;21336:6;21331:3;21327:16;21320:23;;21069:280;20959:390;;;;:::o;21355:435::-;21535:3;21557:95;21648:3;21639:6;21557:95;:::i;:::-;21550:102;;21669:95;21760:3;21751:6;21669:95;:::i;:::-;21662:102;;21781:3;21774:10;;21355:435;;;;;:::o;21796:98::-;21847:6;21881:5;21875:12;21865:22;;21796:98;;;:::o;21900:168::-;21983:11;22017:6;22012:3;22005:19;22057:4;22052:3;22048:14;22033:29;;21900:168;;;;:::o;22074:373::-;22160:3;22188:38;22220:5;22188:38;:::i;:::-;22242:70;22305:6;22300:3;22242:70;:::i;:::-;22235:77;;22321:65;22379:6;22374:3;22367:4;22360:5;22356:16;22321:65;:::i;:::-;22411:29;22433:6;22411:29;:::i;:::-;22406:3;22402:39;22395:46;;22164:283;22074:373;;;;:::o;22453:640::-;22648:4;22686:3;22675:9;22671:19;22663:27;;22700:71;22768:1;22757:9;22753:17;22744:6;22700:71;:::i;:::-;22781:72;22849:2;22838:9;22834:18;22825:6;22781:72;:::i;:::-;22863;22931:2;22920:9;22916:18;22907:6;22863:72;:::i;:::-;22982:9;22976:4;22972:20;22967:2;22956:9;22952:18;22945:48;23010:76;23081:4;23072:6;23010:76;:::i;:::-;23002:84;;22453:640;;;;;;;:::o;23099:141::-;23155:5;23186:6;23180:13;23171:22;;23202:32;23228:5;23202:32;:::i;:::-;23099:141;;;;:::o;23246:349::-;23315:6;23364:2;23352:9;23343:7;23339:23;23335:32;23332:119;;;23370:79;;:::i;:::-;23332:119;23490:1;23515:63;23570:7;23561:6;23550:9;23546:22;23515:63;:::i;:::-;23505:73;;23461:127;23246:349;;;;:::o;23601:180::-;23649:77;23646:1;23639:88;23746:4;23743:1;23736:15;23770:4;23767:1;23760:15;23787:332;23908:4;23946:2;23935:9;23931:18;23923:26;;23959:71;24027:1;24016:9;24012:17;24003:6;23959:71;:::i;:::-;24040:72;24108:2;24097:9;24093:18;24084:6;24040:72;:::i;:::-;23787:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2245200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"getTransactionStatus(bytes32)": "2899",
								"housewallet()": "2531",
								"isApprovedForAll(address,address)": "infinite",
								"markTransactionCompleted(bytes32)": "infinite",
								"mintNFT(address,uint256)": "infinite",
								"myToken()": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferNFT(address,uint256)": "infinite",
								"transferNFTWithToken(address,uint256,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 288,
									"end": 3574,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 916,
									"end": 1137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1034,
									"end": 1046,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "4E465450617469656E7400000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "4E504E5400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1076,
									"end": 1091,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1066,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 1059,
									"end": 1066,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1059,
									"end": 1092,
									"modifierDepth": 2,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1117,
									"end": 1129,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1114,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 1103,
									"end": 1114,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1103,
									"end": 1129,
									"modifierDepth": 2,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 916,
									"end": 1137,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1566,
									"end": 1572,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1605,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1594,
									"end": 1606,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1584,
									"end": 1606,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1584,
									"end": 1606,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1514,
									"end": 1613,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1514,
									"end": 1613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1619,
									"end": 1799,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 1619,
									"end": 1799,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1667,
									"end": 1744,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1664,
									"end": 1665,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1745,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1764,
									"end": 1768,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1761,
									"end": 1762,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1754,
									"end": 1769,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1788,
									"end": 1792,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1785,
									"end": 1786,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1793,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1805,
									"end": 1985,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 1805,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1853,
									"end": 1930,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1850,
									"end": 1851,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1843,
									"end": 1931,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1950,
									"end": 1954,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1947,
									"end": 1948,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1940,
									"end": 1955,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1971,
									"end": 1972,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1964,
									"end": 1979,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2035,
									"end": 2041,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2072,
									"end": 2073,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 2066,
									"end": 2070,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2062,
									"end": 2074,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 2052,
									"end": 2074,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2052,
									"end": 2074,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2119,
									"end": 2120,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2113,
									"end": 2117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2109,
									"end": 2121,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2140,
									"end": 2158,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2196,
									"end": 2200,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 2188,
									"end": 2194,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2184,
									"end": 2201,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "tag",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 2130,
									"end": 2211,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2258,
									"end": 2260,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2250,
									"end": 2256,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2247,
									"end": 2261,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2227,
									"end": 2245,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2224,
									"end": 2262,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 2277,
									"end": 2295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "tag",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "tag",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 2221,
									"end": 2305,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2042,
									"end": 2311,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1991,
									"end": 2311,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1991,
									"end": 2311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2366,
									"end": 2370,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2389,
									"end": 2392,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2381,
									"end": 2392,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2381,
									"end": 2392,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2412,
									"end": 2415,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2409,
									"end": 2410,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2402,
									"end": 2416,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2446,
									"end": 2450,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2443,
									"end": 2444,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2433,
									"end": 2451,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 2425,
									"end": 2451,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2425,
									"end": 2451,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2317,
									"end": 2458,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2317,
									"end": 2458,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2501,
									"end": 2507,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2548,
									"end": 2550,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2543,
									"end": 2545,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2536,
									"end": 2541,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2532,
									"end": 2546,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2528,
									"end": 2551,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 2518,
									"end": 2551,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2518,
									"end": 2551,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2464,
									"end": 2557,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2464,
									"end": 2557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2607,
									"end": 2615,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2657,
									"end": 2662,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2651,
									"end": 2655,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2647,
									"end": 2663,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2626,
									"end": 2663,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2626,
									"end": 2663,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2563,
									"end": 2670,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2563,
									"end": 2670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2745,
									"end": 2751,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2796,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 2783,
									"end": 2793,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2779,
									"end": 2797,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 2848,
									"end": 2914,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2837,
									"end": 2846,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 2818,
									"end": 2915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "tag",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 2818,
									"end": 2915,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 2966,
									"end": 2974,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2955,
									"end": 2964,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 2936,
									"end": 2975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "tag",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 2936,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2924,
									"end": 2975,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 2924,
									"end": 2975,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3008,
									"end": 3012,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3004,
									"end": 3013,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 2997,
									"end": 3002,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2993,
									"end": 3014,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2984,
									"end": 3014,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2984,
									"end": 3014,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3057,
									"end": 3061,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3047,
									"end": 3055,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3043,
									"end": 3062,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3036,
									"end": 3041,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3033,
									"end": 3063,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 3023,
									"end": 3063,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3023,
									"end": 3063,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2752,
									"end": 3069,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2752,
									"end": 3069,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2676,
									"end": 3069,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2676,
									"end": 3069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3112,
									"end": 3119,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3141,
									"end": 3146,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3130,
									"end": 3146,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3075,
									"end": 3152,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3075,
									"end": 3152,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3186,
									"end": 3189,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3207,
									"end": 3212,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3200,
									"end": 3212,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3200,
									"end": 3212,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3158,
									"end": 3218,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3158,
									"end": 3218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3274,
									"end": 3283,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 3352,
									"end": 3357,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 3334,
									"end": 3358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "tag",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3358,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 3325,
									"end": 3359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "tag",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 3325,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 3307,
									"end": 3360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "tag",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 3307,
									"end": 3360,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3294,
									"end": 3360,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3294,
									"end": 3360,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3224,
									"end": 3366,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3224,
									"end": 3366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3415,
									"end": 3418,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3441,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3441,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3429,
									"end": 3441,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3372,
									"end": 3447,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3372,
									"end": 3447,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 3594,
									"end": 3601,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 3563,
									"end": 3602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "tag",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 3563,
									"end": 3602,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 3697,
									"end": 3713,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3673,
									"end": 3714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "tag",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 3673,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3665,
									"end": 3671,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3658,
									"end": 3662,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3652,
									"end": 3663,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 3624,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "tag",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 3624,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3618,
									"end": 3622,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3611,
									"end": 3716,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 3529,
									"end": 3722,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3453,
									"end": 3722,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3453,
									"end": 3722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3773,
									"end": 3776,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3728,
									"end": 3801,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3728,
									"end": 3801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3884,
									"end": 3916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "tag",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 3884,
									"end": 3916,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 3983,
									"end": 3989,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3975,
									"end": 3981,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3969,
									"end": 3973,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 3925,
									"end": 3990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "tag",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 3925,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3860,
									"end": 3996,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3807,
									"end": 3996,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3807,
									"end": 3996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "tag",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4079,
									"end": 4082,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4072,
									"end": 4077,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4069,
									"end": 4083,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 4170,
									"end": 4171,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4163,
									"end": 4168,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 4133,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "tag",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 4133,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4106,
									"end": 4107,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4099,
									"end": 4104,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4095,
									"end": 4108,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4086,
									"end": 4108,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4086,
									"end": 4108,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "tag",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 4062,
									"end": 4182,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4002,
									"end": 4188,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4002,
									"end": 4188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4295,
									"end": 4297,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4290,
									"end": 4293,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4287,
									"end": 4298,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4361,
									"end": 4366,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 4329,
									"end": 4367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "tag",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4329,
									"end": 4367,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 4431,
									"end": 4441,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 4413,
									"end": 4442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "tag",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 4413,
									"end": 4442,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4403,
									"end": 4411,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4399,
									"end": 4443,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4596,
									"end": 4598,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4584,
									"end": 4594,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4581,
									"end": 4599,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4617,
									"end": 4625,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4602,
									"end": 4625,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4602,
									"end": 4625,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "tag",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 4578,
									"end": 4627,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 4714,
									"end": 4717,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 4696,
									"end": 4718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "tag",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 4696,
									"end": 4718,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4686,
									"end": 4694,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4669,
									"end": 4680,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 4640,
									"end": 4720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "tag",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 4640,
									"end": 4720,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4299,
									"end": 4730,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4299,
									"end": 4730,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "tag",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 4284,
									"end": 4730,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4194,
									"end": 4737,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4194,
									"end": 4737,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4797,
									"end": 4805,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4847,
									"end": 4852,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4841,
									"end": 4845,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4837,
									"end": 4853,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 4816,
									"end": 4853,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4816,
									"end": 4853,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4743,
									"end": 4860,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4743,
									"end": 4860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4910,
									"end": 4916,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 4991,
									"end": 4992,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4987,
									"end": 4993,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 4979,
									"end": 4984,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4976,
									"end": 4977,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 4972,
									"end": 4985,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 4943,
									"end": 4994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "tag",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 4943,
									"end": 4994,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4939,
									"end": 4995,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5024,
									"end": 5028,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5018,
									"end": 5022,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5014,
									"end": 5029,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5004,
									"end": 5029,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5004,
									"end": 5029,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4917,
									"end": 5035,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4866,
									"end": 5035,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4866,
									"end": 5035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5116,
									"end": 5120,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "110"
								},
								{
									"begin": 5287,
									"end": 5290,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5281,
									"end": 5285,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 5262,
									"end": 5291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "tag",
									"source": 15,
									"value": "110"
								},
								{
									"begin": 5262,
									"end": 5291,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5254,
									"end": 5291,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5254,
									"end": 5291,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5324,
									"end": 5327,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5321,
									"end": 5322,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 5317,
									"end": 5328,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 5311,
									"end": 5315,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5308,
									"end": 5329,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 5300,
									"end": 5329,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5300,
									"end": 5329,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5040,
									"end": 5335,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5040,
									"end": 5335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "tag",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 5490,
									"end": 5493,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 5457,
									"end": 5494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "tag",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 5457,
									"end": 5494,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5559,
									"end": 5577,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5551,
									"end": 5557,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5548,
									"end": 5578,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "113"
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 5581,
									"end": 5599,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "tag",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 5581,
									"end": 5599,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "tag",
									"source": 15,
									"value": "113"
								},
								{
									"begin": 5545,
									"end": 5601,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "115"
								},
								{
									"begin": 5657,
									"end": 5661,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5651,
									"end": 5662,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 5625,
									"end": 5663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "tag",
									"source": 15,
									"value": "115"
								},
								{
									"begin": 5625,
									"end": 5663,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 5770,
									"end": 5776,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5762,
									"end": 5768,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 5710,
									"end": 5777,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "tag",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 5710,
									"end": 5777,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5828,
									"end": 5832,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5815,
									"end": 5832,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5815,
									"end": 5832,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5860,
									"end": 5862,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 5852,
									"end": 5858,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5849,
									"end": 5863,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 5877,
									"end": 5878,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6534,
									"end": 6535,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6557,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6600,
									"end": 6609,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6595,
									"end": 6598,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 6591,
									"end": 6610,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6585,
									"end": 6611,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6576,
									"end": 6611,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6576,
									"end": 6611,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "tag",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 6548,
									"end": 6625,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 6711,
									"end": 6717,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6704,
									"end": 6709,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 6651,
									"end": 6718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "tag",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 6651,
									"end": 6718,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6645,
									"end": 6649,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 6638,
									"end": 6719,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6507,
									"end": 6729,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "tag",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 5872,
									"end": 6490,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5924,
									"end": 5928,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 5920,
									"end": 5929,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 5918,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5908,
									"end": 5930,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 5990,
									"end": 5994,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 5958,
									"end": 5995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "tag",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 5958,
									"end": 5995,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "tag",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6045,
									"end": 6052,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6042,
									"end": 6043,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6039,
									"end": 6053,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6124,
									"end": 6133,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6119,
									"end": 6122,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6115,
									"end": 6134,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6109,
									"end": 6135,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6101,
									"end": 6107,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6094,
									"end": 6136,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6175,
									"end": 6176,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 6167,
									"end": 6173,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6163,
									"end": 6177,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6153,
									"end": 6177,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6153,
									"end": 6177,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6222,
									"end": 6224,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6207,
									"end": 6225,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6194,
									"end": 6225,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 6194,
									"end": 6225,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6068,
									"end": 6072,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6065,
									"end": 6066,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6061,
									"end": 6073,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6056,
									"end": 6073,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6056,
									"end": 6073,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "tag",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 6031,
									"end": 6239,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6267,
									"end": 6273,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 6258,
									"end": 6265,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6255,
									"end": 6274,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "125"
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6325,
									"end": 6334,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6320,
									"end": 6323,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6316,
									"end": 6335,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6310,
									"end": 6336,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 6410,
									"end": 6414,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 6402,
									"end": 6408,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6398,
									"end": 6415,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 6387,
									"end": 6396,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 6368,
									"end": 6416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "tag",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 6368,
									"end": 6416,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6360,
									"end": 6366,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6353,
									"end": 6417,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6275,
									"end": 6431,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "tag",
									"source": 15,
									"value": "125"
								},
								{
									"begin": 6252,
									"end": 6431,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6477,
									"end": 6478,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 6473,
									"end": 6474,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 6465,
									"end": 6471,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 6461,
									"end": 6475,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 6457,
									"end": 6479,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6451,
									"end": 6455,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 6444,
									"end": 6480,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5879,
									"end": 6490,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "tag",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5842,
									"end": 6729,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5432,
									"end": 6735,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5340,
									"end": 6735,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5340,
									"end": 6735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "tag",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 6846,
									"end": 6851,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 6828,
									"end": 6852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "tag",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 6828,
									"end": 6852,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6823,
									"end": 6826,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6816,
									"end": 6853,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6741,
									"end": 6859,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6741,
									"end": 6859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6958,
									"end": 6962,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6996,
									"end": 6998,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6985,
									"end": 6994,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6981,
									"end": 6999,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6973,
									"end": 6999,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6973,
									"end": 6999,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 7077,
									"end": 7078,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7066,
									"end": 7075,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7062,
									"end": 7079,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7053,
									"end": 7059,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 7009,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "tag",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 7009,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6865,
									"end": 7087,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6865,
									"end": 7087,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "tag",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 3574,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203214b1311ee203f100044891666930a905352eda97e01f39fd84b5c43873793264736f6c63430008150033",
									".code": [
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "863B3894"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "B88D4FDE"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "B8FCF937"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "C87B56DD"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "863B3894"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "8F3481C0"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "94407465"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "94AB67FE"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "37418972"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "37418972"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "3C168EAB"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "42842E0E"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "6FDDE03"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "81812FC"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 288,
											"end": 3574,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3448,
											"end": 3571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "tag",
											"source": 14,
											"value": "59"
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 3448,
											"end": 3571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 1208,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1208,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 501,
											"end": 527,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 501,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "tag",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 501,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 2009,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 2009,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "tag",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 2009,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "tag",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3140,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 3140,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "tag",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 3140,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 1549,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "tag",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 1549,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 430,
											"end": 451,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 430,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 430,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3526,
											"end": 3548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3555,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3563,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1309,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1291,
											"end": 1310,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1310,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 1282,
											"end": 1346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 1282,
											"end": 1346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 1365,
											"end": 1367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1369,
											"end": 1376,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 1359,
											"end": 1377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1359,
											"end": 1377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 1359,
											"end": 1377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1410,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1388,
											"end": 1398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1406,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1208,
											"end": 1422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 501,
											"end": 527,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 527,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 501,
											"end": 527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2224,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 2232,
											"end": 2239,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2224,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 2224,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2224,
											"end": 2240,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 2224,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2268,
											"end": 2278,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2259,
											"end": 2278,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2259,
											"end": 2278,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2259,
											"end": 2264,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2259,
											"end": 2278,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2259,
											"end": 2278,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2259,
											"end": 2278,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 2251,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 2251,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 2385,
											"end": 2390,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2392,
											"end": 2394,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2396,
											"end": 2403,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 2375,
											"end": 2404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "tag",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2520,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2500,
											"end": 2520,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2520,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 2521,
											"end": 2523,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2525,
											"end": 2530,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2532,
											"end": 2543,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 2500,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "tag",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 2500,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 2492,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "tag",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 2492,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2639,
											"end": 2653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2693,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2695,
											"end": 2697,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2708,
											"end": 2719,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2721,
											"end": 2733,
											"name": "NUMBER",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 2666,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "tag",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2734,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2656,
											"end": 2735,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2656,
											"end": 2735,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2656,
											"end": 2735,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2656,
											"end": 2735,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2735,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2656,
											"end": 2735,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2639,
											"end": 2735,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2639,
											"end": 2735,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2834,
											"end": 2839,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2823,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2830,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2831,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2936,
											"end": 2941,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "PUSH",
											"source": 14,
											"value": "9F9AC6BCA37E427696541548195017F8D7569C1BDFF1BA5B97D815BFB9C11F8C"
										},
										{
											"begin": 2947,
											"end": 2954,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2956,
											"end": 2967,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2969,
											"end": 2975,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 2921,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "tag",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2976,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2989,
											"end": 3002,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2989,
											"end": 3002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2989,
											"end": 3002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2989,
											"end": 3002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2009,
											"end": 3044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3207,
											"end": 3211,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3335,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3342,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 3313,
											"end": 3343,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3306,
											"end": 3343,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3306,
											"end": 3343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1617,
											"end": 1630,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 1641,
											"end": 1648,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1633,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 1633,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1633,
											"end": 1649,
											"name": "tag",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 1633,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1617,
											"end": 1649,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1617,
											"end": 1649,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1687,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1687,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1668,
											"end": 1687,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1673,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1687,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1668,
											"end": 1687,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1687,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 1660,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1736,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1757,
											"end": 1764,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1736,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 1736,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1736,
											"end": 1765,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 1736,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1867,
											"end": 1869,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1860,
											"end": 1865,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "PUSH",
											"source": 14,
											"value": "9F9AC6BCA37E427696541548195017F8D7569C1BDFF1BA5B97D815BFB9C11F8C"
										},
										{
											"begin": 1871,
											"end": 1878,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1883,
											"end": 1893,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1893,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 1845,
											"end": 1894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "tag",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1845,
											"end": 1894,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 1606,
											"end": 1902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1549,
											"end": 1902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 430,
											"end": 451,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 430,
											"end": 451,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 430,
											"end": 451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12112,
											"end": 12113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12098,
											"end": 12100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12167,
											"end": 12168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 12137,
											"end": 12170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12190,
											"end": 12211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 12222,
											"end": 12224,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12243,
											"end": 12244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 12214,
											"end": 12246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12190,
											"end": 12246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12190,
											"end": 12246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12285,
											"end": 12286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12260,
											"end": 12273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12333,
											"end": 12340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 12310,
											"end": 12341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12379,
											"end": 12383,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12362,
											"end": 12375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12427,
											"end": 12431,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12442,
											"end": 12455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 3,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 12406,
											"end": 12456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12084,
											"end": 12473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 9,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 12,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 12,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5515,
											"end": 5592,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 5515,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5552,
											"end": 5559,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5586,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5570,
											"end": 5586,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5570,
											"end": 5586,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5515,
											"end": 5592,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5515,
											"end": 5592,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5515,
											"end": 5592,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5515,
											"end": 5592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5598,
											"end": 5720,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 5598,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5671,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 5689,
											"end": 5694,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5671,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 5671,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5671,
											"end": 5695,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 5671,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5664,
											"end": 5669,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5661,
											"end": 5696,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 5651,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 5651,
											"end": 5714,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5700,
											"end": 5712,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5651,
											"end": 5714,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 5651,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5598,
											"end": 5720,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5598,
											"end": 5720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5726,
											"end": 5865,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 5726,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5772,
											"end": 5777,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5797,
											"end": 5817,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5788,
											"end": 5817,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5826,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 5853,
											"end": 5858,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5826,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 5826,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5826,
											"end": 5859,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 5826,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5726,
											"end": 5865,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5726,
											"end": 5865,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5726,
											"end": 5865,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5726,
											"end": 5865,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5726,
											"end": 5865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5871,
											"end": 6200,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5871,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5981,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5967,
											"end": 5976,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5958,
											"end": 5965,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5954,
											"end": 5977,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5950,
											"end": 5982,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5947,
											"end": 6066,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5947,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 5947,
											"end": 6066,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5985,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 5985,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 5985,
											"end": 6064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5985,
											"end": 6064,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 5985,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5947,
											"end": 6066,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 5947,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6105,
											"end": 6106,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6166,
											"end": 6172,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6164,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6151,
											"end": 6173,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6130,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 6130,
											"end": 6183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6130,
											"end": 6183,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 6130,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6183,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6183,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6076,
											"end": 6193,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5871,
											"end": 6200,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5871,
											"end": 6200,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5871,
											"end": 6200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5871,
											"end": 6200,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5871,
											"end": 6200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6265,
											"end": 6271,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6316,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6302,
											"end": 6311,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6293,
											"end": 6300,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6289,
											"end": 6312,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6285,
											"end": 6317,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6282,
											"end": 6401,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6282,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 6282,
											"end": 6401,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 6320,
											"end": 6399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 6320,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6282,
											"end": 6401,
											"name": "tag",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 6282,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6440,
											"end": 6441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6465,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 6510,
											"end": 6517,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6501,
											"end": 6507,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6490,
											"end": 6499,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6486,
											"end": 6508,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 6465,
											"end": 6518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6518,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 6465,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6455,
											"end": 6518,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6455,
											"end": 6518,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6411,
											"end": 6528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6206,
											"end": 6535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6206,
											"end": 6535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6541,
											"end": 6659,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 6541,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6628,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 6646,
											"end": 6651,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6628,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 6628,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6628,
											"end": 6652,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 6628,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6623,
											"end": 6626,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6616,
											"end": 6653,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6541,
											"end": 6659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6541,
											"end": 6659,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6541,
											"end": 6659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6665,
											"end": 6887,
											"name": "tag",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 6665,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6758,
											"end": 6762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 6798,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6785,
											"end": 6794,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6781,
											"end": 6799,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6773,
											"end": 6799,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6773,
											"end": 6799,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6809,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 6877,
											"end": 6878,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6875,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6862,
											"end": 6879,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6853,
											"end": 6859,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6809,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 6809,
											"end": 6880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6809,
											"end": 6880,
											"name": "tag",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 6809,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6665,
											"end": 6887,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6665,
											"end": 6887,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6665,
											"end": 6887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6665,
											"end": 6887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6665,
											"end": 6887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6893,
											"end": 7512,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 6893,
											"end": 7512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6970,
											"end": 6976,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 6984,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7037,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 7023,
											"end": 7032,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7014,
											"end": 7021,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7010,
											"end": 7033,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7006,
											"end": 7038,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7003,
											"end": 7122,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7003,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 7003,
											"end": 7122,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7041,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 7041,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 7041,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7041,
											"end": 7120,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 7041,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7003,
											"end": 7122,
											"name": "tag",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 7003,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7161,
											"end": 7162,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7186,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 7231,
											"end": 7238,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7222,
											"end": 7228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7211,
											"end": 7220,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 7207,
											"end": 7229,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7186,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 7186,
											"end": 7239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7186,
											"end": 7239,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 7186,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7239,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7239,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7132,
											"end": 7249,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7288,
											"end": 7290,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7314,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 7359,
											"end": 7366,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7350,
											"end": 7356,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7339,
											"end": 7348,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 7335,
											"end": 7357,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7314,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 7314,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7314,
											"end": 7367,
											"name": "tag",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 7314,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7304,
											"end": 7367,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7304,
											"end": 7367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7259,
											"end": 7377,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7416,
											"end": 7418,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7442,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 7487,
											"end": 7494,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7478,
											"end": 7484,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7467,
											"end": 7476,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 7463,
											"end": 7485,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7442,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 7442,
											"end": 7495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7442,
											"end": 7495,
											"name": "tag",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 7442,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7432,
											"end": 7495,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7432,
											"end": 7495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7387,
											"end": 7505,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6893,
											"end": 7512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6893,
											"end": 7512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6893,
											"end": 7512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6893,
											"end": 7512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6893,
											"end": 7512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6893,
											"end": 7512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7518,
											"end": 7636,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 7518,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7605,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 7623,
											"end": 7628,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7605,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 7605,
											"end": 7629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7605,
											"end": 7629,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 7605,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7600,
											"end": 7603,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7593,
											"end": 7630,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7518,
											"end": 7636,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7518,
											"end": 7636,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7518,
											"end": 7636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7642,
											"end": 7864,
											"name": "tag",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 7642,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7735,
											"end": 7739,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7773,
											"end": 7775,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7762,
											"end": 7771,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7758,
											"end": 7776,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7750,
											"end": 7776,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7750,
											"end": 7776,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7786,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 7854,
											"end": 7855,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7843,
											"end": 7852,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7830,
											"end": 7836,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7786,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 7786,
											"end": 7857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7786,
											"end": 7857,
											"name": "tag",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 7786,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7642,
											"end": 7864,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7642,
											"end": 7864,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7642,
											"end": 7864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7642,
											"end": 7864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7642,
											"end": 7864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7870,
											"end": 7986,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 7870,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7940,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 7955,
											"end": 7960,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7940,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 7940,
											"end": 7961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7940,
											"end": 7961,
											"name": "tag",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 7940,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7933,
											"end": 7938,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7930,
											"end": 7962,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7920,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 7920,
											"end": 7980,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7976,
											"end": 7977,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7966,
											"end": 7978,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7920,
											"end": 7980,
											"name": "tag",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 7920,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7870,
											"end": 7986,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7870,
											"end": 7986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7992,
											"end": 8125,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 7992,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8035,
											"end": 8040,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8073,
											"end": 8079,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8060,
											"end": 8080,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8051,
											"end": 8080,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8051,
											"end": 8080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8089,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 8113,
											"end": 8118,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8089,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 8089,
											"end": 8119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8089,
											"end": 8119,
											"name": "tag",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 8089,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7992,
											"end": 8125,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7992,
											"end": 8125,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7992,
											"end": 8125,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7992,
											"end": 8125,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7992,
											"end": 8125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8131,
											"end": 8599,
											"name": "tag",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 8131,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8196,
											"end": 8202,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8210,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8253,
											"end": 8255,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8241,
											"end": 8250,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8232,
											"end": 8239,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8228,
											"end": 8251,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8224,
											"end": 8256,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8221,
											"end": 8340,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8221,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 8221,
											"end": 8340,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8259,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 8259,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 8259,
											"end": 8338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8259,
											"end": 8338,
											"name": "tag",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 8259,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8221,
											"end": 8340,
											"name": "tag",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 8221,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8379,
											"end": 8380,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8404,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 8449,
											"end": 8456,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8440,
											"end": 8446,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8429,
											"end": 8438,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8404,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 8404,
											"end": 8457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8404,
											"end": 8457,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 8404,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8394,
											"end": 8457,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8394,
											"end": 8457,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8350,
											"end": 8467,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8506,
											"end": 8508,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8532,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 8574,
											"end": 8581,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8565,
											"end": 8571,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8554,
											"end": 8563,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8550,
											"end": 8572,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8532,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 8532,
											"end": 8582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8532,
											"end": 8582,
											"name": "tag",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 8532,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8522,
											"end": 8582,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8522,
											"end": 8582,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8477,
											"end": 8592,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8131,
											"end": 8599,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8131,
											"end": 8599,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8131,
											"end": 8599,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8131,
											"end": 8599,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8131,
											"end": 8599,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8131,
											"end": 8599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8605,
											"end": 8722,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 8605,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8714,
											"end": 8715,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8712,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8704,
											"end": 8716,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8728,
											"end": 8845,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 8728,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8837,
											"end": 8838,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8834,
											"end": 8835,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8827,
											"end": 8839,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8851,
											"end": 9031,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 8851,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8899,
											"end": 8976,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8896,
											"end": 8897,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8889,
											"end": 8977,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8996,
											"end": 9000,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 8993,
											"end": 8994,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8986,
											"end": 9001,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9020,
											"end": 9024,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9017,
											"end": 9018,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9010,
											"end": 9025,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9037,
											"end": 9318,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 9037,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9120,
											"end": 9147,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 9142,
											"end": 9146,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9120,
											"end": 9147,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 9120,
											"end": 9147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9120,
											"end": 9147,
											"name": "tag",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 9120,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9112,
											"end": 9118,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9108,
											"end": 9148,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9250,
											"end": 9256,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9238,
											"end": 9248,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9235,
											"end": 9257,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9202,
											"end": 9212,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9199,
											"end": 9233,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9196,
											"end": 9258,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 9193,
											"end": 9281,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9193,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 9193,
											"end": 9281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9261,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 9261,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 9261,
											"end": 9279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9261,
											"end": 9279,
											"name": "tag",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 9261,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9193,
											"end": 9281,
											"name": "tag",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 9193,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9301,
											"end": 9311,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9297,
											"end": 9299,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9290,
											"end": 9312,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9080,
											"end": 9318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9037,
											"end": 9318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9037,
											"end": 9318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9037,
											"end": 9318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9324,
											"end": 9453,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 9324,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9358,
											"end": 9364,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9385,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 9385,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 9385,
											"end": 9405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9385,
											"end": 9405,
											"name": "tag",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 9385,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9375,
											"end": 9405,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9375,
											"end": 9405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9414,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 9442,
											"end": 9446,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9434,
											"end": 9440,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9414,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 9414,
											"end": 9447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9414,
											"end": 9447,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 9414,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9324,
											"end": 9453,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9324,
											"end": 9453,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9324,
											"end": 9453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9324,
											"end": 9453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9459,
											"end": 9766,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 9459,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9520,
											"end": 9524,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9602,
											"end": 9608,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9599,
											"end": 9629,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9596,
											"end": 9652,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9596,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 9596,
											"end": 9652,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 9632,
											"end": 9650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "tag",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 9632,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9596,
											"end": 9652,
											"name": "tag",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 9596,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9670,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 9692,
											"end": 9698,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9670,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 9670,
											"end": 9699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9670,
											"end": 9699,
											"name": "tag",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 9670,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9662,
											"end": 9699,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9662,
											"end": 9699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9754,
											"end": 9758,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9748,
											"end": 9752,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9744,
											"end": 9759,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9736,
											"end": 9759,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9736,
											"end": 9759,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9459,
											"end": 9766,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9459,
											"end": 9766,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9459,
											"end": 9766,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9459,
											"end": 9766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9772,
											"end": 9918,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 9772,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9869,
											"end": 9875,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9864,
											"end": 9867,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9859,
											"end": 9862,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9846,
											"end": 9876,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 9910,
											"end": 9911,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9901,
											"end": 9907,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9896,
											"end": 9899,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9892,
											"end": 9908,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9885,
											"end": 9912,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9772,
											"end": 9918,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9772,
											"end": 9918,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9772,
											"end": 9918,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9772,
											"end": 9918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9924,
											"end": 10347,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 9924,
											"end": 10347,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10001,
											"end": 10006,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10026,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 10042,
											"end": 10090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "tag",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10026,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 10026,
											"end": 10091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10026,
											"end": 10091,
											"name": "tag",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 10026,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10017,
											"end": 10091,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10017,
											"end": 10091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10114,
											"end": 10120,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10107,
											"end": 10112,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10100,
											"end": 10121,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10152,
											"end": 10156,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10150,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10141,
											"end": 10157,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10190,
											"end": 10193,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10181,
											"end": 10187,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10176,
											"end": 10179,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10172,
											"end": 10188,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10169,
											"end": 10194,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10166,
											"end": 10278,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10166,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 10166,
											"end": 10278,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10197,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 10197,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 10197,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10197,
											"end": 10276,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 10197,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10166,
											"end": 10278,
											"name": "tag",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 10166,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10287,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 10334,
											"end": 10340,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10329,
											"end": 10332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10324,
											"end": 10327,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10287,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 10287,
											"end": 10341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10287,
											"end": 10341,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 10287,
											"end": 10341,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10007,
											"end": 10347,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9924,
											"end": 10347,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9924,
											"end": 10347,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9924,
											"end": 10347,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9924,
											"end": 10347,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9924,
											"end": 10347,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9924,
											"end": 10347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10704,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 10366,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10421,
											"end": 10426,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10470,
											"end": 10473,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10463,
											"end": 10467,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10468,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10447,
											"end": 10474,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10437,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 10437,
											"end": 10559,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10478,
											"end": 10557,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 10478,
											"end": 10557,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 10478,
											"end": 10557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10478,
											"end": 10557,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 10478,
											"end": 10557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10437,
											"end": 10559,
											"name": "tag",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 10437,
											"end": 10559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10595,
											"end": 10601,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10582,
											"end": 10602,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10620,
											"end": 10698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 10694,
											"end": 10697,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10679,
											"end": 10683,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10677,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10667,
											"end": 10684,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10620,
											"end": 10698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 10620,
											"end": 10698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10620,
											"end": 10698,
											"name": "tag",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 10620,
											"end": 10698,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10611,
											"end": 10698,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10611,
											"end": 10698,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10427,
											"end": 10704,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10704,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10704,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10704,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10704,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10710,
											"end": 11653,
											"name": "tag",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 10710,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10805,
											"end": 10811,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10813,
											"end": 10819,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10821,
											"end": 10827,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10829,
											"end": 10835,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10878,
											"end": 10881,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 10866,
											"end": 10875,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10857,
											"end": 10864,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10853,
											"end": 10876,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10849,
											"end": 10882,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10846,
											"end": 10966,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10846,
											"end": 10966,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 10846,
											"end": 10966,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10885,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 10885,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 10885,
											"end": 10964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10885,
											"end": 10964,
											"name": "tag",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 10885,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10846,
											"end": 10966,
											"name": "tag",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 10846,
											"end": 10966,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11005,
											"end": 11006,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11030,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 11075,
											"end": 11082,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11055,
											"end": 11064,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11051,
											"end": 11073,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11030,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 11030,
											"end": 11083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11030,
											"end": 11083,
											"name": "tag",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 11030,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11020,
											"end": 11083,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 11020,
											"end": 11083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10976,
											"end": 11093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11132,
											"end": 11134,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11158,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 11203,
											"end": 11210,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11194,
											"end": 11200,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11183,
											"end": 11192,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11179,
											"end": 11201,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11158,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 11158,
											"end": 11211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11158,
											"end": 11211,
											"name": "tag",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 11158,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11148,
											"end": 11211,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11148,
											"end": 11211,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11103,
											"end": 11221,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11260,
											"end": 11262,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11286,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 11331,
											"end": 11338,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11311,
											"end": 11320,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11307,
											"end": 11329,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11286,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 11286,
											"end": 11339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11286,
											"end": 11339,
											"name": "tag",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 11286,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11276,
											"end": 11339,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11276,
											"end": 11339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11231,
											"end": 11349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11416,
											"end": 11418,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11405,
											"end": 11414,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11401,
											"end": 11419,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11388,
											"end": 11420,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11439,
											"end": 11445,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11436,
											"end": 11466,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11433,
											"end": 11550,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11433,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 11433,
											"end": 11550,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11469,
											"end": 11548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 11469,
											"end": 11548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 11469,
											"end": 11548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11469,
											"end": 11548,
											"name": "tag",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 11469,
											"end": 11548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11433,
											"end": 11550,
											"name": "tag",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 11433,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11574,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 11628,
											"end": 11635,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11619,
											"end": 11625,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11608,
											"end": 11617,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11604,
											"end": 11626,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11574,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 11574,
											"end": 11636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11574,
											"end": 11636,
											"name": "tag",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 11574,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11564,
											"end": 11636,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11564,
											"end": 11636,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11359,
											"end": 11646,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10710,
											"end": 11653,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10710,
											"end": 11653,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 10710,
											"end": 11653,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10710,
											"end": 11653,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 10710,
											"end": 11653,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10710,
											"end": 11653,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10710,
											"end": 11653,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10710,
											"end": 11653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11659,
											"end": 11719,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 11659,
											"end": 11719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11687,
											"end": 11690,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11708,
											"end": 11713,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11659,
											"end": 11719,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11659,
											"end": 11719,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11659,
											"end": 11719,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11659,
											"end": 11719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11725,
											"end": 11867,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 11725,
											"end": 11867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11775,
											"end": 11784,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11808,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 11826,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 11835,
											"end": 11859,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 11853,
											"end": 11858,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11835,
											"end": 11859,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 11835,
											"end": 11859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11835,
											"end": 11859,
											"name": "tag",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 11835,
											"end": 11859,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11826,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 11826,
											"end": 11860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11826,
											"end": 11860,
											"name": "tag",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 11826,
											"end": 11860,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11808,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 11808,
											"end": 11861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11808,
											"end": 11861,
											"name": "tag",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 11808,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11795,
											"end": 11861,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11795,
											"end": 11861,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11725,
											"end": 11867,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11725,
											"end": 11867,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11725,
											"end": 11867,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11725,
											"end": 11867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11999,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 11873,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11923,
											"end": 11932,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11956,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 11987,
											"end": 11992,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11956,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 11956,
											"end": 11993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11956,
											"end": 11993,
											"name": "tag",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 11956,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11943,
											"end": 11993,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11943,
											"end": 11993,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11999,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11999,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11999,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12005,
											"end": 12145,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 12005,
											"end": 12145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12069,
											"end": 12078,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12102,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 12133,
											"end": 12138,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12102,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 12102,
											"end": 12139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12102,
											"end": 12139,
											"name": "tag",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 12102,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12089,
											"end": 12139,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12089,
											"end": 12139,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12005,
											"end": 12145,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12005,
											"end": 12145,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12005,
											"end": 12145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12005,
											"end": 12145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12151,
											"end": 12310,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 12151,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12252,
											"end": 12303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 12297,
											"end": 12302,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12252,
											"end": 12303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 12252,
											"end": 12303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12252,
											"end": 12303,
											"name": "tag",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 12252,
											"end": 12303,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12247,
											"end": 12250,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12240,
											"end": 12304,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12151,
											"end": 12310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12151,
											"end": 12310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12151,
											"end": 12310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12316,
											"end": 12566,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 12316,
											"end": 12566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12423,
											"end": 12427,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12461,
											"end": 12463,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12446,
											"end": 12464,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12438,
											"end": 12464,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12438,
											"end": 12464,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12474,
											"end": 12559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 12556,
											"end": 12557,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12545,
											"end": 12554,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12541,
											"end": 12558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12532,
											"end": 12538,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12474,
											"end": 12559,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 12474,
											"end": 12559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12474,
											"end": 12559,
											"name": "tag",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 12474,
											"end": 12559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12316,
											"end": 12566,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12316,
											"end": 12566,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12316,
											"end": 12566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12316,
											"end": 12566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12316,
											"end": 12566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12572,
											"end": 13046,
											"name": "tag",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 12572,
											"end": 13046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12640,
											"end": 12646,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12648,
											"end": 12654,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12697,
											"end": 12699,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12685,
											"end": 12694,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12676,
											"end": 12683,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12672,
											"end": 12695,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12668,
											"end": 12700,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12665,
											"end": 12784,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12665,
											"end": 12784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 12665,
											"end": 12784,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12703,
											"end": 12782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 12703,
											"end": 12782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 12703,
											"end": 12782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12703,
											"end": 12782,
											"name": "tag",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 12703,
											"end": 12782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12665,
											"end": 12784,
											"name": "tag",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 12665,
											"end": 12784,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12823,
											"end": 12824,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12848,
											"end": 12901,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 12893,
											"end": 12900,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12884,
											"end": 12890,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12869,
											"end": 12891,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12848,
											"end": 12901,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 12848,
											"end": 12901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12848,
											"end": 12901,
											"name": "tag",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 12848,
											"end": 12901,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12838,
											"end": 12901,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12838,
											"end": 12901,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12794,
											"end": 12911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12950,
											"end": 12952,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12976,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 13021,
											"end": 13028,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13012,
											"end": 13018,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13001,
											"end": 13010,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12997,
											"end": 13019,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12976,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 12976,
											"end": 13029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12976,
											"end": 13029,
											"name": "tag",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 12976,
											"end": 13029,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12966,
											"end": 13029,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12966,
											"end": 13029,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12921,
											"end": 13039,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12572,
											"end": 13046,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12572,
											"end": 13046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12572,
											"end": 13046,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12572,
											"end": 13046,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12572,
											"end": 13046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12572,
											"end": 13046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13052,
											"end": 13232,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 13052,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13100,
											"end": 13177,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13097,
											"end": 13098,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13090,
											"end": 13178,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13197,
											"end": 13201,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 13194,
											"end": 13195,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 13187,
											"end": 13202,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13221,
											"end": 13225,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13218,
											"end": 13219,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13211,
											"end": 13226,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13238,
											"end": 13558,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 13238,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13282,
											"end": 13288,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13319,
											"end": 13320,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 13313,
											"end": 13317,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13309,
											"end": 13321,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 13299,
											"end": 13321,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13299,
											"end": 13321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13366,
											"end": 13367,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13360,
											"end": 13364,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13356,
											"end": 13368,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 13387,
											"end": 13405,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13377,
											"end": 13458,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 13377,
											"end": 13458,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13443,
											"end": 13447,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 13435,
											"end": 13441,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13431,
											"end": 13448,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 13421,
											"end": 13448,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13421,
											"end": 13448,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13377,
											"end": 13458,
											"name": "tag",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 13377,
											"end": 13458,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13505,
											"end": 13507,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13497,
											"end": 13503,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13494,
											"end": 13508,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13471,
											"end": 13509,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13468,
											"end": 13552,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 13468,
											"end": 13552,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13524,
											"end": 13542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 13524,
											"end": 13542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 13524,
											"end": 13542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13524,
											"end": 13542,
											"name": "tag",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 13524,
											"end": 13542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13468,
											"end": 13552,
											"name": "tag",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 13468,
											"end": 13552,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13289,
											"end": 13558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13238,
											"end": 13558,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13238,
											"end": 13558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13238,
											"end": 13558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13238,
											"end": 13558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13564,
											"end": 14006,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 13564,
											"end": 14006,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13713,
											"end": 13717,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13751,
											"end": 13753,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 13740,
											"end": 13749,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13736,
											"end": 13754,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13728,
											"end": 13754,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13728,
											"end": 13754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13764,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 13832,
											"end": 13833,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13821,
											"end": 13830,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13817,
											"end": 13834,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13808,
											"end": 13814,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13764,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 13764,
											"end": 13835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13764,
											"end": 13835,
											"name": "tag",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 13764,
											"end": 13835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13845,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 13913,
											"end": 13915,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13902,
											"end": 13911,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13898,
											"end": 13916,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13889,
											"end": 13895,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13845,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 13845,
											"end": 13917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13845,
											"end": 13917,
											"name": "tag",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 13845,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13927,
											"end": 13999,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 13995,
											"end": 13997,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13984,
											"end": 13993,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13971,
											"end": 13977,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13927,
											"end": 13999,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 13927,
											"end": 13999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13927,
											"end": 13999,
											"name": "tag",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 13927,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13564,
											"end": 14006,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 13564,
											"end": 14006,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 13564,
											"end": 14006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13564,
											"end": 14006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13564,
											"end": 14006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13564,
											"end": 14006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13564,
											"end": 14006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14012,
											"end": 14193,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 14012,
											"end": 14193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14152,
											"end": 14185,
											"name": "PUSH",
											"source": 15,
											"value": "4E46542077697468207468697320494420616C72656164792065786973747300"
										},
										{
											"begin": 14148,
											"end": 14149,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14140,
											"end": 14146,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14129,
											"end": 14186,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14012,
											"end": 14193,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14012,
											"end": 14193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14199,
											"end": 14565,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 14199,
											"end": 14565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14341,
											"end": 14344,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14362,
											"end": 14429,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 14426,
											"end": 14428,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 14421,
											"end": 14424,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14362,
											"end": 14429,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 14362,
											"end": 14429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14362,
											"end": 14429,
											"name": "tag",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 14362,
											"end": 14429,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14355,
											"end": 14429,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14355,
											"end": 14429,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14438,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 14527,
											"end": 14530,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14438,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 14438,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14438,
											"end": 14531,
											"name": "tag",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 14438,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14556,
											"end": 14558,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14551,
											"end": 14554,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14547,
											"end": 14559,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14540,
											"end": 14559,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14540,
											"end": 14559,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14199,
											"end": 14565,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14199,
											"end": 14565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14199,
											"end": 14565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14199,
											"end": 14565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14571,
											"end": 14990,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 14571,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14737,
											"end": 14741,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14775,
											"end": 14777,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14764,
											"end": 14773,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14760,
											"end": 14778,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14752,
											"end": 14778,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14752,
											"end": 14778,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14824,
											"end": 14833,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14818,
											"end": 14822,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14814,
											"end": 14834,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14810,
											"end": 14811,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14799,
											"end": 14808,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14795,
											"end": 14812,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14788,
											"end": 14835,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14852,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 14978,
											"end": 14982,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14852,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 14852,
											"end": 14983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14852,
											"end": 14983,
											"name": "tag",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 14852,
											"end": 14983,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14844,
											"end": 14983,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14844,
											"end": 14983,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14571,
											"end": 14990,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14571,
											"end": 14990,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14571,
											"end": 14990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14571,
											"end": 14990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14996,
											"end": 15216,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 14996,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15136,
											"end": 15170,
											"name": "PUSH",
											"source": 15,
											"value": "596F7520617265206E6F7420746865206F776E6572206F662074686973204E46"
										},
										{
											"begin": 15132,
											"end": 15133,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15124,
											"end": 15130,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15120,
											"end": 15134,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15113,
											"end": 15171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15205,
											"end": 15208,
											"name": "PUSH",
											"source": 15,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15200,
											"end": 15202,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15198,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15188,
											"end": 15203,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15181,
											"end": 15209,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14996,
											"end": 15216,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14996,
											"end": 15216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15222,
											"end": 15588,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 15222,
											"end": 15588,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15364,
											"end": 15367,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15385,
											"end": 15452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 15449,
											"end": 15451,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 15444,
											"end": 15447,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15385,
											"end": 15452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 15385,
											"end": 15452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15385,
											"end": 15452,
											"name": "tag",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 15385,
											"end": 15452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15378,
											"end": 15452,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15378,
											"end": 15452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15554,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 15550,
											"end": 15553,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15554,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 15461,
											"end": 15554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15554,
											"name": "tag",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 15461,
											"end": 15554,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15579,
											"end": 15581,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15574,
											"end": 15577,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15570,
											"end": 15582,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15563,
											"end": 15582,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15563,
											"end": 15582,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15222,
											"end": 15588,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15222,
											"end": 15588,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15222,
											"end": 15588,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15222,
											"end": 15588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15594,
											"end": 16013,
											"name": "tag",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 15594,
											"end": 16013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15760,
											"end": 15764,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15798,
											"end": 15800,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15787,
											"end": 15796,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15783,
											"end": 15801,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15775,
											"end": 15801,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15775,
											"end": 15801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15847,
											"end": 15856,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15841,
											"end": 15845,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15837,
											"end": 15857,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15833,
											"end": 15834,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15822,
											"end": 15831,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15818,
											"end": 15835,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15811,
											"end": 15858,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15875,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "622"
										},
										{
											"begin": 16001,
											"end": 16005,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15875,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 15875,
											"end": 16006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15875,
											"end": 16006,
											"name": "tag",
											"source": 15,
											"value": "622"
										},
										{
											"begin": 15875,
											"end": 16006,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15867,
											"end": 16006,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15867,
											"end": 16006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15594,
											"end": 16013,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15594,
											"end": 16013,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15594,
											"end": 16013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15594,
											"end": 16013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16019,
											"end": 16461,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 16019,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16168,
											"end": 16172,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16206,
											"end": 16208,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16195,
											"end": 16204,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16191,
											"end": 16209,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16183,
											"end": 16209,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16183,
											"end": 16209,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 16287,
											"end": 16288,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16276,
											"end": 16285,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16272,
											"end": 16289,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16263,
											"end": 16269,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 16219,
											"end": 16290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "tag",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 16219,
											"end": 16290,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16300,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 16368,
											"end": 16370,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16357,
											"end": 16366,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16353,
											"end": 16371,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16344,
											"end": 16350,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16300,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 16300,
											"end": 16372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16300,
											"end": 16372,
											"name": "tag",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 16300,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16382,
											"end": 16454,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 16450,
											"end": 16452,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16439,
											"end": 16448,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16435,
											"end": 16453,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16426,
											"end": 16432,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16382,
											"end": 16454,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 16382,
											"end": 16454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16382,
											"end": 16454,
											"name": "tag",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 16382,
											"end": 16454,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16019,
											"end": 16461,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 16019,
											"end": 16461,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16019,
											"end": 16461,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16019,
											"end": 16461,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16019,
											"end": 16461,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16019,
											"end": 16461,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16019,
											"end": 16461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16521,
											"end": 16526,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16552,
											"end": 16558,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16546,
											"end": 16559,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 16537,
											"end": 16559,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16537,
											"end": 16559,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16568,
											"end": 16598,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 16592,
											"end": 16597,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16568,
											"end": 16598,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 16568,
											"end": 16598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16568,
											"end": 16598,
											"name": "tag",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 16568,
											"end": 16598,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16467,
											"end": 16604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16467,
											"end": 16604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16677,
											"end": 16683,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16726,
											"end": 16728,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16714,
											"end": 16723,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16705,
											"end": 16712,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16701,
											"end": 16724,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16697,
											"end": 16729,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 16694,
											"end": 16813,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16694,
											"end": 16813,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 16694,
											"end": 16813,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16732,
											"end": 16811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "631"
										},
										{
											"begin": 16732,
											"end": 16811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 16732,
											"end": 16811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16732,
											"end": 16811,
											"name": "tag",
											"source": 15,
											"value": "631"
										},
										{
											"begin": 16732,
											"end": 16811,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16694,
											"end": 16813,
											"name": "tag",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 16694,
											"end": 16813,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16852,
											"end": 16853,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16877,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "632"
										},
										{
											"begin": 16930,
											"end": 16937,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16921,
											"end": 16927,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16910,
											"end": 16919,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16906,
											"end": 16928,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16877,
											"end": 16938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 16877,
											"end": 16938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16877,
											"end": 16938,
											"name": "tag",
											"source": 15,
											"value": "632"
										},
										{
											"begin": 16877,
											"end": 16938,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16867,
											"end": 16938,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16867,
											"end": 16938,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16823,
											"end": 16948,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16610,
											"end": 16955,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16610,
											"end": 16955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16961,
											"end": 17139,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 16961,
											"end": 17139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17101,
											"end": 17131,
											"name": "PUSH",
											"source": 15,
											"value": "546F6B656E20416D6F756E74207472616E73666572206661696C656400000000"
										},
										{
											"begin": 17097,
											"end": 17098,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17089,
											"end": 17095,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17085,
											"end": 17099,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17078,
											"end": 17132,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16961,
											"end": 17139,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16961,
											"end": 17139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17145,
											"end": 17511,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 17145,
											"end": 17511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17287,
											"end": 17290,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17308,
											"end": 17375,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 17372,
											"end": 17374,
											"name": "PUSH",
											"source": 15,
											"value": "1C"
										},
										{
											"begin": 17367,
											"end": 17370,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17308,
											"end": 17375,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 17308,
											"end": 17375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17308,
											"end": 17375,
											"name": "tag",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 17308,
											"end": 17375,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17301,
											"end": 17375,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17301,
											"end": 17375,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17384,
											"end": 17477,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 17473,
											"end": 17476,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17384,
											"end": 17477,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 17384,
											"end": 17477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17384,
											"end": 17477,
											"name": "tag",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 17384,
											"end": 17477,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17502,
											"end": 17504,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17497,
											"end": 17500,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17493,
											"end": 17505,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17486,
											"end": 17505,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17486,
											"end": 17505,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17145,
											"end": 17511,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17145,
											"end": 17511,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17145,
											"end": 17511,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17145,
											"end": 17511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17517,
											"end": 17936,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 17517,
											"end": 17936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17683,
											"end": 17687,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17721,
											"end": 17723,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17710,
											"end": 17719,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17706,
											"end": 17724,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17698,
											"end": 17724,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17698,
											"end": 17724,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17770,
											"end": 17779,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17764,
											"end": 17768,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17760,
											"end": 17780,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 17756,
											"end": 17757,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17745,
											"end": 17754,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17741,
											"end": 17758,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17734,
											"end": 17781,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17798,
											"end": 17929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 17924,
											"end": 17928,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17798,
											"end": 17929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 17798,
											"end": 17929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17798,
											"end": 17929,
											"name": "tag",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 17798,
											"end": 17929,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17790,
											"end": 17929,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17790,
											"end": 17929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17517,
											"end": 17936,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17517,
											"end": 17936,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17517,
											"end": 17936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17517,
											"end": 17936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17942,
											"end": 18036,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 17942,
											"end": 18036,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17975,
											"end": 17983,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18023,
											"end": 18028,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18019,
											"end": 18021,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 18015,
											"end": 18029,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 17994,
											"end": 18029,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17994,
											"end": 18029,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17942,
											"end": 18036,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17942,
											"end": 18036,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17942,
											"end": 18036,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17942,
											"end": 18036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18042,
											"end": 18136,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 18042,
											"end": 18136,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18081,
											"end": 18088,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18110,
											"end": 18130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 18124,
											"end": 18129,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18110,
											"end": 18130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 18110,
											"end": 18130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18110,
											"end": 18130,
											"name": "tag",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 18110,
											"end": 18130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18099,
											"end": 18130,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18099,
											"end": 18130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18042,
											"end": 18136,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18042,
											"end": 18136,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18042,
											"end": 18136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18042,
											"end": 18136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18142,
											"end": 18242,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 18142,
											"end": 18242,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18181,
											"end": 18188,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18210,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "643"
										},
										{
											"begin": 18230,
											"end": 18235,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18210,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 18210,
											"end": 18236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18210,
											"end": 18236,
											"name": "tag",
											"source": 15,
											"value": "643"
										},
										{
											"begin": 18210,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18199,
											"end": 18236,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18199,
											"end": 18236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18142,
											"end": 18242,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18142,
											"end": 18242,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18142,
											"end": 18242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18142,
											"end": 18242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18248,
											"end": 18405,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 18248,
											"end": 18405,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18353,
											"end": 18398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 18373,
											"end": 18397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 18391,
											"end": 18396,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18373,
											"end": 18397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 18373,
											"end": 18397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18373,
											"end": 18397,
											"name": "tag",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 18373,
											"end": 18397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18353,
											"end": 18398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 18353,
											"end": 18398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18353,
											"end": 18398,
											"name": "tag",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 18353,
											"end": 18398,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18348,
											"end": 18351,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18341,
											"end": 18399,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18248,
											"end": 18405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18248,
											"end": 18405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18248,
											"end": 18405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18411,
											"end": 18490,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 18411,
											"end": 18490,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18450,
											"end": 18457,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18479,
											"end": 18484,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18468,
											"end": 18484,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18468,
											"end": 18484,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18411,
											"end": 18490,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18411,
											"end": 18490,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18411,
											"end": 18490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18411,
											"end": 18490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18496,
											"end": 18653,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 18496,
											"end": 18653,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18601,
											"end": 18646,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "649"
										},
										{
											"begin": 18621,
											"end": 18645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 18639,
											"end": 18644,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18621,
											"end": 18645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 18621,
											"end": 18645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18621,
											"end": 18645,
											"name": "tag",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 18621,
											"end": 18645,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18601,
											"end": 18646,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 18601,
											"end": 18646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18601,
											"end": 18646,
											"name": "tag",
											"source": 15,
											"value": "649"
										},
										{
											"begin": 18601,
											"end": 18646,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18596,
											"end": 18599,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18589,
											"end": 18647,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18496,
											"end": 18653,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18496,
											"end": 18653,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18496,
											"end": 18653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18659,
											"end": 19479,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 18659,
											"end": 19479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18883,
											"end": 18886,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18898,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 18969,
											"end": 18972,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18960,
											"end": 18966,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 18898,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 18898,
											"end": 18973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18898,
											"end": 18973,
											"name": "tag",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 18898,
											"end": 18973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18998,
											"end": 19000,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 18993,
											"end": 18996,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18989,
											"end": 19001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18982,
											"end": 19001,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18982,
											"end": 19001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19011,
											"end": 19086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "653"
										},
										{
											"begin": 19082,
											"end": 19085,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19073,
											"end": 19079,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 19011,
											"end": 19086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 19011,
											"end": 19086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19011,
											"end": 19086,
											"name": "tag",
											"source": 15,
											"value": "653"
										},
										{
											"begin": 19011,
											"end": 19086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19111,
											"end": 19113,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 19106,
											"end": 19109,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19102,
											"end": 19114,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19095,
											"end": 19114,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19095,
											"end": 19114,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19124,
											"end": 19199,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 19195,
											"end": 19198,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19186,
											"end": 19192,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19124,
											"end": 19199,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 19124,
											"end": 19199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19124,
											"end": 19199,
											"name": "tag",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 19124,
											"end": 19199,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19224,
											"end": 19226,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19219,
											"end": 19222,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19215,
											"end": 19227,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19208,
											"end": 19227,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19208,
											"end": 19227,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19237,
											"end": 19312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "655"
										},
										{
											"begin": 19308,
											"end": 19311,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19299,
											"end": 19305,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19237,
											"end": 19312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 19237,
											"end": 19312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19237,
											"end": 19312,
											"name": "tag",
											"source": 15,
											"value": "655"
										},
										{
											"begin": 19237,
											"end": 19312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19337,
											"end": 19339,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19332,
											"end": 19335,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19328,
											"end": 19340,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19321,
											"end": 19340,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19321,
											"end": 19340,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19350,
											"end": 19425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 19421,
											"end": 19424,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19412,
											"end": 19418,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19350,
											"end": 19425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 19350,
											"end": 19425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19350,
											"end": 19425,
											"name": "tag",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 19350,
											"end": 19425,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19450,
											"end": 19452,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19445,
											"end": 19448,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19441,
											"end": 19453,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19434,
											"end": 19453,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19434,
											"end": 19453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19470,
											"end": 19473,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19463,
											"end": 19473,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19463,
											"end": 19473,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18659,
											"end": 19479,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 18659,
											"end": 19479,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 18659,
											"end": 19479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18659,
											"end": 19479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18659,
											"end": 19479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18659,
											"end": 19479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18659,
											"end": 19479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18659,
											"end": 19479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18659,
											"end": 19479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19485,
											"end": 19927,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 19485,
											"end": 19927,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19634,
											"end": 19638,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19672,
											"end": 19674,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 19661,
											"end": 19670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19657,
											"end": 19675,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19649,
											"end": 19675,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19649,
											"end": 19675,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19685,
											"end": 19756,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "658"
										},
										{
											"begin": 19753,
											"end": 19754,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19742,
											"end": 19751,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19738,
											"end": 19755,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19729,
											"end": 19735,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19685,
											"end": 19756,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 19685,
											"end": 19756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19685,
											"end": 19756,
											"name": "tag",
											"source": 15,
											"value": "658"
										},
										{
											"begin": 19685,
											"end": 19756,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19766,
											"end": 19838,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 19834,
											"end": 19836,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19823,
											"end": 19832,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19819,
											"end": 19837,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19810,
											"end": 19816,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19766,
											"end": 19838,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 19766,
											"end": 19838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19766,
											"end": 19838,
											"name": "tag",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 19766,
											"end": 19838,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19848,
											"end": 19920,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 19916,
											"end": 19918,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 19905,
											"end": 19914,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19892,
											"end": 19898,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19848,
											"end": 19920,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 19848,
											"end": 19920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19848,
											"end": 19920,
											"name": "tag",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 19848,
											"end": 19920,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19485,
											"end": 19927,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 19485,
											"end": 19927,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 19485,
											"end": 19927,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19485,
											"end": 19927,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19485,
											"end": 19927,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19485,
											"end": 19927,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19485,
											"end": 19927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19933,
											"end": 20018,
											"name": "tag",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 19933,
											"end": 20018,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19978,
											"end": 19985,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20007,
											"end": 20012,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19996,
											"end": 20012,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19996,
											"end": 20012,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19933,
											"end": 20018,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19933,
											"end": 20018,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19933,
											"end": 20018,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19933,
											"end": 20018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20024,
											"end": 20182,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 20024,
											"end": 20182,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20082,
											"end": 20091,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20115,
											"end": 20176,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 20133,
											"end": 20175,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 20142,
											"end": 20174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "665"
										},
										{
											"begin": 20168,
											"end": 20173,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20142,
											"end": 20174,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 20142,
											"end": 20174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20142,
											"end": 20174,
											"name": "tag",
											"source": 15,
											"value": "665"
										},
										{
											"begin": 20142,
											"end": 20174,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20133,
											"end": 20175,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 20133,
											"end": 20175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20133,
											"end": 20175,
											"name": "tag",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 20133,
											"end": 20175,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20115,
											"end": 20176,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 20115,
											"end": 20176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20115,
											"end": 20176,
											"name": "tag",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 20115,
											"end": 20176,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20102,
											"end": 20176,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20102,
											"end": 20176,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20024,
											"end": 20182,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20024,
											"end": 20182,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20024,
											"end": 20182,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20024,
											"end": 20182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20188,
											"end": 20335,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 20188,
											"end": 20335,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20283,
											"end": 20328,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 20322,
											"end": 20327,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20283,
											"end": 20328,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 20283,
											"end": 20328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20283,
											"end": 20328,
											"name": "tag",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 20283,
											"end": 20328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20278,
											"end": 20281,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20271,
											"end": 20329,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20188,
											"end": 20335,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20188,
											"end": 20335,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20188,
											"end": 20335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20341,
											"end": 20799,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 20341,
											"end": 20799,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20498,
											"end": 20502,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20536,
											"end": 20538,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 20525,
											"end": 20534,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20521,
											"end": 20539,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20513,
											"end": 20539,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20513,
											"end": 20539,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20549,
											"end": 20620,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "669"
										},
										{
											"begin": 20617,
											"end": 20618,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20606,
											"end": 20615,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20593,
											"end": 20599,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 20549,
											"end": 20620,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 20549,
											"end": 20620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20549,
											"end": 20620,
											"name": "tag",
											"source": 15,
											"value": "669"
										},
										{
											"begin": 20549,
											"end": 20620,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20630,
											"end": 20710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "670"
										},
										{
											"begin": 20706,
											"end": 20708,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20695,
											"end": 20704,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20691,
											"end": 20709,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20682,
											"end": 20688,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20630,
											"end": 20710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 20630,
											"end": 20710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20630,
											"end": 20710,
											"name": "tag",
											"source": 15,
											"value": "670"
										},
										{
											"begin": 20630,
											"end": 20710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20720,
											"end": 20792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "671"
										},
										{
											"begin": 20788,
											"end": 20790,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 20777,
											"end": 20786,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20773,
											"end": 20791,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20764,
											"end": 20770,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20720,
											"end": 20792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 20720,
											"end": 20792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20720,
											"end": 20792,
											"name": "tag",
											"source": 15,
											"value": "671"
										},
										{
											"begin": 20720,
											"end": 20792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20341,
											"end": 20799,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 20341,
											"end": 20799,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 20341,
											"end": 20799,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20341,
											"end": 20799,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20341,
											"end": 20799,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20341,
											"end": 20799,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20341,
											"end": 20799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20805,
											"end": 20953,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 20805,
											"end": 20953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20907,
											"end": 20918,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20944,
											"end": 20947,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20929,
											"end": 20947,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20929,
											"end": 20947,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20805,
											"end": 20953,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20805,
											"end": 20953,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20805,
											"end": 20953,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20805,
											"end": 20953,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20805,
											"end": 20953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20959,
											"end": 21349,
											"name": "tag",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 20959,
											"end": 21349,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21065,
											"end": 21068,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21093,
											"end": 21132,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 21126,
											"end": 21131,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21093,
											"end": 21132,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 21093,
											"end": 21132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21093,
											"end": 21132,
											"name": "tag",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 21093,
											"end": 21132,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21148,
											"end": 21237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "675"
										},
										{
											"begin": 21230,
											"end": 21236,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21225,
											"end": 21228,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21148,
											"end": 21237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 21148,
											"end": 21237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21148,
											"end": 21237,
											"name": "tag",
											"source": 15,
											"value": "675"
										},
										{
											"begin": 21148,
											"end": 21237,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21141,
											"end": 21237,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 21141,
											"end": 21237,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21246,
											"end": 21311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "676"
										},
										{
											"begin": 21304,
											"end": 21310,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21299,
											"end": 21302,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21292,
											"end": 21296,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21285,
											"end": 21290,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 21281,
											"end": 21297,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21246,
											"end": 21311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 21246,
											"end": 21311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21246,
											"end": 21311,
											"name": "tag",
											"source": 15,
											"value": "676"
										},
										{
											"begin": 21246,
											"end": 21311,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21336,
											"end": 21342,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 21331,
											"end": 21334,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21327,
											"end": 21343,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21320,
											"end": 21343,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21320,
											"end": 21343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21069,
											"end": 21349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20959,
											"end": 21349,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20959,
											"end": 21349,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20959,
											"end": 21349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20959,
											"end": 21349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20959,
											"end": 21349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21355,
											"end": 21790,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 21355,
											"end": 21790,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21535,
											"end": 21538,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21557,
											"end": 21652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "678"
										},
										{
											"begin": 21648,
											"end": 21651,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21639,
											"end": 21645,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21557,
											"end": 21652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 21557,
											"end": 21652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21557,
											"end": 21652,
											"name": "tag",
											"source": 15,
											"value": "678"
										},
										{
											"begin": 21557,
											"end": 21652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21550,
											"end": 21652,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21550,
											"end": 21652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21669,
											"end": 21764,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 21760,
											"end": 21763,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21751,
											"end": 21757,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21669,
											"end": 21764,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 21669,
											"end": 21764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21669,
											"end": 21764,
											"name": "tag",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 21669,
											"end": 21764,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21662,
											"end": 21764,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21662,
											"end": 21764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21781,
											"end": 21784,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21774,
											"end": 21784,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21774,
											"end": 21784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21355,
											"end": 21790,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 21355,
											"end": 21790,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21355,
											"end": 21790,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21355,
											"end": 21790,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21355,
											"end": 21790,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21355,
											"end": 21790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21796,
											"end": 21894,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 21796,
											"end": 21894,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21847,
											"end": 21853,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21881,
											"end": 21886,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21875,
											"end": 21887,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 21865,
											"end": 21887,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21865,
											"end": 21887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21796,
											"end": 21894,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21796,
											"end": 21894,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21796,
											"end": 21894,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21796,
											"end": 21894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21900,
											"end": 22068,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 21900,
											"end": 22068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21983,
											"end": 21994,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22017,
											"end": 22023,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22012,
											"end": 22015,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22005,
											"end": 22024,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22057,
											"end": 22061,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22052,
											"end": 22055,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22048,
											"end": 22062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22033,
											"end": 22062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22033,
											"end": 22062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21900,
											"end": 22068,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21900,
											"end": 22068,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21900,
											"end": 22068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21900,
											"end": 22068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21900,
											"end": 22068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22074,
											"end": 22447,
											"name": "tag",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 22074,
											"end": 22447,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22160,
											"end": 22163,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22188,
											"end": 22226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 22220,
											"end": 22225,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22188,
											"end": 22226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 22188,
											"end": 22226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22188,
											"end": 22226,
											"name": "tag",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 22188,
											"end": 22226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22242,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "684"
										},
										{
											"begin": 22305,
											"end": 22311,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22300,
											"end": 22303,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22242,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 22242,
											"end": 22312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22242,
											"end": 22312,
											"name": "tag",
											"source": 15,
											"value": "684"
										},
										{
											"begin": 22242,
											"end": 22312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22235,
											"end": 22312,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 22235,
											"end": 22312,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22321,
											"end": 22386,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "685"
										},
										{
											"begin": 22379,
											"end": 22385,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22374,
											"end": 22377,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22367,
											"end": 22371,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22360,
											"end": 22365,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 22356,
											"end": 22372,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22321,
											"end": 22386,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 22321,
											"end": 22386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22321,
											"end": 22386,
											"name": "tag",
											"source": 15,
											"value": "685"
										},
										{
											"begin": 22321,
											"end": 22386,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22411,
											"end": 22440,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 22433,
											"end": 22439,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22411,
											"end": 22440,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 22411,
											"end": 22440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22411,
											"end": 22440,
											"name": "tag",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 22411,
											"end": 22440,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22406,
											"end": 22409,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22402,
											"end": 22441,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22395,
											"end": 22441,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22395,
											"end": 22441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22164,
											"end": 22447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22074,
											"end": 22447,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 22074,
											"end": 22447,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22074,
											"end": 22447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22074,
											"end": 22447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22074,
											"end": 22447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22453,
											"end": 23093,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 22453,
											"end": 23093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22648,
											"end": 22652,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22686,
											"end": 22689,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 22675,
											"end": 22684,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22671,
											"end": 22690,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22663,
											"end": 22690,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22663,
											"end": 22690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22700,
											"end": 22771,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "688"
										},
										{
											"begin": 22768,
											"end": 22769,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22757,
											"end": 22766,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22753,
											"end": 22770,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22744,
											"end": 22750,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 22700,
											"end": 22771,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 22700,
											"end": 22771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22700,
											"end": 22771,
											"name": "tag",
											"source": 15,
											"value": "688"
										},
										{
											"begin": 22700,
											"end": 22771,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22781,
											"end": 22853,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "689"
										},
										{
											"begin": 22849,
											"end": 22851,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22838,
											"end": 22847,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22834,
											"end": 22852,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22825,
											"end": 22831,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 22781,
											"end": 22853,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 22781,
											"end": 22853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22781,
											"end": 22853,
											"name": "tag",
											"source": 15,
											"value": "689"
										},
										{
											"begin": 22781,
											"end": 22853,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22863,
											"end": 22935,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 22931,
											"end": 22933,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 22920,
											"end": 22929,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22916,
											"end": 22934,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22907,
											"end": 22913,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22863,
											"end": 22935,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 22863,
											"end": 22935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22863,
											"end": 22935,
											"name": "tag",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 22863,
											"end": 22935,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22982,
											"end": 22991,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22976,
											"end": 22980,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22972,
											"end": 22992,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 22967,
											"end": 22969,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 22956,
											"end": 22965,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22952,
											"end": 22970,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22945,
											"end": 22993,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23010,
											"end": 23086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 23081,
											"end": 23085,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23072,
											"end": 23078,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23010,
											"end": 23086,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 23010,
											"end": 23086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23010,
											"end": 23086,
											"name": "tag",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 23010,
											"end": 23086,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23002,
											"end": 23086,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23002,
											"end": 23086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22453,
											"end": 23093,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 22453,
											"end": 23093,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 22453,
											"end": 23093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22453,
											"end": 23093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22453,
											"end": 23093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22453,
											"end": 23093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22453,
											"end": 23093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22453,
											"end": 23093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23099,
											"end": 23240,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 23099,
											"end": 23240,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23155,
											"end": 23160,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23186,
											"end": 23192,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23180,
											"end": 23193,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 23171,
											"end": 23193,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23171,
											"end": 23193,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23202,
											"end": 23234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 23228,
											"end": 23233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23202,
											"end": 23234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 23202,
											"end": 23234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23202,
											"end": 23234,
											"name": "tag",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 23202,
											"end": 23234,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23099,
											"end": 23240,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23099,
											"end": 23240,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23099,
											"end": 23240,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23099,
											"end": 23240,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23099,
											"end": 23240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23246,
											"end": 23595,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 23246,
											"end": 23595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23315,
											"end": 23321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23364,
											"end": 23366,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23352,
											"end": 23361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23343,
											"end": 23350,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23339,
											"end": 23362,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 23335,
											"end": 23367,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 23332,
											"end": 23451,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 23332,
											"end": 23451,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "695"
										},
										{
											"begin": 23332,
											"end": 23451,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 23370,
											"end": 23449,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "696"
										},
										{
											"begin": 23370,
											"end": 23449,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 23370,
											"end": 23449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23370,
											"end": 23449,
											"name": "tag",
											"source": 15,
											"value": "696"
										},
										{
											"begin": 23370,
											"end": 23449,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23332,
											"end": 23451,
											"name": "tag",
											"source": 15,
											"value": "695"
										},
										{
											"begin": 23332,
											"end": 23451,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23490,
											"end": 23491,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23515,
											"end": 23578,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "697"
										},
										{
											"begin": 23570,
											"end": 23577,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23561,
											"end": 23567,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23550,
											"end": 23559,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 23546,
											"end": 23568,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23515,
											"end": 23578,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 23515,
											"end": 23578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23515,
											"end": 23578,
											"name": "tag",
											"source": 15,
											"value": "697"
										},
										{
											"begin": 23515,
											"end": 23578,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23505,
											"end": 23578,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23505,
											"end": 23578,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23461,
											"end": 23588,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23246,
											"end": 23595,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23246,
											"end": 23595,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23246,
											"end": 23595,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23246,
											"end": 23595,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23246,
											"end": 23595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23601,
											"end": 23781,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 23601,
											"end": 23781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23649,
											"end": 23726,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23646,
											"end": 23647,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23639,
											"end": 23727,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23746,
											"end": 23750,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 23743,
											"end": 23744,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 23736,
											"end": 23751,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23770,
											"end": 23774,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 23767,
											"end": 23768,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23760,
											"end": 23775,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 23787,
											"end": 24119,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 23787,
											"end": 24119,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23908,
											"end": 23912,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23946,
											"end": 23948,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 23935,
											"end": 23944,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23931,
											"end": 23949,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23923,
											"end": 23949,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23923,
											"end": 23949,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23959,
											"end": 24030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 24027,
											"end": 24028,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24016,
											"end": 24025,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24012,
											"end": 24029,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24003,
											"end": 24009,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 23959,
											"end": 24030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 23959,
											"end": 24030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23959,
											"end": 24030,
											"name": "tag",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 23959,
											"end": 24030,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24040,
											"end": 24112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "701"
										},
										{
											"begin": 24108,
											"end": 24110,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24097,
											"end": 24106,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24093,
											"end": 24111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24084,
											"end": 24090,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24040,
											"end": 24112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 24040,
											"end": 24112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24040,
											"end": 24112,
											"name": "tag",
											"source": 15,
											"value": "701"
										},
										{
											"begin": 24040,
											"end": 24112,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23787,
											"end": 24119,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 23787,
											"end": 24119,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23787,
											"end": 24119,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23787,
											"end": 24119,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23787,
											"end": 24119,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23787,
											"end": 24119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTPatient.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getTransactionStatus(bytes32)": "94407465",
							"housewallet()": "863b3894",
							"isApprovedForAll(address,address)": "e985e9c5",
							"markTransactionCompleted(bytes32)": "37418972",
							"mintNFT(address,uint256)": "3c168eab",
							"myToken()": "b8fcf937",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferNFT(address,uint256)": "94ab67fe",
							"transferNFTWithToken(address,uint256,uint256)": "8f3481c0",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_myTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_housewallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"NFTTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"getTransactionStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"housewallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"markTransactionCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mintNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"transferNFTWithToken\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTPatient.sol\":\"NFTPatientHealthChain\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/NFTPatient.sol\":{\"keccak256\":\"0x0da1b0fe027717a73663c9aef652b8d0f66872da41b3c5e41720072f35bb9520\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af1e8bdb06d2752841951a954452763aaa452a27dd5ef4e7c71e8f336ea5dfad\",\"dweb:/ipfs/QmWLzdEfNxPME3xxHEVGZgECdcYKgxrKD41z7h4FpXV1wM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 395,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 397,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 401,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 405,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 409,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 415,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 8,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 3097,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "_tokenIds",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)1562_storage"
							},
							{
								"astId": 3100,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "myToken",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IERC20)362"
							},
							{
								"astId": 3102,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "housewallet",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 3106,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "_nftExists",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 3110,
								"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
								"label": "_completedTransactions",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_bytes32,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)362": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1562_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1561,
										"contract": "contracts/NFTPatient.sol:NFTPatientHealthChain",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1556
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1557,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1556,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1556,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1556
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1546,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							362
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 296,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 305,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 362,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 362,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 362,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 362,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 346,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 362,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 362,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 363,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								296,
								305
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1556
						],
						"ERC165": [
							1909
						],
						"ERC721": [
							1371
						],
						"IERC165": [
							1921
						],
						"IERC721": [
							1488
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1534
						],
						"IERC721Receiver": [
							1506
						],
						"Strings": [
							1885
						]
					},
					"id": 1372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 1489,
							"src": "133:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 365,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1488,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 1507,
							"src": "172:54:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 367,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1506,
										"src": "180:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 1535,
							"src": "227:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 369,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1534,
										"src": "235:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 1557,
							"src": "293:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 371,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1556,
										"src": "301:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 1886,
							"src": "342:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 373,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1885,
										"src": "350:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 377,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 1910,
							"src": "391:69:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 375,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1921,
										"src": "399:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 376,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1909,
										"src": "408:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 285,
							"src": "461:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 378,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 381,
										"name": "Context",
										"nameLocations": [
											"804:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1556,
										"src": "804:7:3"
									},
									"id": 382,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:3"
								},
								{
									"baseName": {
										"id": 383,
										"name": "ERC165",
										"nameLocations": [
											"813:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1909,
										"src": "813:6:3"
									},
									"id": 384,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:3"
								},
								{
									"baseName": {
										"id": 385,
										"name": "IERC721",
										"nameLocations": [
											"821:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1488,
										"src": "821:7:3"
									},
									"id": 386,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:3"
								},
								{
									"baseName": {
										"id": 387,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1534,
										"src": "830:15:3"
									},
									"id": 388,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:3"
								},
								{
									"baseName": {
										"id": 389,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:3"
									},
									"id": 390,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:3"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 380,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:3",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1371,
							"linearizedBaseContracts": [
								1371,
								237,
								1534,
								1488,
								1909,
								1921,
								1556
							],
							"name": "ERC721",
							"nameLocation": "794:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 393,
									"libraryName": {
										"id": 391,
										"name": "Strings",
										"nameLocations": [
											"873:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1885,
										"src": "873:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:3",
									"typeName": {
										"id": 392,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 395,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "917:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 394,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 397,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "964:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 396,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 401,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "993:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 400,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:3",
										"keyType": {
											"id": 398,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 399,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "1051:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 404,
										"keyName": "owner",
										"keyNameLocation": "1067:5:3",
										"keyType": {
											"id": 402,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 403,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "1109:59:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 408,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:3",
										"keyType": {
											"id": 406,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 407,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "1175:86:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 414,
										"keyName": "owner",
										"keyNameLocation": "1191:5:3",
										"keyType": {
											"id": 410,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 413,
											"keyName": "operator",
											"keyNameLocation": "1216:8:3",
											"keyType": {
												"id": 411,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 412,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1437:57:3",
										"statements": [
											{
												"expression": {
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 423,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "1447:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 424,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1455:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:3"
											},
											{
												"expression": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 427,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "1470:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 428,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "1480:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:3"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 432,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1393:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1414:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:3"
									},
									"scope": 1371,
									"src": "1381:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1908,
										1920
									],
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "1669:192:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 443,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "1698:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 445,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1488,
																			"src": "1718:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1488_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1488_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 444,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1488",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 449,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "1754:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 451,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1534,
																			"src": "1774:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1534_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1534_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 450,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1534",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 458,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "1842:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 456,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1371_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1908,
															"src": "1818:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 442,
												"id": 461,
												"nodeType": "Return",
												"src": "1679:175:3"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 439,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 437,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1909,
												"src": "1637:6:3"
											},
											{
												"id": 438,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "1645:7:3"
											}
										],
										"src": "1628:25:3"
									},
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1588:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 434,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:3"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1663:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:3"
									},
									"scope": 1371,
									"src": "1561:300:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1413
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "1992:136:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 471,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "2006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 472,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"nodeType": "IfStatement",
												"src": "2002:87:3",
												"trueBody": {
													"id": 484,
													"nodeType": "Block",
													"src": "2027:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 478,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 477,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 483,
															"nodeType": "RevertStatement",
															"src": "2041:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 486,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "2105:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "2115:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 470,
												"id": 489,
												"nodeType": "Return",
												"src": "2098:23:3"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1939:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:3"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1983:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:3"
									},
									"scope": 1371,
									"src": "1920:208:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1421
									],
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "2257:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 500,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "2288:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "2274:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 498,
												"id": 502,
												"nodeType": "Return",
												"src": "2267:29:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "2202:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:3"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "2248:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:3"
									},
									"scope": 1371,
									"src": "2185:118:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1519
									],
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "2425:29:3",
										"statements": [
											{
												"expression": {
													"id": 510,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 395,
													"src": "2442:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 509,
												"id": 511,
												"nodeType": "Return",
												"src": "2435:12:3"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "2410:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:3"
									},
									"scope": 1371,
									"src": "2365:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1525
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "2580:31:3",
										"statements": [
											{
												"expression": {
													"id": 519,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "2597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 518,
												"id": 520,
												"nodeType": "Return",
												"src": "2590:14:3"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:3"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2565:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 516,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:3"
									},
									"scope": 1371,
									"src": "2518:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1533
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "2756:176:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "2780:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "2766:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:3"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "2799:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 534,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 536,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "2823:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 541,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "2856:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 539,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "2892:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 550,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "2901:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:3",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1698,
																	"src": "2901:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 546,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:3",
																	"typeDescriptions": {}
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:3",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 529,
												"id": 556,
												"nodeType": "Return",
												"src": "2843:82:3"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2695:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2741:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 527,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:3"
									},
									"scope": 1371,
									"src": "2677:255:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3240:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 563,
												"id": 565,
												"nodeType": "Return",
												"src": "3250:9:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3225:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:3"
									},
									"scope": 1371,
									"src": "3174:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1461
									],
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "3384:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "3403:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "3407:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 578,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "3416:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 575,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1174,
															1240
														],
														"referencedDeclaration": 1174,
														"src": "3394:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "3340:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "3352:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:3"
									},
									"scope": 1371,
									"src": "3323:113:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1477
									],
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "3573:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "3597:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "3583:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "3636:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "3623:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 590,
												"id": 598,
												"nodeType": "Return",
												"src": "3616:28:3"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "3564:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:3"
									},
									"scope": 1371,
									"src": "3497:154:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1469
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3793:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 609,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "3822:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "3836:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "3846:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 608,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "3803:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:3"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3745:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3763:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:3"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:3"
									},
									"scope": 1371,
									"src": "3718:144:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1487
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4022:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 626,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4039:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 628,
														"indexExpression": {
															"id": 627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4058:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 630,
													"indexExpression": {
														"id": 629,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "4065:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 625,
												"id": 631,
												"nodeType": "Return",
												"src": "4032:42:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3954:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3969:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4016:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:3"
									},
									"scope": 1371,
									"src": "3928:153:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1453
									],
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "4223:498:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "4237:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 657,
												"nodeType": "IfStatement",
												"src": "4233:87:3",
												"trueBody": {
													"id": 656,
													"nodeType": "Block",
													"src": "4255:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 650,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 649,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 655,
															"nodeType": "RevertStatement",
															"src": "4269:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "4538:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 658,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4570:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4574:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 663,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "4583:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 660,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "4562:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 667,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "4610:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 668,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "4627:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "4606:109:3",
												"trueBody": {
													"id": 676,
													"nodeType": "Block",
													"src": "4633:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 671,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "4675:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 672,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "4681:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 673,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "4690:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 670,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 675,
															"nodeType": "RevertStatement",
															"src": "4647:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4165:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4179:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4191:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:3"
									},
									"scope": 1371,
									"src": "4143:578:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1443
									],
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "4863:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 690,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "4890:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4896:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "4900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 689,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															697,
															723
														],
														"referencedDeclaration": 723,
														"src": "4873:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:3"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "4813:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "4827:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "4839:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:3"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:3"
									},
									"scope": 1371,
									"src": "4787:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1433
									],
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "5088:105:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 710,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "5111:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "5117:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5121:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 709,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "5098:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 716,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "5162:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 717,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "5168:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5172:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 719,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "5181:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 715,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "5139:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:3"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5011:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5025:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5037:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "5054:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 705,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:3"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:3"
									},
									"scope": 1371,
									"src": "4985:208:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "5782:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 731,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "5799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 733,
													"indexExpression": {
														"id": 732,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "5807:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 730,
												"id": 734,
												"nodeType": "Return",
												"src": "5792:23:3"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:3",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5725:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "5773:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:3"
									},
									"scope": 1371,
									"src": "5707:115:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "6017:48:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 744,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "6034:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 746,
													"indexExpression": {
														"id": 745,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "6050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 743,
												"id": 747,
												"nodeType": "Return",
												"src": "6027:31:3"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:3",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "5960:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:3"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "6008:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:3"
									},
									"scope": 1371,
									"src": "5938:127:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "6485:163:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 761,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "6514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 767,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 752,
																			"src": "6552:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 768,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 754,
																			"src": "6561:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 771,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 752,
																				"src": "6589:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 772,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 754,
																				"src": "6596:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 770,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "6572:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 776,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 756,
																				"src": "6621:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 775,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "6608:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 778,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "6633:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 781,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 760,
												"id": 783,
												"nodeType": "Return",
												"src": "6495:146:3"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:3",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "6399:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "6414:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "6431:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "6479:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:3"
									},
									"scope": 1371,
									"src": "6376:272:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "7179:271:3",
										"statements": [
											{
												"condition": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:3",
													"subExpression": {
														"arguments": [
															{
																"id": 796,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "7208:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 797,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "7215:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 798,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "7224:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 795,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "7194:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 820,
												"nodeType": "IfStatement",
												"src": "7189:255:3",
												"trueBody": {
													"id": 819,
													"nodeType": "Block",
													"src": "7234:210:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 801,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "7252:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 802,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 817,
																"nodeType": "Block",
																"src": "7350:84:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 813,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 790,
																					"src": "7402:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 814,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "7411:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 812,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 816,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:3"
																	}
																]
															},
															"id": 818,
															"nodeType": "IfStatement",
															"src": "7248:186:3",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "7273:71:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 808,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "7321:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 807,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 810,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:3",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "7108:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "7123:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "7140:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:3"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:3"
									},
									"scope": 1371,
									"src": "7082:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "8167:78:3",
										"statements": [
											{
												"id": 836,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:3",
												"statements": [
													{
														"expression": {
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 830,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "8201:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 832,
																"indexExpression": {
																	"id": 831,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "8211:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 833,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "8223:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 835,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:3",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "8118:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "8135:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 826,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:3"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:3"
									},
									"scope": 1371,
									"src": "8092:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "8933:700:3",
										"statements": [
											{
												"assignments": [
													851
												],
												"declarations": [
													{
														"constant": false,
														"id": 851,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 927,
														"src": "8943:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 850,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"arguments": [
														{
															"id": 853,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "8967:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "8958:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 856,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "9035:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 857,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "9031:86:3",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "9055:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 863,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "9086:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 864,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "9092:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 865,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "9098:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 862,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "9069:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 870,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "9161:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 871,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "IfStatement",
												"src": "9157:256:3",
												"trueBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "9181:232:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 879,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 877,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 881,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "9298:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 876,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1174,
																		1240
																	],
																	"referencedDeclaration": 1240,
																	"src": "9277:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 888,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:3"
														},
														{
															"id": 895,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:3",
															"statements": [
																{
																	"expression": {
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 889,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "9368:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 891,
																			"indexExpression": {
																				"id": 890,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 851,
																				"src": "9378:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 894,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:3"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 898,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "9427:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 899,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 912,
												"nodeType": "IfStatement",
												"src": "9423:107:3",
												"trueBody": {
													"id": 911,
													"nodeType": "Block",
													"src": "9445:85:3",
													"statements": [
														{
															"id": 910,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:3",
															"statements": [
																{
																	"expression": {
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 904,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "9487:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 906,
																			"indexExpression": {
																				"id": 905,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 841,
																				"src": "9497:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 909,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:3"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 913,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "9540:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 915,
														"indexExpression": {
															"id": 914,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "9548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 916,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "9559:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 920,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "9586:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "9592:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "9596:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 919,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "9577:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "EmitStatement",
												"src": "9572:32:3"
											},
											{
												"expression": {
													"id": 925,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 851,
													"src": "9622:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 849,
												"id": 926,
												"nodeType": "Return",
												"src": "9615:11:3"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:3",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "8855:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "8867:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "8884:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:3"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "8924:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:3"
									},
									"scope": 1371,
									"src": "8838:795:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "10008:274:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 936,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "10022:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 937,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 950,
												"nodeType": "IfStatement",
												"src": "10018:87:3",
												"trueBody": {
													"id": 949,
													"nodeType": "Block",
													"src": "10040:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 943,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 942,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10061:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 948,
															"nodeType": "RevertStatement",
															"src": "10054:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "10114:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 951,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 961,
												"initialValue": {
													"arguments": [
														{
															"id": 954,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "10146:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "10150:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 956,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 953,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10138:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "10184:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 963,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "10180:96:3",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "10213:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 969,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 968,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10234:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "10227:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "9970:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:3"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:3"
									},
									"scope": 1371,
									"src": "9955:327:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "10690:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "10710:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "10714:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 986,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															993,
															1019
														],
														"referencedDeclaration": 1019,
														"src": "10700:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:3"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:3",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "10652:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "10664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:3"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:3"
									},
									"scope": 1371,
									"src": "10633:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "11038:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "11054:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "11058:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "11048:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "11111:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "11115:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1015,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "11124:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1008,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "11076:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:3"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "10973:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "10985:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "11002:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:3"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:3"
									},
									"scope": 1371,
									"src": "10954:182:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "11503:186:3",
										"statements": [
											{
												"assignments": [
													1026
												],
												"declarations": [
													{
														"constant": false,
														"id": 1026,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1051,
														"src": "11513:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1025,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1038,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1028,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "11557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1033,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1027,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "11537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1039,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "11591:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1040,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1050,
												"nodeType": "IfStatement",
												"src": "11587:96:3",
												"trueBody": {
													"id": 1049,
													"nodeType": "Block",
													"src": "11620:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1046,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "11664:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1045,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11641:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1048,
															"nodeType": "RevertStatement",
															"src": "11634:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "11477:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:3"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:3"
									},
									"scope": 1371,
									"src": "11462:227:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "12084:389:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1062,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "12098:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1063,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "12094:87:3",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "12116:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1069,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1068,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12137:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1074,
															"nodeType": "RevertStatement",
															"src": "12130:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1111,
														"src": "12190:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1077,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1087,
												"initialValue": {
													"arguments": [
														{
															"id": 1080,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "12222:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "12226:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1082,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1079,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "12214:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1088,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "12260:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1089,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1099,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "12362:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1100,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "12379:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1109,
													"nodeType": "IfStatement",
													"src": "12358:109:3",
													"trueBody": {
														"id": 1108,
														"nodeType": "Block",
														"src": "12385:82:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1103,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1055,
																			"src": "12427:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1104,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1059,
																			"src": "12433:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1105,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "12442:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1102,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12406:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1107,
																"nodeType": "RevertStatement",
																"src": "12399:57:3"
															}
														]
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "12256:211:3",
												"trueBody": {
													"id": 1098,
													"nodeType": "Block",
													"src": "12289:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1095,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "12333:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1094,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12310:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1097,
															"nodeType": "RevertStatement",
															"src": "12303:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "12032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "12046:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "12058:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:3"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:3"
									},
									"scope": 1371,
									"src": "12013:460:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "13481:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "13505:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "13511:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "13515:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1122,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1130,
															1156
														],
														"referencedDeclaration": 1156,
														"src": "13491:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:3"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "13429:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "13443:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "13455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:3"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:3"
									},
									"scope": 1371,
									"src": "13406:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "13873:102:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1143,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "13893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "13899:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1145,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "13903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1142,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "13883:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1149,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "13944:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "13950:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "13954:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1152,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "13963:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1148,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "13921:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:3"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:3",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13808:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13820:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13837:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:3"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:3"
									},
									"scope": 1371,
									"src": "13771:204:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "14488:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1167,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "14507:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1168,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "14511:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1169,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "14520:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1166,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1174,
															1240
														],
														"referencedDeclaration": 1240,
														"src": "14498:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:3"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "14436:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "14448:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "14465:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:3"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:3"
									},
									"scope": 1371,
									"src": "14418:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "14814:568:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1186,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "14880:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1187,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "14893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1188,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1232,
												"nodeType": "IfStatement",
												"src": "14876:460:3",
												"trueBody": {
													"id": 1231,
													"nodeType": "Block",
													"src": "14913:423:3",
													"statements": [
														{
															"assignments": [
																1195
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1195,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1231,
																	"src": "14927:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1194,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1199,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1197,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "14957:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1196,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "14943:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1200,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1181,
																			"src": "15093:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1201,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1206,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1195,
																			"src": "15115:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1207,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1181,
																			"src": "15124:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1211,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1195,
																				"src": "15150:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1212,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1181,
																				"src": "15157:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1210,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "15133:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1221,
															"nodeType": "IfStatement",
															"src": "15089:142:3",
															"trueBody": {
																"id": 1220,
																"nodeType": "Block",
																"src": "15164:67:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1217,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1181,
																					"src": "15211:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1216,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15189:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1219,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:3"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1222,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "15249:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1230,
															"nodeType": "IfStatement",
															"src": "15245:81:3",
															"trueBody": {
																"id": 1229,
																"nodeType": "Block",
																"src": "15260:66:3",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1224,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1195,
																					"src": "15292:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1225,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1177,
																					"src": "15299:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1226,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "15303:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1223,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1396,
																				"src": "15283:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1228,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1233,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15346:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1235,
														"indexExpression": {
															"id": 1234,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "15362:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1236,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "15373:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:3"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:3",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "14738:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "14750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "14767:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "14781:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:3"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:3"
									},
									"scope": 1371,
									"src": "14720:662:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "15684:219:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1250,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "15698:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1251,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1261,
												"nodeType": "IfStatement",
												"src": "15694:91:3",
												"trueBody": {
													"id": 1260,
													"nodeType": "Block",
													"src": "15722:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1257,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "15765:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1256,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15743:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1259,
															"nodeType": "RevertStatement",
															"src": "15736:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1262,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "15794:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1265,
															"indexExpression": {
																"id": 1263,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "15813:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1266,
														"indexExpression": {
															"id": 1264,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "15820:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1267,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "15832:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1271,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "15870:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1272,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "15877:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "15887:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1270,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "15855:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "EmitStatement",
												"src": "15850:46:3"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "15619:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "15634:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "15652:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:3"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:3"
									},
									"scope": 1371,
									"src": "15591:312:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "16210:169:3",
										"statements": [
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1305,
														"src": "16220:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1285,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"arguments": [
														{
															"id": 1288,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "16245:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1287,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "16236:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "16267:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1302,
												"nodeType": "IfStatement",
												"src": "16263:88:3",
												"trueBody": {
													"id": 1301,
													"nodeType": "Block",
													"src": "16288:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1298,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "16332:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1297,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16309:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1300,
															"nodeType": "RevertStatement",
															"src": "16302:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1303,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1286,
													"src": "16367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1304,
												"nodeType": "Return",
												"src": "16360:12:3"
											}
										]
									},
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:3",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "16161:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:3"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "16201:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:3"
									},
									"scope": 1371,
									"src": "16138:241:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "17020:680:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1318,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1311,
																"src": "17034:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1368,
												"nodeType": "IfStatement",
												"src": "17030:664:3",
												"trueBody": {
													"id": 1367,
													"nodeType": "Block",
													"src": "17054:640:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1347,
																		"nodeType": "Block",
																		"src": "17168:162:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1340,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1336,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1334,
																						"src": "17190:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1337,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1506,
																								"src": "17200:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1506_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1338,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:3",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1505,
																							"src": "17200:32:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1339,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:3",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1346,
																				"nodeType": "IfStatement",
																				"src": "17186:130:3",
																				"trueBody": {
																					"id": 1345,
																					"nodeType": "Block",
																					"src": "17243:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1342,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1311,
																										"src": "17294:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1341,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17272:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1343,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1344,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1348,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1335,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1334,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1348,
																				"src": "17153:13:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1333,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:3"
																	},
																	"src": "17144:186:3"
																},
																{
																	"block": {
																		"id": 1364,
																		"nodeType": "Block",
																		"src": "17359:325:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1352,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1350,
																							"src": "17381:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1353,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:3",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1354,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1362,
																					"nodeType": "Block",
																					"src": "17480:190:3",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:3",
																								"nodeType": "YulBlock",
																								"src": "17566:86:3",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:3",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:3",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:3"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:3",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:3"
																													},
																													"nativeSrc": "17599:15:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:3"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:3",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:3"
																													},
																													"nativeSrc": "17616:13:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:3"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:3"
																											},
																											"nativeSrc": "17592:38:3",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:3"
																										},
																										"nativeSrc": "17592:38:3",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:3"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1350,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:3",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1350,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:3",
																									"valueSize": 1
																								}
																							],
																							"id": 1361,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:3"
																						}
																					]
																				},
																				"id": 1363,
																				"nodeType": "IfStatement",
																				"src": "17377:293:3",
																				"trueBody": {
																					"id": 1360,
																					"nodeType": "Block",
																					"src": "17401:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1357,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1311,
																										"src": "17452:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1356,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17430:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1358,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1359,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1365,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1351,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1350,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1365,
																				"src": "17338:19:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1349,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:3"
																	},
																	"src": "17331:353:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1327,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1546,
																			"src": "17109:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1329,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "17123:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1330,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "17129:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1331,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "17138:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1324,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1311,
																				"src": "17088:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1323,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "17072:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1506_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1506",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:3",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1505,
																	"src": "17072:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1366,
															"nodeType": "TryStatement",
															"src": "17068:616:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:3",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "16950:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "16964:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "16976:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "16993:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:3"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:3"
									},
									"scope": 1371,
									"src": "16918:782:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1372,
							"src": "776:16926:3",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1387,
								1396,
								1405
							]
						}
					],
					"src": "107:17596:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1921
						],
						"IERC721": [
							1488
						]
					},
					"id": 1489,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1373,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1375,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1489,
							"sourceUnit": 1922,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1374,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1921,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1377,
										"name": "IERC165",
										"nameLocations": [
											"287:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1921,
										"src": "287:7:4"
									},
									"id": 1378,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1376,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1488,
							"linearizedBaseContracts": [
								1488,
								1921
							],
							"name": "IERC721",
							"nameLocation": "276:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1387,
									"name": "Transfer",
									"nameLocation": "400:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "409:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "431:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "451:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:4"
									},
									"src": "394:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1396,
									"name": "Approval",
									"nameLocation": "587:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "596:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "619:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:4"
									},
									"src": "581:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1405,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "819:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "842:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:4"
									},
									"src": "798:85:4"
								},
								{
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:4"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 1488,
									"src": "970:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "1203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:4"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "1243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:4"
									},
									"scope": 1488,
									"src": "1186:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1860:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1903:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1429,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:4"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 1488,
									"src": "1834:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "2675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "2689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "2701:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:4"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 1488,
									"src": "2649:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "3492:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "3506:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:4"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:4"
									},
									"scope": 1488,
									"src": "3470:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "4024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "4036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:4"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:4"
									},
									"scope": 1488,
									"src": "4007:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "4433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:4"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:4"
									},
									"scope": 1488,
									"src": "4388:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "4628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:4"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "4668:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:4"
									},
									"scope": 1488,
									"src": "4607:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4861:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4876:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:4"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:4"
									},
									"scope": 1488,
									"src": "4835:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1489,
							"src": "266:4659:4",
							"usedErrors": [],
							"usedEvents": [
								1387,
								1396,
								1405
							]
						}
					],
					"src": "108:4818:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1506
						]
					},
					"id": 1507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1490,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1491,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1506,
							"linearizedBaseContracts": [
								1506
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "940:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:5"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "984:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:5"
									},
									"scope": 1506,
									"src": "832:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1507,
							"src": "295:699:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1488
						],
						"IERC721Metadata": [
							1534
						]
					},
					"id": 1535,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1508,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1510,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1535,
							"sourceUnit": 1489,
							"src": "153:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1509,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1488,
										"src": "161:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1512,
										"name": "IERC721",
										"nameLocations": [
											"357:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1488,
										"src": "357:7:6"
									},
									"id": 1513,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1511,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1534,
							"linearizedBaseContracts": [
								1534,
								1488,
								1921
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:6"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "473:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1516,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:6"
									},
									"scope": 1534,
									"src": "434:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:6"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "600:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1522,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:6"
									},
									"scope": 1534,
									"src": "559:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "734:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:6"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "774:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1530,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:6"
									},
									"scope": 1534,
									"src": "716:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1535,
							"src": "328:463:6",
							"usedErrors": [],
							"usedEvents": [
								1387,
								1396,
								1405
							]
						}
					],
					"src": "127:665:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1556
						]
					},
					"id": 1557,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1536,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1537,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1556,
							"linearizedBaseContracts": [
								1556
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1542,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1541,
												"id": 1544,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1556,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1551,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1550,
												"id": 1553,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1556,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1557,
							"src": "624:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1630
						]
					},
					"id": 1631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1558,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1559,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:8",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1630,
							"linearizedBaseContracts": [
								1630
							],
							"name": "Counters",
							"nameLocation": "432:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1562,
									"members": [
										{
											"constant": false,
											"id": 1561,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1562,
											"src": "786:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1560,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:8",
									"nodeType": "StructDefinition",
									"scope": 1630,
									"src": "447:374:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "901:38:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1570,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "918:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:8",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1561,
													"src": "918:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1569,
												"id": 1572,
												"nodeType": "Return",
												"src": "911:21:8"
											}
										]
									},
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "844:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1563,
														"name": "Counter",
														"nameLocations": [
															"844:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1562,
														"src": "844:7:8"
													},
													"referencedDeclaration": 1562,
													"src": "844:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:8"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "892:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:8"
									},
									"scope": 1630,
									"src": "827:112:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "998:70:8",
										"statements": [
											{
												"id": 1586,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:8",
												"statements": [
													{
														"expression": {
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1580,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "1032:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:8",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1561,
																"src": "1032:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1585,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:8"
													}
												]
											}
										]
									},
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "964:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1575,
														"name": "Counter",
														"nameLocations": [
															"964:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1562,
														"src": "964:7:8"
													},
													"referencedDeclaration": 1562,
													"src": "964:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:8"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:8"
									},
									"scope": 1630,
									"src": "945:123:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "1127:176:8",
										"statements": [
											{
												"assignments": [
													1595
												],
												"declarations": [
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "1137:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1594,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1598,
												"initialValue": {
													"expression": {
														"id": 1596,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "1153:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:8",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1561,
													"src": "1153:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1600,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "1185:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:8"
											},
											{
												"id": 1614,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:8",
												"statements": [
													{
														"expression": {
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1606,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "1260:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1608,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:8",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1561,
																"src": "1260:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1609,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "1277:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1613,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:8"
													}
												]
											}
										]
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1093:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1590,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1589,
														"name": "Counter",
														"nameLocations": [
															"1093:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1562,
														"src": "1093:7:8"
													},
													"referencedDeclaration": 1562,
													"src": "1093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:8"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:8"
									},
									"scope": 1630,
									"src": "1074:229:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "1358:35:8",
										"statements": [
											{
												"expression": {
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1622,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "1368:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1624,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:8",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1561,
														"src": "1368:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:8"
											}
										]
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "1324:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1618,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1617,
														"name": "Counter",
														"nameLocations": [
															"1324:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1562,
														"src": "1324:7:8"
													},
													"referencedDeclaration": 1562,
													"src": "1324:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:8"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:8"
									},
									"scope": 1630,
									"src": "1309:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1631,
							"src": "424:971:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2975
						],
						"SignedMath": [
							3080
						],
						"Strings": [
							1885
						]
					},
					"id": 1886,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1886,
							"sourceUnit": 2976,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1633,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2975,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1886,
							"sourceUnit": 3081,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1635,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3080,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1637,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1885,
							"linearizedBaseContracts": [
								1885
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1640,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1885,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1638,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1643,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1885,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1641,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1642,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1650,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 1696,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1659
														],
														"declarations": [
															{
																"constant": false,
																"id": 1659,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1696,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1658,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1666,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1662,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1660,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2975,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2975_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2795,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1668
														],
														"declarations": [
															{
																"constant": false,
																"id": 1668,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1696,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1667,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1673,
														"initialValue": {
															"arguments": [
																{
																	"id": 1671,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1669,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															1675
														],
														"declarations": [
															{
																"constant": false,
																"id": 1675,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1696,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1674,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1676,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1668,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1659,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1675,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 1677,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 1692,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 1680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 1679,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1675,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1681,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1640,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1675,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1653,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1682,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1683,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1653,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1686,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1687,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1653,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1691,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 1690,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1693,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 1694,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1657,
														"id": 1695,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1655,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 1885,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1709,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1718,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1701,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1716,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3080,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3080_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3079,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1715,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1706,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1705,
												"id": 1722,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1700,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 1885,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1743,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 1742,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1733,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1736,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1727,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1734,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2975,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2975_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2917,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1732,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1744,
																	1827,
																	1847
																],
																"referencedDeclaration": 1827,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1731,
														"id": 1741,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 1885,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													1755
												],
												"declarations": [
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1826,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1757,
												"initialValue": {
													"id": 1756,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1747,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													1759
												],
												"declarations": [
													{
														"constant": false,
														"id": 1759,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1826,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1758,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1768,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1763,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1760,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1769,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1771,
														"indexExpression": {
															"hexValue": "30",
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1775,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1777,
														"indexExpression": {
															"hexValue": "31",
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1780,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 1809,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1795,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1759,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1797,
																	"indexExpression": {
																		"id": 1796,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1782,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1798,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1802,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1799,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1755,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1804,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1805,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1755,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1808,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1789,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1810,
												"initializationExpression": {
													"assignments": [
														1782
													],
													"declarations": [
														{
															"constant": false,
															"id": 1782,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1810,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1781,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1788,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1784,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1749,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 1792,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1794,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1811,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1820,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 1819,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1815,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1816,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1749,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1814,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1818,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1823,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1821,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1753,
												"id": 1825,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 1745,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1751,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 1885,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1840,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1838,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1836,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1843,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1835,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1744,
															1827,
															1847
														],
														"referencedDeclaration": 1827,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1834,
												"id": 1845,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1832,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 1885,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1859,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1850,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1857,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1864,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1852,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1862,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1871,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1869,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1868,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1877,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1852,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1875,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1874,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1856,
												"id": 1882,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1849,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1851,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1854,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 1885,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1886,
							"src": "251:2847:9",
							"usedErrors": [
								1650
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1909
						],
						"IERC165": [
							1921
						]
					},
					"id": 1910,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1887,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1910,
							"sourceUnit": 1922,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1888,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1921,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1891,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1921,
										"src": "687:7:10"
									},
									"id": 1892,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1890,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1909,
							"linearizedBaseContracts": [
								1909,
								1921
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1920
									],
									"body": {
										"id": 1907,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1900,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1902,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1921_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1921_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1901,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1921",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1899,
												"id": 1906,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 1893,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1894,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 1909,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1910,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1921
						]
					},
					"id": 1922,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1911,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1912,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1921,
							"linearizedBaseContracts": [
								1921
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1914,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1917,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 1921,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1922,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2975
						]
					},
					"id": 2976,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1923,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1924,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2975,
							"linearizedBaseContracts": [
								2975
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1927,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1932,
									"members": [
										{
											"id": 1928,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 1929,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 1930,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 1931,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 1962,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															1945
														],
														"declarations": [
															{
																"constant": false,
																"id": 1945,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1962,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1944,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1949,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1946,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1947,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1937,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1950,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1945,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1951,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1957,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1943,
															"id": 1956,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1959,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1945,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1960,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1943,
														"id": 1961,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 2975,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 1990,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1976,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1977,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1967,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1983,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1975,
															"id": 1982,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1985,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1967,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1986,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1969,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1988,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1975,
														"id": 1989,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 2975,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2032,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2004,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1995,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2011,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2009,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2003,
															"id": 2010,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															2013
														],
														"declarations": [
															{
																"constant": false,
																"id": 2013,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2032,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2012,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2017,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2014,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1995,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2015,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2018,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2019,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2021,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2027,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2025,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2003,
															"id": 2026,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2029,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2030,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2003,
														"id": 2031,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1999,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 2975,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2061,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2060,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2046,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2039,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2053,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2051,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2045,
															"id": 2052,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2055,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2037,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2056,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2039,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2058,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2045,
														"id": 2059,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2035,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 2975,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2089,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2088,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2074,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2081,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2079,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2073,
															"id": 2080,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2083,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2065,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2084,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2067,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2086,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2073,
														"id": 2087,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2063,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 2975,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2100,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2101,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2104,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2095,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2103,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2093,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2099,
												"id": 2106,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 2975,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2125,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2119,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2122,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2113,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2121,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2117,
												"id": 2124,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2109,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 2975,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2148,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2136,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2129,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2137,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2139,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2140,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2129,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2141,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2131,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2143,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2135,
												"id": 2147,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 2975,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2159,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2154,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2167,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2166,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2162,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2163,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2158,
															"id": 2165,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2168,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2172,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2152,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2175,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2176,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2154,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2158,
												"id": 2181,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2150,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 2975,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2307,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2196
														],
														"declarations": [
															{
																"constant": false,
																"id": 2196,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2307,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2195,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2200,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2197,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2186,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2198,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2202
														],
														"declarations": [
															{
																"constant": false,
																"id": 2202,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2307,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2201,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2203,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:12",
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nativeSrc": "4410:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nativeSrc": "4433:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nativeSrc": "4420:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:12",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:12",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nativeSrc": "4470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nativeSrc": "4486:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nativeSrc": "4466:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2196,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2196,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2186,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2188,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2204,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2205,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2213,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2212,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2208,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2209,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2194,
																	"id": 2211,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2214,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2215,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2221,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2220,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2217,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1927,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2219,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2223
														],
														"declarations": [
															{
																"constant": false,
																"id": 2223,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2307,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2222,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2224,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:12",
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nativeSrc": "5513:38:12",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nativeSrc": "5526:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:12",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nativeSrc": "5653:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nativeSrc": "5642:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:12",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nativeSrc": "5700:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2190,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2196,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2196,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2196,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2223,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2223,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2223,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2186,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2188,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2225,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2227
														],
														"declarations": [
															{
																"constant": false,
																"id": 2227,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2307,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2226,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2234,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2228,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2230,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2232,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:12",
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nativeSrc": "6073:37:12",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nativeSrc": "6088:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:12",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nativeSrc": "6186:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:12",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nativeSrc": "6333:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nativeSrc": "6329:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nativeSrc": "6325:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2190,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2190,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2196,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2196,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2227,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2227,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2227,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2227,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2227,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2235,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2236,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2237,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2238,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2227,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2241,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2243
														],
														"declarations": [
															{
																"constant": false,
																"id": 2243,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2307,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2242,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2250,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2245,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2247,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2251,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2253,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2190,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2254,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2258,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2259,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2261,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2190,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2262,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2266,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2267,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2269,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2190,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2270,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2274,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2275,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2277,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2190,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2278,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2282,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2283,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2285,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2190,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2286,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2290,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2291,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2293,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2190,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2294,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2298,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2299,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2193,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2300,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2301,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2243,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2304,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2305,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2193,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2194,
														"id": 2306,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 2975,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2351,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2325
												],
												"declarations": [
													{
														"constant": false,
														"id": 2325,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2351,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2324,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2331,
												"initialValue": {
													"arguments": [
														{
															"id": 2327,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2328,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2329,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2326,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2309,
															2352
														],
														"referencedDeclaration": 2309,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2333,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2319,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1932",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1932",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2332,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1932_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2336,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2312,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2337,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2314,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2338,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2316,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2335,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2348,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2347,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2343,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2325,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2346,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2349,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2325,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2323,
												"id": 2350,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2310,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1932",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2318,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2317,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1932,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 1932,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1932",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 2975,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2360,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2366,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2365,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2359,
															"id": 2364,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2368
												],
												"declarations": [
													{
														"constant": false,
														"id": 2368,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2463,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2377,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2371,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2355,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2370,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2631,
																			2666
																		],
																		"referencedDeclaration": 2631,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2375,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2462,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2378,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2379,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2368,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2380,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2355,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2381,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2368,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2384,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2388,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2389,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2390,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2368,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2391,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2355,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2392,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2368,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2395,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2399,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2400,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2401,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2368,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2404,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2402,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2355,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2403,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2368,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2406,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2410,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2411,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2412,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2368,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2413,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2355,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2414,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2368,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2417,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2421,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2422,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2423,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2368,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2424,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2355,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2425,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2368,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2428,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2432,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2433,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2434,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2368,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2435,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2355,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2436,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2368,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2439,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2443,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2444,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2445,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2368,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2446,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2355,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2447,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2368,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2450,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2454,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2456,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2457,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2355,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2458,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2368,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2455,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2359,
														"id": 2461,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2353,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 2975,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2497,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2476
														],
														"declarations": [
															{
																"constant": false,
																"id": 2476,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2497,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2475,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2480,
														"initialValue": {
															"arguments": [
																{
																	"id": 2478,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2467,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2477,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2464,
																	2499
																],
																"referencedDeclaration": 2464,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2481,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2476,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2483,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2470,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1932",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1932",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2482,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2974,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1932_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2487,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2485,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2476,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2486,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2476,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2488,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2467,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2494,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2474,
														"id": 2496,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2465,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1932",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2469,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2468,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1932,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 1932,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1932",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 2975,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2630,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2508
												],
												"declarations": [
													{
														"constant": false,
														"id": 2508,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2630,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2510,
												"initialValue": {
													"hexValue": "30",
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2627,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2511,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2525,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2524,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2516,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2502,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2519,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2520,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2523,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2526,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2540,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2539,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2531,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2502,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2534,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2535,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2538,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2541,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2555,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2554,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2546,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2502,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2549,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2550,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2553,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2556,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2570,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2569,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2561,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2502,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2564,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2565,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2568,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2571,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2585,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2584,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2576,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2502,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2579,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2580,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2583,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2586,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2600,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2599,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2591,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2502,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2594,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2595,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2598,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2615,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2614,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2606,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2502,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2610,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2613,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2616,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2626,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2625,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2621,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2624,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2628,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2508,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2506,
												"id": 2629,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 2975,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2665,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2664,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2643
														],
														"declarations": [
															{
																"constant": false,
																"id": 2643,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2664,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2642,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2647,
														"initialValue": {
															"arguments": [
																{
																	"id": 2645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2634,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2644,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2631,
																	2666
																],
																"referencedDeclaration": 2631,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2648,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2650,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2637,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1932",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1932",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2649,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2974,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1932_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2652,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2653,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2643,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2655,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2634,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2661,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2641,
														"id": 2663,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2632,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1932",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2635,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1932,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 1932,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1932",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 2975,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2794,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2675
												],
												"declarations": [
													{
														"constant": false,
														"id": 2675,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2794,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2677,
												"initialValue": {
													"hexValue": "30",
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 2791,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2678,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2694,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2693,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2683,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2669,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2688,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2689,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2692,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2695,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2711,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2710,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2700,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2669,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2705,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2706,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2709,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2712,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2728,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2727,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2717,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2669,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2722,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2723,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2726,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2729,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2745,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 2744,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2734,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2669,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2739,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2740,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2743,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2746,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2762,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 2761,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2751,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2669,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2756,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2757,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2760,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2763,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2779,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 2778,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2768,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2669,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2773,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 2776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2774,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2777,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2780,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2790,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 2789,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2785,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2788,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2792,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2675,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2673,
												"id": 2793,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2667,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 2975,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 2828,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															2807
														],
														"declarations": [
															{
																"constant": false,
																"id": 2807,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2828,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2806,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2811,
														"initialValue": {
															"arguments": [
																{
																	"id": 2809,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2798,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2808,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2795,
																	2830
																],
																"referencedDeclaration": 2795,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2812,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2807,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2814,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2801,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1932",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1932",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2813,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2974,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1932_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2816,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2817,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2807,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2819,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2798,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2825,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2805,
														"id": 2827,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2796,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1932",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2799,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1932,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 1932,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1932",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 2975,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2916,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													2839
												],
												"declarations": [
													{
														"constant": false,
														"id": 2839,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2916,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2838,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2841,
												"initialValue": {
													"hexValue": "30",
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 2913,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2842,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2833,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2856,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 2855,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2847,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2833,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2850,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 2853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2851,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2839,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2854,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2857,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2833,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2871,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 2870,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2862,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2833,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2865,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2866,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2839,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2869,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2872,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2833,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2886,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 2885,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2877,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2833,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2880,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 2883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2881,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2839,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2884,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2887,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2833,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2901,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 2900,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2892,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2833,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2895,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 2898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2896,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2839,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2899,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2902,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2833,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2912,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 2911,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2907,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2839,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2910,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2914,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2839,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2837,
												"id": 2915,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 2831,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 2975,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2954,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 2953,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															2929
														],
														"declarations": [
															{
																"constant": false,
																"id": 2929,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2953,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2928,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2933,
														"initialValue": {
															"arguments": [
																{
																	"id": 2931,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2920,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2930,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2917,
																	2955
																],
																"referencedDeclaration": 2917,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2934,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2929,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2936,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2923,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1932",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1932",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2935,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2974,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1932_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2937,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2943,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2938,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2941,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2939,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2929,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2940,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2942,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2944,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2950,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2927,
														"id": 2952,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2918,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1932",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2922,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2921,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1932,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 1932,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1932",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 2975,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2973,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2966,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2959,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1932",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1932",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2964,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2963,
												"id": 2972,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 2956,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2959,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1932",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2957,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1932,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 1932,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1932",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 2963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 2975,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2976,
							"src": "203:14914:12",
							"usedErrors": [
								1927
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3080
						]
					},
					"id": 3081,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2977,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2978,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3080,
							"linearizedBaseContracts": [
								3080
							],
							"name": "SignedMath",
							"nameLocation": "224:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "376:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2988,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2981,
															"src": "393:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2989,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2983,
															"src": "397:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2992,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2983,
														"src": "405:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:13",
													"trueExpression": {
														"id": 2991,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2981,
														"src": "401:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2987,
												"id": 2994,
												"nodeType": "Return",
												"src": "386:20:13"
											}
										]
									},
									"documentation": {
										"id": 2979,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "325:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2980,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2983,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2982,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:13"
									},
									"returnParameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "368:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2985,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:13"
									},
									"scope": 3080,
									"src": "312:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3013,
										"nodeType": "Block",
										"src": "555:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3006,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2999,
															"src": "572:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3007,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "576:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3010,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3001,
														"src": "584:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:13",
													"trueExpression": {
														"id": 3009,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "580:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3005,
												"id": 3012,
												"nodeType": "Return",
												"src": "565:20:13"
											}
										]
									},
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "504:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2998,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3001,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3000,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:13"
									},
									"returnParameters": {
										"id": 3005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "547:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3003,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:13"
									},
									"scope": 3080,
									"src": "491:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3057,
										"nodeType": "Block",
										"src": "797:162:13",
										"statements": [
											{
												"assignments": [
													3025
												],
												"declarations": [
													{
														"constant": false,
														"id": 3025,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3057,
														"src": "859:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3024,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3038,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3026,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3017,
																	"src": "871:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3027,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3019,
																	"src": "875:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3029,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3030,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3017,
																				"src": "882:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3031,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3019,
																				"src": "886:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3033,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3036,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3039,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3025,
														"src": "911:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3044,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3025,
																						"src": "931:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3043,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3042,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3040,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3049,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3017,
																				"src": "945:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3050,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3019,
																				"src": "949:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3052,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3054,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3023,
												"id": 3056,
												"nodeType": "Return",
												"src": "904:48:13"
											}
										]
									},
									"documentation": {
										"id": 3015,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3017,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "746:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3016,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3019,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3018,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:13"
									},
									"returnParameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "789:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3021,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:13"
									},
									"scope": 3080,
									"src": "729:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3078,
										"nodeType": "Block",
										"src": "1103:158:13",
										"statements": [
											{
												"id": 3077,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3068,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3061,
																			"src": "1228:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:13",
																		"subExpression": {
																			"id": 3072,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3061,
																			"src": "1242:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:13",
																	"trueExpression": {
																		"id": 3071,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3061,
																		"src": "1237:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3066,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3065,
														"id": 3076,
														"nodeType": "Return",
														"src": "1213:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3059,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3061,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3079,
												"src": "1061:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3060,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:13"
									},
									"returnParameters": {
										"id": 3065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3079,
												"src": "1094:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:13"
									},
									"scope": 3080,
									"src": "1048:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3081,
							"src": "216:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:13"
				},
				"id": 13
			},
			"contracts/NFTPatient.sol": {
				"ast": {
					"absolutePath": "contracts/NFTPatient.sol",
					"exportedSymbols": {
						"Context": [
							1556
						],
						"Counters": [
							1630
						],
						"ERC165": [
							1909
						],
						"ERC721": [
							1371
						],
						"IERC165": [
							1921
						],
						"IERC20": [
							362
						],
						"IERC721": [
							1488
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1534
						],
						"IERC721Receiver": [
							1506
						],
						"NFTPatientHealthChain": [
							3317
						],
						"Ownable": [
							147
						],
						"Strings": [
							1885
						]
					},
					"id": 3318,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3082,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3083,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3318,
							"sourceUnit": 1372,
							"src": "61:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3084,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3318,
							"sourceUnit": 148,
							"src": "120:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3085,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3318,
							"sourceUnit": 1631,
							"src": "174:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3086,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3318,
							"sourceUnit": 363,
							"src": "228:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3087,
										"name": "ERC721",
										"nameLocations": [
											"322:6:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1371,
										"src": "322:6:14"
									},
									"id": 3088,
									"nodeType": "InheritanceSpecifier",
									"src": "322:6:14"
								},
								{
									"baseName": {
										"id": 3089,
										"name": "Ownable",
										"nameLocations": [
											"330:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "330:7:14"
									},
									"id": 3090,
									"nodeType": "InheritanceSpecifier",
									"src": "330:7:14"
								}
							],
							"canonicalName": "NFTPatientHealthChain",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3317,
							"linearizedBaseContracts": [
								3317,
								147,
								1371,
								237,
								1534,
								1488,
								1909,
								1921,
								1556
							],
							"name": "NFTPatientHealthChain",
							"nameLocation": "297:21:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3094,
									"libraryName": {
										"id": 3091,
										"name": "Counters",
										"nameLocations": [
											"351:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1630,
										"src": "351:8:14"
									},
									"nodeType": "UsingForDirective",
									"src": "345:36:14",
									"typeName": {
										"id": 3093,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3092,
											"name": "Counters.Counter",
											"nameLocations": [
												"364:8:14",
												"373:7:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1562,
											"src": "364:16:14"
										},
										"referencedDeclaration": 1562,
										"src": "364:16:14",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3097,
									"mutability": "mutable",
									"name": "_tokenIds",
									"nameLocation": "412:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3317,
									"src": "387:34:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1562_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3096,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3095,
											"name": "Counters.Counter",
											"nameLocations": [
												"387:8:14",
												"396:7:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1562,
											"src": "387:16:14"
										},
										"referencedDeclaration": 1562,
										"src": "387:16:14",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1562_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "b8fcf937",
									"id": 3100,
									"mutability": "mutable",
									"name": "myToken",
									"nameLocation": "444:7:14",
									"nodeType": "VariableDeclaration",
									"scope": 3317,
									"src": "430:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$362",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3099,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3098,
											"name": "IERC20",
											"nameLocations": [
												"430:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 362,
											"src": "430:6:14"
										},
										"referencedDeclaration": 362,
										"src": "430:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$362",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "863b3894",
									"id": 3102,
									"mutability": "mutable",
									"name": "housewallet",
									"nameLocation": "516:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 3317,
									"src": "501:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3101,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "501:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3106,
									"mutability": "mutable",
									"name": "_nftExists",
									"nameLocation": "643:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 3317,
									"src": "610:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 3105,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3103,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "618:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "610:24:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3104,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "629:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3110,
									"mutability": "mutable",
									"name": "_completedTransactions",
									"nameLocation": "693:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 3317,
									"src": "660:55:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 3109,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3107,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "668:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "660:24:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3108,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "679:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "9f9ac6bca37e427696541548195017f8d7569c1bdff1ba5b97d815bfb9c11f8c",
									"id": 3122,
									"name": "NFTTransferred",
									"nameLocation": "797:14:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3112,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "828:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "812:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3114,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "850:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "834:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3116,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "862:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "854:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3118,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "879:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "871:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3120,
												"indexed": false,
												"mutability": "mutable",
												"name": "txHash",
												"nameLocation": "900:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "892:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:96:14"
									},
									"src": "791:117:14"
								},
								{
									"body": {
										"id": 3148,
										"nodeType": "Block",
										"src": "1048:89:14",
										"statements": [
											{
												"expression": {
													"id": 3142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3138,
														"name": "myToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3100,
														"src": "1059:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$362",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3140,
																"name": "_myTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3124,
																"src": "1076:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3139,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "1069:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$362_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 3141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1069:23:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$362",
															"typeString": "contract IERC20"
														}
													},
													"src": "1059:33:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$362",
														"typeString": "contract IERC20"
													}
												},
												"id": 3143,
												"nodeType": "ExpressionStatement",
												"src": "1059:33:14"
											},
											{
												"expression": {
													"id": 3146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3144,
														"name": "housewallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3102,
														"src": "1103:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3145,
														"name": "_housewallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3128,
														"src": "1117:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1103:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3147,
												"nodeType": "ExpressionStatement",
												"src": "1103:26:14"
											}
										]
									},
									"id": 3149,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e465450617469656e74",
													"id": 3131,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1004:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ec6c6cc5bab43a4c0ce11155b1abd4b326d6e9ec1e7195a09b5219da9e905190",
														"typeString": "literal_string \"NFTPatient\""
													},
													"value": "NFTPatient"
												},
												{
													"hexValue": "4e504e54",
													"id": 3132,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1018:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_87b6cb64bb6d9cd7dee292f48e964fda0452b2d484e874e596a61c727351f5f5",
														"typeString": "literal_string \"NPNT\""
													},
													"value": "NPNT"
												}
											],
											"id": 3133,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3130,
												"name": "ERC721",
												"nameLocations": [
													"997:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1371,
												"src": "997:6:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "997:28:14"
										},
										{
											"arguments": [
												{
													"id": 3135,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3126,
													"src": "1034:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3136,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3134,
												"name": "Ownable",
												"nameLocations": [
													"1026:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1026:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1026:21:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "_myTokenAddress",
												"nameLocation": "936:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "928:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "961:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "953:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "_housewallet",
												"nameLocation": "983:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "975:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:69:14"
									},
									"returnParameters": {
										"id": 3137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1048:0:14"
									},
									"scope": 3317,
									"src": "916:221:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3177,
										"nodeType": "Block",
										"src": "1271:151:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1290:20:14",
															"subExpression": {
																"baseExpression": {
																	"id": 3159,
																	"name": "_nftExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3106,
																	"src": "1291:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 3161,
																"indexExpression": {
																	"id": 3160,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3153,
																	"src": "1302:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1291:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e46542077697468207468697320494420616c726561647920657869737473",
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1312:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f",
																"typeString": "literal_string \"NFT with this ID already exists\""
															},
															"value": "NFT with this ID already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1be67a0a2e8592e37b474ec25f876bafe7c3fa13ec1cafb10ae43c46835bb63f",
																"typeString": "literal_string \"NFT with this ID already exists\""
															}
														],
														"id": 3158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1282:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1282:64:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3165,
												"nodeType": "ExpressionStatement",
												"src": "1282:64:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3167,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3151,
															"src": "1365:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3168,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "1369:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3166,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1359:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1359:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3170,
												"nodeType": "ExpressionStatement",
												"src": "1359:18:14"
											},
											{
												"expression": {
													"id": 3175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3171,
															"name": "_nftExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3106,
															"src": "1388:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3173,
														"indexExpression": {
															"id": 3172,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "1399:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1388:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1410:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1388:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3176,
												"nodeType": "ExpressionStatement",
												"src": "1388:26:14"
											}
										]
									},
									"functionSelector": "3c168eab",
									"id": 3178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3156,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3155,
												"name": "onlyOwner",
												"nameLocations": [
													"1261:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1261:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1261:9:14"
										}
									],
									"name": "mintNFT",
									"nameLocation": "1217:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1233:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "1225:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1245:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "1237:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:29:14"
									},
									"returnParameters": {
										"id": 3157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1271:0:14"
									},
									"scope": 3317,
									"src": "1208:214:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3216,
										"nodeType": "Block",
										"src": "1606:296:14",
										"statements": [
											{
												"assignments": [
													3186
												],
												"declarations": [
													{
														"constant": false,
														"id": 3186,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "1625:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 3216,
														"src": "1617:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3185,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1617:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3190,
												"initialValue": {
													"arguments": [
														{
															"id": 3188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3182,
															"src": "1641:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3187,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "1633:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1633:16:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1617:32:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3192,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "1668:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3193,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1677:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1681:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1677:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1668:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973204e4654",
															"id": 3196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1689:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
																"typeString": "literal_string \"You are not the owner of this NFT\""
															},
															"value": "You are not the owner of this NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
																"typeString": "literal_string \"You are not the owner of this NFT\""
															}
														],
														"id": 3191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1660:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:65:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3198,
												"nodeType": "ExpressionStatement",
												"src": "1660:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3200,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3186,
															"src": "1746:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3201,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3180,
															"src": "1753:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3202,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3182,
															"src": "1757:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3199,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1736:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1736:29:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3204,
												"nodeType": "ExpressionStatement",
												"src": "1736:29:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3206,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3186,
															"src": "1860:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3207,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3180,
															"src": "1867:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3208,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3182,
															"src": "1871:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 3209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1880:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1891:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1883:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3210,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1883:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1883:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3205,
														"name": "NFTTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3122,
														"src": "1845:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes32)"
														}
													},
													"id": 3214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1845:49:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3215,
												"nodeType": "EmitStatement",
												"src": "1840:54:14"
											}
										]
									},
									"functionSelector": "94ab67fe",
									"id": 3217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferNFT",
									"nameLocation": "1558:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3180,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1578:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3217,
												"src": "1570:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1570:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3182,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1590:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3217,
												"src": "1582:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1569:29:14"
									},
									"returnParameters": {
										"id": 3184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1606:0:14"
									},
									"scope": 3317,
									"src": "1549:353:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3289,
										"nodeType": "Block",
										"src": "2122:922:14",
										"statements": [
											{
												"assignments": [
													3229
												],
												"declarations": [
													{
														"constant": false,
														"id": 3229,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2216:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 3289,
														"src": "2208:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3228,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2208:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3233,
												"initialValue": {
													"arguments": [
														{
															"id": 3231,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "2232:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3230,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "2224:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:16:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2208:32:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3235,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3229,
																"src": "2259:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3236,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2268:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2272:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2268:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2259:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973204e4654",
															"id": 3239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2280:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
																"typeString": "literal_string \"You are not the owner of this NFT\""
															},
															"value": "You are not the owner of this NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
																"typeString": "literal_string \"You are not the owner of this NFT\""
															}
														],
														"id": 3234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2251:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2251:65:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3241,
												"nodeType": "ExpressionStatement",
												"src": "2251:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3243,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3229,
															"src": "2385:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3244,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3219,
															"src": "2392:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3245,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "2396:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3242,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2375:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:29:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3247,
												"nodeType": "ExpressionStatement",
												"src": "2375:29:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3251,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3219,
																	"src": "2521:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3252,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3229,
																	"src": "2525:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3253,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3223,
																	"src": "2532:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3249,
																	"name": "myToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3100,
																	"src": "2500:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$362",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 3250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2508:12:14",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 361,
																"src": "2500:20:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 3254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2500:44:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20416d6f756e74207472616e73666572206661696c6564",
															"id": 3255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd",
																"typeString": "literal_string \"Token Amount transfer failed\""
															},
															"value": "Token Amount transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f827ec82147e633138edab44728bedc523060b10daee37056bad107cc6ec71fd",
																"typeString": "literal_string \"Token Amount transfer failed\""
															}
														],
														"id": 3248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2492:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2492:85:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3257,
												"nodeType": "ExpressionStatement",
												"src": "2492:85:14"
											},
											{
												"assignments": [
													3259
												],
												"declarations": [
													{
														"constant": false,
														"id": 3259,
														"mutability": "mutable",
														"name": "txHash",
														"nameLocation": "2647:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3289,
														"src": "2639:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3258,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2639:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3272,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3263,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2683:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2687:6:14",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2683:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3265,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3219,
																	"src": "2695:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3266,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3221,
																	"src": "2699:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3267,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3223,
																	"src": "2708:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 3268,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2721:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2727:6:14",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "2721:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3261,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2666:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2670:12:14",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2666:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2666:68:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3260,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2656:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:79:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2639:96:14"
											},
											{
												"expression": {
													"id": 3277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3273,
															"name": "_completedTransactions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3110,
															"src": "2801:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 3275,
														"indexExpression": {
															"id": 3274,
															"name": "txHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3259,
															"src": "2824:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2801:30:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2834:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2801:38:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3278,
												"nodeType": "ExpressionStatement",
												"src": "2801:38:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3280,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3229,
															"src": "2936:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3281,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3219,
															"src": "2943:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3282,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "2947:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3283,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3223,
															"src": "2956:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3284,
															"name": "txHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3259,
															"src": "2969:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3279,
														"name": "NFTTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3122,
														"src": "2921:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes32)"
														}
													},
													"id": 3285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2921:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3286,
												"nodeType": "EmitStatement",
												"src": "2916:60:14"
											},
											{
												"expression": {
													"id": 3287,
													"name": "txHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3259,
													"src": "2996:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3227,
												"id": 3288,
												"nodeType": "Return",
												"src": "2989:13:14"
											}
										]
									},
									"functionSelector": "8f3481c0",
									"id": 3290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferNFTWithToken",
									"nameLocation": "2018:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2047:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "2039:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3221,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2059:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "2051:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3223,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2076:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "2068:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2068:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:50:14"
									},
									"returnParameters": {
										"id": 3227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "2113:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3225,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:9:14"
									},
									"scope": 3317,
									"src": "2009:1035:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3301,
										"nodeType": "Block",
										"src": "3213:138:14",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3297,
														"name": "_completedTransactions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3110,
														"src": "3313:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 3299,
													"indexExpression": {
														"id": 3298,
														"name": "txHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3292,
														"src": "3336:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3313:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3296,
												"id": 3300,
												"nodeType": "Return",
												"src": "3306:37:14"
											}
										]
									},
									"functionSelector": "94407465",
									"id": 3302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTransactionStatus",
									"nameLocation": "3149:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "txHash",
												"nameLocation": "3178:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3302,
												"src": "3170:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3170:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3169:16:14"
									},
									"returnParameters": {
										"id": 3296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3302,
												"src": "3207:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3207:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3206:6:14"
									},
									"scope": 3317,
									"src": "3140:211:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3315,
										"nodeType": "Block",
										"src": "3515:56:14",
										"statements": [
											{
												"expression": {
													"id": 3313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3309,
															"name": "_completedTransactions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3110,
															"src": "3526:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 3311,
														"indexExpression": {
															"id": 3310,
															"name": "txHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3304,
															"src": "3549:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3526:30:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3559:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3526:37:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3314,
												"nodeType": "ExpressionStatement",
												"src": "3526:37:14"
											}
										]
									},
									"functionSelector": "37418972",
									"id": 3316,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3306,
												"name": "onlyOwner",
												"nameLocations": [
													"3505:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3505:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3505:9:14"
										}
									],
									"name": "markTransactionCompleted",
									"nameLocation": "3457:24:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "txHash",
												"nameLocation": "3490:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "3482:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:16:14"
									},
									"returnParameters": {
										"id": 3308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3515:0:14"
									},
									"scope": 3317,
									"src": "3448:123:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3318,
							"src": "288:3286:14",
							"usedErrors": [
								13,
								18,
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								24,
								1387,
								1396,
								1405,
								3122
							]
						}
					],
					"src": "33:3541:14"
				},
				"id": 14
			}
		}
	}
}